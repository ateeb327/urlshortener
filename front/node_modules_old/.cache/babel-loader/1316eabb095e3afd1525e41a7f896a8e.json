{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nimport { Spinner } from '../Spinner';\nexport class DropdownToggleCheckbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      var _a, _b;\n      (_b = (_a = this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, event.target.checked, event);\n    };\n    this.calculateChecked = () => {\n      const {\n        isChecked,\n        checked\n      } = this.props;\n      if (isChecked === null) {\n        // return false here and the indeterminate state will be set to true through the ref\n        return false;\n      } else if (isChecked !== undefined) {\n        return isChecked;\n      }\n      return checked;\n    };\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(DropdownToggleCheckbox.displayName)\n    };\n  }\n  render() {\n    const _a = this.props,\n      {\n        className,\n        isValid,\n        isDisabled,\n        isChecked,\n        isInProgress = false,\n        defaultProgressAriaLabel,\n        defaultProgressAriaValueText = 'Loading...',\n        children,\n        ouiaId,\n        ouiaSafe,\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        onChange,\n        checked\n      } = _a,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      props = __rest(_a, [\"className\", \"isValid\", \"isDisabled\", \"isChecked\", \"isInProgress\", \"defaultProgressAriaLabel\", \"defaultProgressAriaValueText\", \"children\", \"ouiaId\", \"ouiaSafe\", \"onChange\", \"checked\"]);\n    const spinner = React.createElement(Spinner, {\n      diameter: \"1em\",\n      isSVG: true,\n      \"aria-valuetext\": defaultProgressAriaValueText,\n      \"aria-live\": \"polite\",\n      \"aria-label\": defaultProgressAriaLabel\n    });\n    const text = children && React.createElement(\"span\", {\n      className: css(styles.dropdownToggleText, className),\n      \"aria-hidden\": \"true\",\n      id: `${props.id}-text`\n    }, children);\n    return React.createElement(\"label\", {\n      className: css(styles.dropdownToggleCheck, isInProgress && styles.modifiers.inProgress, className),\n      htmlFor: props.id\n    }, React.createElement(\"input\", Object.assign({}, props, this.calculateChecked() !== undefined && {\n      onChange: this.handleChange\n    }, {\n      type: \"checkbox\",\n      ref: elem => elem && (elem.indeterminate = isChecked === null),\n      \"aria-invalid\": !isValid,\n      disabled: isDisabled,\n      checked: this.calculateChecked()\n    }, getOUIAProps(DropdownToggleCheckbox.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe))), isInProgress && React.createElement(\"span\", {\n      className: css(styles.dropdownToggleProgress, className)\n    }, spinner), text);\n  }\n}\nDropdownToggleCheckbox.displayName = 'DropdownToggleCheckbox';\nDropdownToggleCheckbox.defaultProps = {\n  className: '',\n  isValid: true,\n  isDisabled: false,\n  onChange: () => undefined\n};","map":{"version":3,"sources":["../../../../src/components/Dropdown/DropdownToggleCheckbox.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nimport { Spinner } from '../Spinner';\nexport class DropdownToggleCheckbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            var _a, _b;\n            (_b = (_a = this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, event.target.checked, event);\n        };\n        this.calculateChecked = () => {\n            const { isChecked, checked } = this.props;\n            if (isChecked === null) {\n                // return false here and the indeterminate state will be set to true through the ref\n                return false;\n            }\n            else if (isChecked !== undefined) {\n                return isChecked;\n            }\n            return checked;\n        };\n        this.state = {\n            ouiaStateId: getDefaultOUIAId(DropdownToggleCheckbox.displayName)\n        };\n    }\n    render() {\n        const _a = this.props, { className, isValid, isDisabled, isChecked, isInProgress = false, defaultProgressAriaLabel, defaultProgressAriaValueText = 'Loading...', children, ouiaId, ouiaSafe, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        onChange, checked } = _a, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        props = __rest(_a, [\"className\", \"isValid\", \"isDisabled\", \"isChecked\", \"isInProgress\", \"defaultProgressAriaLabel\", \"defaultProgressAriaValueText\", \"children\", \"ouiaId\", \"ouiaSafe\", \"onChange\", \"checked\"]);\n        const spinner = (React.createElement(Spinner, { diameter: \"1em\", isSVG: true, \"aria-valuetext\": defaultProgressAriaValueText, \"aria-live\": \"polite\", \"aria-label\": defaultProgressAriaLabel }));\n        const text = children && (React.createElement(\"span\", { className: css(styles.dropdownToggleText, className), \"aria-hidden\": \"true\", id: `${props.id}-text` }, children));\n        return (React.createElement(\"label\", { className: css(styles.dropdownToggleCheck, isInProgress && styles.modifiers.inProgress, className), htmlFor: props.id },\n            React.createElement(\"input\", Object.assign({}, props, (this.calculateChecked() !== undefined && { onChange: this.handleChange }), { type: \"checkbox\", ref: elem => elem && (elem.indeterminate = isChecked === null), \"aria-invalid\": !isValid, disabled: isDisabled, checked: this.calculateChecked() }, getOUIAProps(DropdownToggleCheckbox.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe))),\n            isInProgress && React.createElement(\"span\", { className: css(styles.dropdownToggleProgress, className) }, spinner),\n            text));\n    }\n}\nDropdownToggleCheckbox.displayName = 'DropdownToggleCheckbox';\nDropdownToggleCheckbox.defaultProps = {\n    className: '',\n    isValid: true,\n    isDisabled: false,\n    onChange: () => undefined\n};\n//# sourceMappingURL=DropdownToggleCheckbox.js.map"]},"metadata":{},"sourceType":"module"}