{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/MultipleFileUpload/multiple-file-upload';\nimport { css } from '@patternfly/react-styles';\nimport { ExpandableSection } from '../ExpandableSection';\nimport InProgressIcon from '@patternfly/react-icons/dist/esm/icons/in-progress-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nexport const MultipleFileUploadStatus = _a => {\n  var {\n      children,\n      className,\n      statusToggleText,\n      statusToggleIcon\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"statusToggleText\", \"statusToggleIcon\"]);\n  const [icon, setIcon] = React.useState();\n  const [isOpen, setIsOpen] = React.useState(true);\n  React.useEffect(() => {\n    switch (statusToggleIcon) {\n      case 'danger':\n        setIcon(React.createElement(TimesCircleIcon, null));\n        break;\n      case 'success':\n        setIcon(React.createElement(CheckCircleIcon, null));\n        break;\n      case 'inProgress':\n        setIcon(React.createElement(InProgressIcon, null));\n        break;\n      default:\n        setIcon(statusToggleIcon);\n    }\n  }, [statusToggleIcon]);\n  const toggle = React.createElement(\"div\", {\n    className: styles.multipleFileUploadStatusProgress\n  }, React.createElement(\"div\", {\n    className: styles.multipleFileUploadStatusProgressIcon\n  }, icon), React.createElement(\"div\", {\n    className: styles.multipleFileUploadStatusItemProgressText\n  }, statusToggleText));\n  const toggleExpandableSection = () => {\n    setIsOpen(!isOpen);\n  };\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.multipleFileUploadStatus, className)\n  }, props), React.createElement(ExpandableSection, {\n    toggleContent: toggle,\n    isExpanded: isOpen,\n    onToggle: toggleExpandableSection\n  }, React.createElement(\"ul\", {\n    className: \"pf-c-multiple-file-upload__status-list\"\n  }, children)));\n};\nMultipleFileUploadStatus.displayName = 'MultipleFileUploadStatus';","map":{"version":3,"sources":["../../../../src/components/MultipleFileUpload/MultipleFileUploadStatus.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,OAAO,MAAM,MAAM,iFAAiF;AACpG,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,SAAS,iBAAiB,QAAQ,sBAAsB;AACxD,OAAO,cAAc,MAAM,yDAAyD;AACpF,OAAO,eAAe,MAAM,0DAA0D;AACtF,OAAO,eAAe,MAAM,0DAA0D;AAmBtF,OAAO,MAAM,wBAAwB,GAA4D,EAMjE,IAAI;MAN6D;MAC/F,QAAQ;MACR,SAAS;MACT,gBAAgB;MAChB;IAAgB,CAAA,GAAA,EAEc;IAD3B,KAAK,GAAA,MAAA,CAAA,EAAA,EALuF,CAAA,UAAA,EAAA,WAAA,EAAA,kBAAA,EAAA,kBAAA,CAMhG,CADS;EAER,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAA,CAAmB;EACzD,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;EAEhD,KAAK,CAAC,SAAS,CAAC,MAAK;IACnB,QAAQ,gBAAgB;MACtB,KAAK,QAAQ;QACX,OAAO,CAAC,KAAA,CAAA,aAAA,CAAC,eAAe,EAAA,IAAA,CAAG,CAAC;QAC5B;MACF,KAAK,SAAS;QACZ,OAAO,CAAC,KAAA,CAAA,aAAA,CAAC,eAAe,EAAA,IAAA,CAAG,CAAC;QAC5B;MACF,KAAK,YAAY;QACf,OAAO,CAAC,KAAA,CAAA,aAAA,CAAC,cAAc,EAAA,IAAA,CAAG,CAAC;QAC3B;MACF;QACE,OAAO,CAAC,gBAAgB,CAAC;IAC5B;EACH,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC;EAEtB,MAAM,MAAM,GACV,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAE,MAAM,CAAC;EAAgC,CAAA,EACrD,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAE,MAAM,CAAC;EAAoC,CAAA,EAAG,IAAI,CAAO,EACzE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAE,MAAM,CAAC;EAAwC,CAAA,EAAG,gBAAgB,CAAO,CAE5F;EAED,MAAM,uBAAuB,GAAG,CAAA,KAAK;IACnC,SAAS,CAAC,CAAC,MAAM,CAAC;EACpB,CAAC;EAED,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;IAAK,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,wBAAwB,EAAE,SAAS;EAAC,CAAA,EAAM,KAAK,CAAA,EACxE,KAAA,CAAA,aAAA,CAAC,iBAAiB,EAAA;IAAC,aAAa,EAAE,MAAM;IAAE,UAAU,EAAE,MAAM;IAAE,QAAQ,EAAE;EAAuB,CAAA,EAC7F,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;IAAI,SAAS,EAAC;EAAwC,CAAA,EAAE,QAAQ,CAAM,CACpD,CAChB;AAEV,CAAC;AAED,wBAAwB,CAAC,WAAW,GAAG,0BAA0B","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/MultipleFileUpload/multiple-file-upload';\nimport { css } from '@patternfly/react-styles';\nimport { ExpandableSection } from '../ExpandableSection';\nimport InProgressIcon from '@patternfly/react-icons/dist/esm/icons/in-progress-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nexport const MultipleFileUploadStatus = (_a) => {\n    var { children, className, statusToggleText, statusToggleIcon } = _a, props = __rest(_a, [\"children\", \"className\", \"statusToggleText\", \"statusToggleIcon\"]);\n    const [icon, setIcon] = React.useState();\n    const [isOpen, setIsOpen] = React.useState(true);\n    React.useEffect(() => {\n        switch (statusToggleIcon) {\n            case 'danger':\n                setIcon(React.createElement(TimesCircleIcon, null));\n                break;\n            case 'success':\n                setIcon(React.createElement(CheckCircleIcon, null));\n                break;\n            case 'inProgress':\n                setIcon(React.createElement(InProgressIcon, null));\n                break;\n            default:\n                setIcon(statusToggleIcon);\n        }\n    }, [statusToggleIcon]);\n    const toggle = (React.createElement(\"div\", { className: styles.multipleFileUploadStatusProgress },\n        React.createElement(\"div\", { className: styles.multipleFileUploadStatusProgressIcon }, icon),\n        React.createElement(\"div\", { className: styles.multipleFileUploadStatusItemProgressText }, statusToggleText)));\n    const toggleExpandableSection = () => {\n        setIsOpen(!isOpen);\n    };\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.multipleFileUploadStatus, className) }, props),\n        React.createElement(ExpandableSection, { toggleContent: toggle, isExpanded: isOpen, onToggle: toggleExpandableSection },\n            React.createElement(\"ul\", { className: \"pf-c-multiple-file-upload__status-list\" }, children))));\n};\nMultipleFileUploadStatus.displayName = 'MultipleFileUploadStatus';\n//# sourceMappingURL=MultipleFileUploadStatus.js.map"]},"metadata":{},"sourceType":"module"}