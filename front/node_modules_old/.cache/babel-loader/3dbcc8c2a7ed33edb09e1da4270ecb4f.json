{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { canUseDOM } from '../../helpers';\nimport { AlertGroupInline } from './AlertGroupInline';\nexport class AlertGroup extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      container: undefined\n    };\n  }\n  componentDidMount() {\n    const container = document.createElement('div');\n    const target = this.getTargetElement();\n    this.setState({\n      container\n    });\n    target.appendChild(container);\n  }\n  componentWillUnmount() {\n    const target = this.getTargetElement();\n    if (this.state.container) {\n      target.removeChild(this.state.container);\n    }\n  }\n  getTargetElement() {\n    const appendTo = this.props.appendTo;\n    if (typeof appendTo === 'function') {\n      return appendTo();\n    }\n    return appendTo || document.body;\n  }\n  render() {\n    const _a = this.props,\n      {\n        className,\n        children,\n        isToast,\n        isLiveRegion,\n        onOverflowClick,\n        overflowMessage\n      } = _a,\n      props = __rest(_a, [\"className\", \"children\", \"isToast\", \"isLiveRegion\", \"onOverflowClick\", \"overflowMessage\"]);\n    const alertGroup = React.createElement(AlertGroupInline, Object.assign({\n      onOverflowClick: onOverflowClick,\n      className: className,\n      isToast: isToast,\n      isLiveRegion: isLiveRegion,\n      overflowMessage: overflowMessage\n    }, props), children);\n    if (!this.props.isToast) {\n      return alertGroup;\n    }\n    const container = this.state.container;\n    if (!canUseDOM || !container) {\n      return null;\n    }\n    return ReactDOM.createPortal(alertGroup, container);\n  }\n}\nAlertGroup.displayName = 'AlertGroup';","map":{"version":3,"sources":["../../../../src/components/AlertGroup/AlertGroup.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAK,QAAQ,MAAM,WAAW;AACrC,SAAS,SAAS,QAAQ,eAAe;AACzC,SAAS,gBAAgB,QAAQ,oBAAoB;AAuBrD,OAAM,MAAO,UAAW,SAAQ,KAAK,CAAC,SAA2C,CAAA;EAAjF,WAAA,CAAA,EAAA;;IAEE,IAAA,CAAA,KAAK,GAAG;MACN,SAAS,EAAE;KACO;EAkDtB;EAhDE,iBAAiB,CAAA,EAAA;IACf,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;IAC/C,MAAM,MAAM,GAAgB,IAAI,CAAC,gBAAgB,CAAA,CAAE;IACnD,IAAI,CAAC,QAAQ,CAAC;MAAE;IAAS,CAAE,CAAC;IAC5B,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC;EAC/B;EAEA,oBAAoB,CAAA,EAAA;IAClB,MAAM,MAAM,GAAgB,IAAI,CAAC,gBAAgB,CAAA,CAAE;IACnD,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;MACxB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;IACzC;EACH;EAEA,gBAAgB,CAAA,EAAA;IACd,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ;IACpC,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;MAClC,OAAO,QAAQ,CAAA,CAAE;IAClB;IACD,OAAO,QAAQ,IAAI,QAAQ,CAAC,IAAI;EAClC;EAEA,MAAM,CAAA,EAAA;IACJ,MAAM,EAAA,GAA6F,IAAI,CAAC,KAAK;MAAvG;QAAE,SAAS;QAAE,QAAQ;QAAE,OAAO;QAAE,YAAY;QAAE,eAAe;QAAE;MAAe,CAAA,GAAA,EAAyB;MAApB,KAAK,GAAA,MAAA,CAAA,EAAA,EAAxF,CAAA,WAAA,EAAA,UAAA,EAAA,SAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,iBAAA,CAA0F,CAAa;IAC7G,MAAM,UAAU,GACd,KAAA,CAAA,aAAA,CAAC,gBAAgB,EAAA,MAAA,CAAA,MAAA,CAAA;MACf,eAAe,EAAE,eAAe;MAChC,SAAS,EAAE,SAAS;MACpB,OAAO,EAAE,OAAO;MAChB,YAAY,EAAE,YAAY;MAC1B,eAAe,EAAE;IAAe,CAAA,EAC5B,KAAK,CAAA,EAER,QAAQ,CAEZ;IACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;MACvB,OAAO,UAAU;IAClB;IAED,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS;IAEtC,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,EAAE;MAC5B,OAAO,IAAI;IACZ;IAED,OAAO,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,SAAS,CAAC;EACrD;;AApDO,UAAA,CAAA,WAAW,GAAG,YAAY","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { canUseDOM } from '../../helpers';\nimport { AlertGroupInline } from './AlertGroupInline';\nexport class AlertGroup extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            container: undefined\n        };\n    }\n    componentDidMount() {\n        const container = document.createElement('div');\n        const target = this.getTargetElement();\n        this.setState({ container });\n        target.appendChild(container);\n    }\n    componentWillUnmount() {\n        const target = this.getTargetElement();\n        if (this.state.container) {\n            target.removeChild(this.state.container);\n        }\n    }\n    getTargetElement() {\n        const appendTo = this.props.appendTo;\n        if (typeof appendTo === 'function') {\n            return appendTo();\n        }\n        return appendTo || document.body;\n    }\n    render() {\n        const _a = this.props, { className, children, isToast, isLiveRegion, onOverflowClick, overflowMessage } = _a, props = __rest(_a, [\"className\", \"children\", \"isToast\", \"isLiveRegion\", \"onOverflowClick\", \"overflowMessage\"]);\n        const alertGroup = (React.createElement(AlertGroupInline, Object.assign({ onOverflowClick: onOverflowClick, className: className, isToast: isToast, isLiveRegion: isLiveRegion, overflowMessage: overflowMessage }, props), children));\n        if (!this.props.isToast) {\n            return alertGroup;\n        }\n        const container = this.state.container;\n        if (!canUseDOM || !container) {\n            return null;\n        }\n        return ReactDOM.createPortal(alertGroup, container);\n    }\n}\nAlertGroup.displayName = 'AlertGroup';\n//# sourceMappingURL=AlertGroup.js.map"]},"metadata":{},"sourceType":"module"}