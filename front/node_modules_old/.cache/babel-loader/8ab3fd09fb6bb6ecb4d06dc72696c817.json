{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport GripVerticalIcon from '@patternfly/react-icons/dist/esm/icons/grip-vertical-icon';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button';\nexport const DraggableCell = _a => {\n  var {\n      className,\n      onClick,\n      'aria-label': ariaLabel,\n      id\n    } = _a,\n    props = __rest(_a, [\"className\", \"onClick\", 'aria-label', \"id\"]);\n  return React.createElement(Button, Object.assign({\n    id: id,\n    variant: \"plain\",\n    className: className,\n    type: \"button\",\n    \"aria-label\": ariaLabel || `Draggable row draggable button`,\n    onClick: onClick\n  }, props), React.createElement(GripVerticalIcon, {\n    \"aria-hidden\": true\n  }));\n};\nDraggableCell.displayName = 'DraggableCell';","map":{"version":3,"sources":["../../../../src/components/Table/DraggableCell.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,OAAO,gBAAgB,MAAM,2DAA2D;AACxF,SAAS,MAAM,QAAQ,mDAAmD;AAS1E,OAAO,MAAM,aAAa,GAAiD,EAMtD,IAAI;MANkD;MACzE,SAAS;MACT,OAAO;MACP,YAAY,EAAE,SAAS;MACvB;IAAE,CAAA,GAAA,EAEiB;IADhB,KAAK,GAAA,MAAA,CAAA,EAAA,EALiE,CAAA,WAAA,EAAA,SAAA,EAAA,YAAA,EAAA,IAAA,CAM1E,CADS;EACgB,OACxB,KAAA,CAAA,aAAA,CAAC,MAAM,EAAA,MAAA,CAAA,MAAA,CAAA;IACL,EAAE,EAAE,EAAE;IACN,OAAO,EAAC,OAAO;IACf,SAAS,EAAE,SAAS;IACpB,IAAI,EAAC,QAAQ;IAAA,YAAA,EACD,SAAS,IAAI,gCAAgC;IACzD,OAAO,EAAE;EAAO,CAAA,EACZ,KAAK,CAAA,EAET,KAAA,CAAA,aAAA,CAAC,gBAAgB,EAAA;IAAA,aAAA,EAAA;EAAA,CAAA,CAAe,CACzB;CACV;AAED,aAAa,CAAC,WAAW,GAAG,eAAe","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport GripVerticalIcon from '@patternfly/react-icons/dist/esm/icons/grip-vertical-icon';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button';\nexport const DraggableCell = (_a) => {\n    var { className, onClick, 'aria-label': ariaLabel, id } = _a, props = __rest(_a, [\"className\", \"onClick\", 'aria-label', \"id\"]);\n    return (React.createElement(Button, Object.assign({ id: id, variant: \"plain\", className: className, type: \"button\", \"aria-label\": ariaLabel || `Draggable row draggable button`, onClick: onClick }, props),\n        React.createElement(GripVerticalIcon, { \"aria-hidden\": true })));\n};\nDraggableCell.displayName = 'DraggableCell';\n//# sourceMappingURL=DraggableCell.js.map"]},"metadata":{},"sourceType":"module"}