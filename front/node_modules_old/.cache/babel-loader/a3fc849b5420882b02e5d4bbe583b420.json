{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\nimport { ContextSelectorContext } from './contextSelectorConstants';\nexport class ContextSelectorItem extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.ref = React.createRef();\n  }\n  componentDidMount() {\n    /* eslint-disable-next-line */\n    this.props.sendRef(this.props.index, this.ref.current);\n  }\n  render() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const _a = this.props,\n      {\n        className,\n        children,\n        onClick,\n        isDisabled,\n        index,\n        sendRef,\n        href\n      } = _a,\n      props = __rest(_a, [\"className\", \"children\", \"onClick\", \"isDisabled\", \"index\", \"sendRef\", \"href\"]);\n    const Component = href ? 'a' : 'button';\n    const isDisabledLink = href && isDisabled;\n    return React.createElement(ContextSelectorContext.Consumer, null, ({\n      onSelect\n    }) => React.createElement(\"li\", {\n      role: \"none\"\n    }, React.createElement(Component, Object.assign({\n      className: css(styles.contextSelectorMenuListItem, isDisabledLink && styles.modifiers.disabled, className),\n      ref: this.ref,\n      onClick: event => {\n        if (!isDisabled) {\n          onClick(event);\n          onSelect(event, children);\n        }\n      },\n      disabled: isDisabled && !href,\n      href: href\n    }, isDisabledLink && {\n      'aria-disabled': true,\n      tabIndex: -1\n    }, props), children)));\n  }\n}\nContextSelectorItem.displayName = 'ContextSelectorItem';\nContextSelectorItem.defaultProps = {\n  children: null,\n  className: '',\n  isDisabled: false,\n  onClick: () => undefined,\n  index: undefined,\n  sendRef: () => {},\n  href: null\n};","map":{"version":3,"sources":["../../../../src/components/ContextSelector/ContextSelectorItem.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,OAAO,MAAM,MAAM,0EAA0E;AAC7F,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,SAAS,sBAAsB,QAAQ,4BAA4B;AAmBnE,OAAM,MAAO,mBAAoB,SAAQ,KAAK,CAAC,SAAmC,CAAA;EAAlF,WAAA,CAAA,EAAA;;IAYE,IAAA,CAAA,GAAG,GAA2D,KAAK,CAAC,SAAS,CAAA,CAAE;EAyCjF;EAvCE,iBAAiB,CAAA,EAAA;IACf;IACA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;EACxD;EAEA,MAAM,CAAA,EAAA;IACJ;IACA,MAAM,EAAA,GAA+E,IAAI,CAAC,KAAK;MAAzF;QAAE,SAAS;QAAE,QAAQ;QAAE,OAAO;QAAE,UAAU;QAAE,KAAK;QAAE,OAAO;QAAE;MAAI,CAAA,GAAA,EAAyB;MAApB,KAAK,GAAA,MAAA,CAAA,EAAA,EAA1E,CAAA,WAAA,EAAA,UAAA,EAAA,SAAA,EAAA,YAAA,EAAA,OAAA,EAAA,SAAA,EAAA,MAAA,CAA4E,CAAa;IAC/F,MAAM,SAAS,GAAG,IAAI,GAAG,GAAG,GAAG,QAAQ;IACvC,MAAM,cAAc,GAAG,IAAI,IAAI,UAAU;IACzC,OACE,KAAA,CAAA,aAAA,CAAC,sBAAsB,CAAC,QAAQ,EAAA,IAAA,EAC7B,CAAC;MAAE;IAAQ,CAAE,KACZ,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;MAAI,IAAI,EAAC;IAAM,CAAA,EACb,KAAA,CAAA,aAAA,CAAC,SAAS,EAAA,MAAA,CAAA,MAAA,CAAA;MACR,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,2BAA2B,EAClC,cAAc,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,EAC3C,SAAS,CACV;MACD,GAAG,EAAE,IAAI,CAAC,GAAG;MACb,OAAO,EAAE,KAAK,IAAG;QACf,IAAI,CAAC,UAAU,EAAE;UACf,OAAO,CAAC,KAAK,CAAC;UACd,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC;QAC1B;MACH,CAAC;MACD,QAAQ,EAAE,UAAU,IAAI,CAAC,IAAI;MAC7B,IAAI,EAAE;IAAI,CAAA,EACL,cAAc,IAAI;MAAE,eAAe,EAAE,IAAI;MAAE,QAAQ,EAAE,CAAC;IAAC,CAAE,EAC1D,KAAK,CAAA,EAER,QAAQ,CACC,CAEf,CAC+B;EAEtC;;AAnDO,mBAAA,CAAA,WAAW,GAAG,qBAAqB;AACnC,mBAAA,CAAA,YAAY,GAA6B;EAC9C,QAAQ,EAAE,IAAuB;EACjC,SAAS,EAAE,EAAE;EACb,UAAU,EAAE,KAAK;EACjB,OAAO,EAAE,CAAA,KAAW,SAAS;EAC7B,KAAK,EAAE,SAAmB;EAC1B,OAAO,EAAE,CAAA,KAAK,CAAE,CAAC;EACjB,IAAI,EAAE;CACP","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\nimport { ContextSelectorContext } from './contextSelectorConstants';\nexport class ContextSelectorItem extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.ref = React.createRef();\n    }\n    componentDidMount() {\n        /* eslint-disable-next-line */\n        this.props.sendRef(this.props.index, this.ref.current);\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _a = this.props, { className, children, onClick, isDisabled, index, sendRef, href } = _a, props = __rest(_a, [\"className\", \"children\", \"onClick\", \"isDisabled\", \"index\", \"sendRef\", \"href\"]);\n        const Component = href ? 'a' : 'button';\n        const isDisabledLink = href && isDisabled;\n        return (React.createElement(ContextSelectorContext.Consumer, null, ({ onSelect }) => (React.createElement(\"li\", { role: \"none\" },\n            React.createElement(Component, Object.assign({ className: css(styles.contextSelectorMenuListItem, isDisabledLink && styles.modifiers.disabled, className), ref: this.ref, onClick: event => {\n                    if (!isDisabled) {\n                        onClick(event);\n                        onSelect(event, children);\n                    }\n                }, disabled: isDisabled && !href, href: href }, (isDisabledLink && { 'aria-disabled': true, tabIndex: -1 }), props), children)))));\n    }\n}\nContextSelectorItem.displayName = 'ContextSelectorItem';\nContextSelectorItem.defaultProps = {\n    children: null,\n    className: '',\n    isDisabled: false,\n    onClick: () => undefined,\n    index: undefined,\n    sendRef: () => { },\n    href: null\n};\n//# sourceMappingURL=ContextSelectorItem.js.map"]},"metadata":{},"sourceType":"module"}