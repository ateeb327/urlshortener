{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/HelperText/helper-text';\nimport { css } from '@patternfly/react-styles';\nimport MinusIcon from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nconst variantStyle = {\n  default: '',\n  indeterminate: styles.modifiers.indeterminate,\n  warning: styles.modifiers.warning,\n  success: styles.modifiers.success,\n  error: styles.modifiers.error\n};\nexport const HelperTextItem = _a => {\n  var {\n      children,\n      className,\n      component = 'div',\n      variant = 'default',\n      icon,\n      isDynamic = false,\n      hasIcon = isDynamic,\n      id,\n      screenReaderText = `${variant} status`\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"component\", \"variant\", \"icon\", \"isDynamic\", \"hasIcon\", \"id\", \"screenReaderText\"]);\n  const Component = component;\n  return React.createElement(Component, Object.assign({\n    className: css(styles.helperTextItem, variantStyle[variant], isDynamic && styles.modifiers.dynamic, className),\n    id: id\n  }, props), icon && React.createElement(\"span\", {\n    className: css(styles.helperTextItemIcon),\n    \"aria-hidden\": true\n  }, icon), hasIcon && !icon && React.createElement(\"span\", {\n    className: css(styles.helperTextItemIcon),\n    \"aria-hidden\": true\n  }, (variant === 'default' || variant === 'indeterminate') && React.createElement(MinusIcon, null), variant === 'warning' && React.createElement(ExclamationTriangleIcon, null), variant === 'success' && React.createElement(CheckCircleIcon, null), variant === 'error' && React.createElement(ExclamationCircleIcon, null)), React.createElement(\"span\", {\n    className: css(styles.helperTextItemText)\n  }, children, isDynamic && React.createElement(\"span\", {\n    className: \"pf-u-screen-reader\"\n  }, \": \", screenReaderText, \";\")));\n};\nHelperTextItem.displayName = 'HelperTextItem';","map":{"version":3,"sources":["../../../../src/components/HelperText/HelperTextItem.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,OAAO,MAAM,MAAM,gEAAgE;AACnF,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,SAAS,MAAM,mDAAmD;AACzE,OAAO,uBAAuB,MAAM,kEAAkE;AACtG,OAAO,eAAe,MAAM,0DAA0D;AACtF,OAAO,qBAAqB,MAAM,gEAAgE;AA+BlG,MAAM,YAAY,GAAG;EACnB,OAAO,EAAE,EAAE;EACX,aAAa,EAAE,MAAM,CAAC,SAAS,CAAC,aAAa;EAC7C,OAAO,EAAE,MAAM,CAAC,SAAS,CAAC,OAAO;EACjC,OAAO,EAAE,MAAM,CAAC,SAAS,CAAC,OAAO;EACjC,KAAK,EAAE,MAAM,CAAC,SAAS,CAAC;CACzB;AAED,OAAO,MAAM,cAAc,GAAkD,EAWvD,IAAI;MAXmD;MAC3E,QAAQ;MACR,SAAS;MACT,SAAS,GAAG,KAAK;MACjB,OAAO,GAAG,SAAS;MACnB,IAAI;MACJ,SAAS,GAAG,KAAK;MACjB,OAAO,GAAG,SAAS;MACnB,EAAE;MACF,gBAAgB,GAAG,GAAG,OAAO;IAAS,CAAA,GAAA,EAElB;IADjB,KAAK,GAAA,MAAA,CAAA,EAAA,EAVmE,CAAA,UAAA,EAAA,WAAA,EAAA,WAAA,EAAA,SAAA,EAAA,MAAA,EAAA,WAAA,EAAA,SAAA,EAAA,IAAA,EAAA,kBAAA,CAW5E,CADS;EAER,MAAM,SAAS,GAAG,SAAgB;EAClC,OACE,KAAA,CAAA,aAAA,CAAC,SAAS,EAAA,MAAA,CAAA,MAAA,CAAA;IACR,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,cAAc,EAAE,YAAY,CAAC,OAAO,CAAC,EAAE,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC;IAC9G,EAAE,EAAE;EAAE,CAAA,EACF,KAAK,CAAA,EAER,IAAI,IACH,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC;IAAA,aAAA,EAAA;EAAA,CAAA,EAC5C,IAAI,CAER,EACA,OAAO,IAAI,CAAC,IAAI,IACf,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC;IAAA,aAAA,EAAA;EAAA,CAAA,EAC5C,CAAC,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,eAAe,KAAK,KAAA,CAAA,aAAA,CAAC,SAAS,EAAA,IAAA,CAAG,EACvE,OAAO,KAAK,SAAS,IAAI,KAAA,CAAA,aAAA,CAAC,uBAAuB,EAAA,IAAA,CAAG,EACpD,OAAO,KAAK,SAAS,IAAI,KAAA,CAAA,aAAA,CAAC,eAAe,EAAA,IAAA,CAAG,EAC5C,OAAO,KAAK,OAAO,IAAI,KAAA,CAAA,aAAA,CAAC,qBAAqB,EAAA,IAAA,CAAG,CAEpD,EAED,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,kBAAkB;EAAC,CAAA,EAC5C,QAAQ,EACR,SAAS,IAAI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAC;EAAoB,CAAA,E,MAAI,gBAAgB,E,IAAS,CAC1E,CACG;AAEhB,CAAC;AACD,cAAc,CAAC,WAAW,GAAG,gBAAgB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/HelperText/helper-text';\nimport { css } from '@patternfly/react-styles';\nimport MinusIcon from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nconst variantStyle = {\n    default: '',\n    indeterminate: styles.modifiers.indeterminate,\n    warning: styles.modifiers.warning,\n    success: styles.modifiers.success,\n    error: styles.modifiers.error\n};\nexport const HelperTextItem = (_a) => {\n    var { children, className, component = 'div', variant = 'default', icon, isDynamic = false, hasIcon = isDynamic, id, screenReaderText = `${variant} status` } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"variant\", \"icon\", \"isDynamic\", \"hasIcon\", \"id\", \"screenReaderText\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.helperTextItem, variantStyle[variant], isDynamic && styles.modifiers.dynamic, className), id: id }, props),\n        icon && (React.createElement(\"span\", { className: css(styles.helperTextItemIcon), \"aria-hidden\": true }, icon)),\n        hasIcon && !icon && (React.createElement(\"span\", { className: css(styles.helperTextItemIcon), \"aria-hidden\": true },\n            (variant === 'default' || variant === 'indeterminate') && React.createElement(MinusIcon, null),\n            variant === 'warning' && React.createElement(ExclamationTriangleIcon, null),\n            variant === 'success' && React.createElement(CheckCircleIcon, null),\n            variant === 'error' && React.createElement(ExclamationCircleIcon, null))),\n        React.createElement(\"span\", { className: css(styles.helperTextItemText) },\n            children,\n            isDynamic && React.createElement(\"span\", { className: \"pf-u-screen-reader\" },\n                \": \",\n                screenReaderText,\n                \";\"))));\n};\nHelperTextItem.displayName = 'HelperTextItem';\n//# sourceMappingURL=HelperTextItem.js.map"]},"metadata":{},"sourceType":"module"}