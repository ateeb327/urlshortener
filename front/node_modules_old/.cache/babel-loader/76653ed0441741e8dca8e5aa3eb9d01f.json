{"ast":null,"code":"/** Joins args into a className string\n *\n * @param {any} args list of objects, string, or arrays to reduce\n */\nexport function css(...args) {\n  // Adapted from https://github.com/JedWatson/classnames/blob/master/index.js\n  const classes = [];\n  const hasOwn = {}.hasOwnProperty;\n  args.filter(Boolean).forEach(arg => {\n    const argType = typeof arg;\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg);\n    } else if (Array.isArray(arg) && arg.length) {\n      const inner = css(...arg);\n      if (inner) {\n        classes.push(inner);\n      }\n    } else if (argType === 'object') {\n      for (const key in arg) {\n        if (hasOwn.call(arg, key) && arg[key]) {\n          classes.push(key);\n        }\n      }\n    }\n  });\n  return classes.join(' ');\n}","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"AAAA;;;AAGG;AACH,OAAM,SAAU,GAAG,CAAC,GAAG,IAAS,EAAA;EAC9B;EACA,MAAM,OAAO,GAAG,EAAc;EAC9B,MAAM,MAAM,GAAG,CAAA,CAAE,CAAC,cAAc;EAEhC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAE,GAAQ,IAAI;IACxC,MAAM,OAAO,GAAG,OAAO,GAAG;IAE1B,IAAI,OAAO,KAAK,QAAQ,IAAI,OAAO,KAAK,QAAQ,EAAE;MAChD,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;KAClB,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,EAAE;MAC3C,MAAM,KAAK,GAAG,GAAG,CAAC,GAAI,GAAW,CAAC;MAClC,IAAI,KAAK,EAAE;QACT,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;MACpB;KACF,MAAM,IAAI,OAAO,KAAK,QAAQ,EAAE;MAC/B,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;QACrB,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE;UACrC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;QAClB;MACF;IACF;EACH,CAAC,CAAC;EAEF,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;AAC1B","sourceRoot":"","sourcesContent":["/** Joins args into a className string\n *\n * @param {any} args list of objects, string, or arrays to reduce\n */\nexport function css(...args) {\n    // Adapted from https://github.com/JedWatson/classnames/blob/master/index.js\n    const classes = [];\n    const hasOwn = {}.hasOwnProperty;\n    args.filter(Boolean).forEach((arg) => {\n        const argType = typeof arg;\n        if (argType === 'string' || argType === 'number') {\n            classes.push(arg);\n        }\n        else if (Array.isArray(arg) && arg.length) {\n            const inner = css(...arg);\n            if (inner) {\n                classes.push(inner);\n            }\n        }\n        else if (argType === 'object') {\n            for (const key in arg) {\n                if (hasOwn.call(arg, key) && arg[key]) {\n                    classes.push(key);\n                }\n            }\n        }\n    });\n    return classes.join(' ');\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}