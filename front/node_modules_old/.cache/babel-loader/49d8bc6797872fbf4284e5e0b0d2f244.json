{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css } from '@patternfly/react-styles';\nimport { ProgressContainer, ProgressMeasureLocation } from './ProgressContainer';\nimport { getUniqueId } from '../../helpers/util';\nexport var ProgressSize;\n(function (ProgressSize) {\n  ProgressSize[\"sm\"] = \"sm\";\n  ProgressSize[\"md\"] = \"md\";\n  ProgressSize[\"lg\"] = \"lg\";\n})(ProgressSize || (ProgressSize = {}));\nexport class Progress extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.id = this.props.id || getUniqueId();\n  }\n  render() {\n    const _a = this.props,\n      {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        id,\n        size,\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        className,\n        value,\n        title,\n        label,\n        variant,\n        measureLocation,\n        min,\n        max,\n        valueText,\n        isTitleTruncated,\n        tooltipPosition,\n        'aria-label': ariaLabel,\n        'aria-labelledby': ariaLabelledBy,\n        helperText\n      } = _a,\n      props = __rest(_a, [\"id\", \"size\", \"className\", \"value\", \"title\", \"label\", \"variant\", \"measureLocation\", \"min\", \"max\", \"valueText\", \"isTitleTruncated\", \"tooltipPosition\", 'aria-label', 'aria-labelledby', \"helperText\"]);\n    const progressBarAriaProps = {\n      'aria-valuemin': min,\n      'aria-valuenow': value,\n      'aria-valuemax': max\n    };\n    if (title || ariaLabelledBy) {\n      progressBarAriaProps['aria-labelledby'] = title ? `${this.id}-description` : ariaLabelledBy;\n    }\n    if (ariaLabel) {\n      progressBarAriaProps['aria-label'] = ariaLabel;\n    }\n    if (valueText) {\n      progressBarAriaProps['aria-valuetext'] = valueText;\n    }\n    if (!title && !ariaLabelledBy && !ariaLabel) {\n      /* eslint-disable no-console */\n      console.warn('One of aria-label or aria-labelledby properties should be passed when using the progress component without a title.');\n    }\n    const scaledValue = Math.min(100, Math.max(0, Math.floor((value - min) / (max - min) * 100))) || 0;\n    return React.createElement(\"div\", Object.assign({}, props, {\n      className: css(styles.progress, styles.modifiers[variant], ['inside', 'outside'].includes(measureLocation) && styles.modifiers[measureLocation], measureLocation === 'inside' ? styles.modifiers[ProgressSize.lg] : styles.modifiers[size], !title && styles.modifiers.singleline, className),\n      id: this.id\n    }), React.createElement(ProgressContainer, {\n      parentId: this.id,\n      value: scaledValue,\n      title: title,\n      label: label,\n      variant: variant,\n      measureLocation: measureLocation,\n      progressBarAriaProps: progressBarAriaProps,\n      isTitleTruncated: isTitleTruncated,\n      tooltipPosition: tooltipPosition,\n      helperText: helperText\n    }));\n  }\n}\nProgress.displayName = 'Progress';\nProgress.defaultProps = {\n  className: '',\n  measureLocation: ProgressMeasureLocation.top,\n  variant: null,\n  id: '',\n  title: '',\n  min: 0,\n  max: 100,\n  size: null,\n  label: null,\n  value: 0,\n  valueText: null,\n  isTitleTruncated: false,\n  tooltipPosition: 'top',\n  'aria-label': null,\n  'aria-labelledby': null\n};","map":{"version":3,"sources":["../../../../src/components/Progress/Progress.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css } from '@patternfly/react-styles';\nimport { ProgressContainer, ProgressMeasureLocation } from './ProgressContainer';\nimport { getUniqueId } from '../../helpers/util';\nexport var ProgressSize;\n(function (ProgressSize) {\n    ProgressSize[\"sm\"] = \"sm\";\n    ProgressSize[\"md\"] = \"md\";\n    ProgressSize[\"lg\"] = \"lg\";\n})(ProgressSize || (ProgressSize = {}));\nexport class Progress extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.id = this.props.id || getUniqueId();\n    }\n    render() {\n        const _a = this.props, { \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        id, size, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        className, value, title, label, variant, measureLocation, min, max, valueText, isTitleTruncated, tooltipPosition, 'aria-label': ariaLabel, 'aria-labelledby': ariaLabelledBy, helperText } = _a, props = __rest(_a, [\"id\", \"size\", \"className\", \"value\", \"title\", \"label\", \"variant\", \"measureLocation\", \"min\", \"max\", \"valueText\", \"isTitleTruncated\", \"tooltipPosition\", 'aria-label', 'aria-labelledby', \"helperText\"]);\n        const progressBarAriaProps = {\n            'aria-valuemin': min,\n            'aria-valuenow': value,\n            'aria-valuemax': max\n        };\n        if (title || ariaLabelledBy) {\n            progressBarAriaProps['aria-labelledby'] = title ? `${this.id}-description` : ariaLabelledBy;\n        }\n        if (ariaLabel) {\n            progressBarAriaProps['aria-label'] = ariaLabel;\n        }\n        if (valueText) {\n            progressBarAriaProps['aria-valuetext'] = valueText;\n        }\n        if (!title && !ariaLabelledBy && !ariaLabel) {\n            /* eslint-disable no-console */\n            console.warn('One of aria-label or aria-labelledby properties should be passed when using the progress component without a title.');\n        }\n        const scaledValue = Math.min(100, Math.max(0, Math.floor(((value - min) / (max - min)) * 100))) || 0;\n        return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.progress, styles.modifiers[variant], ['inside', 'outside'].includes(measureLocation) && styles.modifiers[measureLocation], measureLocation === 'inside' ? styles.modifiers[ProgressSize.lg] : styles.modifiers[size], !title && styles.modifiers.singleline, className), id: this.id }),\n            React.createElement(ProgressContainer, { parentId: this.id, value: scaledValue, title: title, label: label, variant: variant, measureLocation: measureLocation, progressBarAriaProps: progressBarAriaProps, isTitleTruncated: isTitleTruncated, tooltipPosition: tooltipPosition, helperText: helperText })));\n    }\n}\nProgress.displayName = 'Progress';\nProgress.defaultProps = {\n    className: '',\n    measureLocation: ProgressMeasureLocation.top,\n    variant: null,\n    id: '',\n    title: '',\n    min: 0,\n    max: 100,\n    size: null,\n    label: null,\n    value: 0,\n    valueText: null,\n    isTitleTruncated: false,\n    tooltipPosition: 'top',\n    'aria-label': null,\n    'aria-labelledby': null\n};\n//# sourceMappingURL=Progress.js.map"]},"metadata":{},"sourceType":"module"}