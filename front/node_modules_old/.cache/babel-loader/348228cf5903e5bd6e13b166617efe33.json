{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy';\nimport { css } from '@patternfly/react-styles';\nexport class ClipboardCopyExpanded extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const _a = this.props,\n      {\n        className,\n        children,\n        onChange,\n        isReadOnly,\n        isCode\n      } = _a,\n      props = __rest(_a, [\"className\", \"children\", \"onChange\", \"isReadOnly\", \"isCode\"]);\n    return React.createElement(\"div\", Object.assign({\n      suppressContentEditableWarning: true,\n      className: css(styles.clipboardCopyExpandableContent, className),\n      onInput: e => onChange(e.target.innerText, e),\n      contentEditable: !isReadOnly\n    }, props), isCode ? React.createElement(\"pre\", null, children) : children);\n  }\n}\nClipboardCopyExpanded.displayName = 'ClipboardCopyExpanded';\nClipboardCopyExpanded.defaultProps = {\n  onChange: () => undefined,\n  className: '',\n  isReadOnly: false,\n  isCode: false\n};","map":{"version":3,"sources":["../../../../src/components/ClipboardCopy/ClipboardCopyExpanded.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,OAAO,MAAM,MAAM,sEAAsE;AACzF,SAAS,GAAG,QAAQ,0BAA0B;AAY9C,OAAM,MAAO,qBAAsB,SAAQ,KAAK,CAAC,SAAqC,CAAA;EAEpF,WAAA,CAAY,KAAU,EAAA;IACpB,KAAK,CAAC,KAAK,CAAC;EACd;EASA,MAAM,CAAA,EAAA;IACJ,MAAM,EAAA,GAAkE,IAAI,CAAC,KAAK;MAA5E;QAAE,SAAS;QAAE,QAAQ;QAAE,QAAQ;QAAE,UAAU;QAAE;MAAM,CAAA,GAAA,EAAyB;MAApB,KAAK,GAAA,MAAA,CAAA,EAAA,EAA7D,CAAA,WAAA,EAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,QAAA,CAA+D,CAAa;IAElF,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;MACE,8BAA8B,EAAA,IAAA;MAC9B,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,8BAA8B,EAAE,SAAS,CAAC;MAChE,OAAO,EAAG,CAAM,IAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;MACpD,eAAe,EAAE,CAAC;IAAU,CAAA,EACxB,KAAK,CAAA,EAER,MAAM,GAAG,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAM,QAAQ,CAAO,GAAG,QAAQ,CACtC;EAEV;;AA1BO,qBAAA,CAAA,WAAW,GAAG,uBAAuB;AAKrC,qBAAA,CAAA,YAAY,GAA6C;EAC9D,QAAQ,EAAE,CAAA,KAAW,SAAS;EAC9B,SAAS,EAAE,EAAE;EACb,UAAU,EAAE,KAAK;EACjB,MAAM,EAAE;CACT","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy';\nimport { css } from '@patternfly/react-styles';\nexport class ClipboardCopyExpanded extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        const _a = this.props, { className, children, onChange, isReadOnly, isCode } = _a, props = __rest(_a, [\"className\", \"children\", \"onChange\", \"isReadOnly\", \"isCode\"]);\n        return (React.createElement(\"div\", Object.assign({ suppressContentEditableWarning: true, className: css(styles.clipboardCopyExpandableContent, className), onInput: (e) => onChange(e.target.innerText, e), contentEditable: !isReadOnly }, props), isCode ? React.createElement(\"pre\", null, children) : children));\n    }\n}\nClipboardCopyExpanded.displayName = 'ClipboardCopyExpanded';\nClipboardCopyExpanded.defaultProps = {\n    onChange: () => undefined,\n    className: '',\n    isReadOnly: false,\n    isCode: false\n};\n//# sourceMappingURL=ClipboardCopyExpanded.js.map"]},"metadata":{},"sourceType":"module"}