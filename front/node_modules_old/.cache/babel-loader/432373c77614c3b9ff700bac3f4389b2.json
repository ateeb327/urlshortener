{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useOUIAProps } from '@patternfly/react-core/dist/esm/helpers';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport { css } from '@patternfly/react-styles';\nimport { TableComposableContext } from './TableComposable';\nconst TrBase = _a => {\n  var {\n      children,\n      className,\n      isExpanded,\n      isEditable,\n      isHidden = false,\n      isHoverable = false,\n      isRowSelected = false,\n      isStriped = false,\n      isBorderRow = false,\n      innerRef,\n      ouiaId,\n      ouiaSafe = true,\n      resetOffset = false,\n      onRowClick,\n      isSelectable,\n      'aria-label': passedAriaLabel\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"isExpanded\", \"isEditable\", \"isHidden\", \"isHoverable\", \"isRowSelected\", \"isStriped\", \"isBorderRow\", \"innerRef\", \"ouiaId\", \"ouiaSafe\", \"resetOffset\", \"onRowClick\", \"isSelectable\", 'aria-label']);\n  const ouiaProps = useOUIAProps('TableRow', ouiaId, ouiaSafe);\n  const [computedAriaLabel, setComputedAriaLabel] = React.useState('');\n  let onKeyDown = null;\n  if (onRowClick) {\n    onKeyDown = e => {\n      if (e.key === 'Enter' || e.key === ' ') {\n        onRowClick(e);\n        e.preventDefault();\n      }\n    };\n  }\n  const rowIsHidden = isHidden || isExpanded !== undefined && !isExpanded;\n  const {\n    registerSelectableRow\n  } = React.useContext(TableComposableContext);\n  React.useEffect(() => {\n    if (isSelectable && !rowIsHidden) {\n      setComputedAriaLabel(`${isRowSelected ? 'Row selected' : ''}`);\n      registerSelectableRow();\n    } else {\n      setComputedAriaLabel(undefined);\n    }\n  }, [isRowSelected, isSelectable, registerSelectableRow, rowIsHidden]);\n  const ariaLabel = passedAriaLabel || computedAriaLabel;\n  return React.createElement(React.Fragment, null, isSelectable && React.createElement(\"output\", {\n    className: \"pf-screen-reader\"\n  }, ariaLabel), React.createElement(\"tr\", Object.assign({\n    className: css(className, isExpanded !== undefined && styles.tableExpandableRow, isExpanded && styles.modifiers.expanded, isEditable && inlineStyles.modifiers.inlineEditable, isHoverable && styles.modifiers.hoverable, isRowSelected && styles.modifiers.selected, isStriped && styles.modifiers.striped, isBorderRow && styles.modifiers.borderRow, resetOffset && styles.modifiers.firstCellOffsetReset),\n    hidden: rowIsHidden\n  }, isHoverable && {\n    tabIndex: 0\n  }, {\n    \"aria-label\": ariaLabel,\n    ref: innerRef\n  }, onRowClick && {\n    onClick: onRowClick,\n    onKeyDown\n  }, ouiaProps, props), children));\n};\nexport const Tr = React.forwardRef((props, ref) => React.createElement(TrBase, Object.assign({}, props, {\n  innerRef: ref\n})));\nTr.displayName = 'Tr';","map":{"version":3,"sources":["../../../../src/components/TableComposable/Tr.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useOUIAProps } from '@patternfly/react-core/dist/esm/helpers';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport { css } from '@patternfly/react-styles';\nimport { TableComposableContext } from './TableComposable';\nconst TrBase = (_a) => {\n    var { children, className, isExpanded, isEditable, isHidden = false, isHoverable = false, isRowSelected = false, isStriped = false, isBorderRow = false, innerRef, ouiaId, ouiaSafe = true, resetOffset = false, onRowClick, isSelectable, 'aria-label': passedAriaLabel } = _a, props = __rest(_a, [\"children\", \"className\", \"isExpanded\", \"isEditable\", \"isHidden\", \"isHoverable\", \"isRowSelected\", \"isStriped\", \"isBorderRow\", \"innerRef\", \"ouiaId\", \"ouiaSafe\", \"resetOffset\", \"onRowClick\", \"isSelectable\", 'aria-label']);\n    const ouiaProps = useOUIAProps('TableRow', ouiaId, ouiaSafe);\n    const [computedAriaLabel, setComputedAriaLabel] = React.useState('');\n    let onKeyDown = null;\n    if (onRowClick) {\n        onKeyDown = (e) => {\n            if (e.key === 'Enter' || e.key === ' ') {\n                onRowClick(e);\n                e.preventDefault();\n            }\n        };\n    }\n    const rowIsHidden = isHidden || (isExpanded !== undefined && !isExpanded);\n    const { registerSelectableRow } = React.useContext(TableComposableContext);\n    React.useEffect(() => {\n        if (isSelectable && !rowIsHidden) {\n            setComputedAriaLabel(`${isRowSelected ? 'Row selected' : ''}`);\n            registerSelectableRow();\n        }\n        else {\n            setComputedAriaLabel(undefined);\n        }\n    }, [isRowSelected, isSelectable, registerSelectableRow, rowIsHidden]);\n    const ariaLabel = passedAriaLabel || computedAriaLabel;\n    return (React.createElement(React.Fragment, null,\n        isSelectable && React.createElement(\"output\", { className: \"pf-screen-reader\" }, ariaLabel),\n        React.createElement(\"tr\", Object.assign({ className: css(className, isExpanded !== undefined && styles.tableExpandableRow, isExpanded && styles.modifiers.expanded, isEditable && inlineStyles.modifiers.inlineEditable, isHoverable && styles.modifiers.hoverable, isRowSelected && styles.modifiers.selected, isStriped && styles.modifiers.striped, isBorderRow && styles.modifiers.borderRow, resetOffset && styles.modifiers.firstCellOffsetReset), hidden: rowIsHidden }, (isHoverable && { tabIndex: 0 }), { \"aria-label\": ariaLabel, ref: innerRef }, (onRowClick && { onClick: onRowClick, onKeyDown }), ouiaProps, props), children)));\n};\nexport const Tr = React.forwardRef((props, ref) => (React.createElement(TrBase, Object.assign({}, props, { innerRef: ref }))));\nTr.displayName = 'Tr';\n//# sourceMappingURL=Tr.js.map"]},"metadata":{},"sourceType":"module"}