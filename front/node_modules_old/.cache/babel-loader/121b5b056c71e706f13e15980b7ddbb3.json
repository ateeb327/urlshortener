{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport { ContextSelectorToggle } from './ContextSelectorToggle';\nimport { ContextSelectorMenuList } from './ContextSelectorMenuList';\nimport { ContextSelectorContext } from './contextSelectorConstants';\nimport { Button, ButtonVariant } from '../Button';\nimport { TextInput } from '../TextInput';\nimport { InputGroup } from '../InputGroup';\nimport { KeyTypes } from '../../helpers/constants';\nimport { FocusTrap, getUniqueId } from '../../helpers';\nimport { Popper } from '../../helpers/Popper/Popper';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class ContextSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.parentRef = React.createRef();\n    this.popperRef = React.createRef();\n    this.onEnterPressed = event => {\n      if (event.key === KeyTypes.Enter) {\n        this.props.onSearchButtonClick();\n      }\n    };\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(ContextSelector.displayName)\n    };\n  }\n  render() {\n    const _a = this.props,\n      {\n        children,\n        className,\n        isOpen,\n        isFullHeight,\n        onToggle,\n        onSelect,\n        screenReaderLabel,\n        toggleText,\n        searchButtonAriaLabel,\n        searchInputValue,\n        onSearchInputChange,\n        searchInputPlaceholder,\n        onSearchButtonClick,\n        menuAppendTo,\n        ouiaId,\n        ouiaSafe,\n        isPlain,\n        isText,\n        footer,\n        disableFocusTrap,\n        isFlipEnabled,\n        id,\n        removeFindDomNode,\n        zIndex\n      } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"isOpen\", \"isFullHeight\", \"onToggle\", \"onSelect\", \"screenReaderLabel\", \"toggleText\", \"searchButtonAriaLabel\", \"searchInputValue\", \"onSearchInputChange\", \"searchInputPlaceholder\", \"onSearchButtonClick\", \"menuAppendTo\", \"ouiaId\", \"ouiaSafe\", \"isPlain\", \"isText\", \"footer\", \"disableFocusTrap\", \"isFlipEnabled\", \"id\", \"removeFindDomNode\", \"zIndex\"]);\n    const uniqueId = id || getUniqueId();\n    const toggleId = `pf-context-selector-toggle-id-${uniqueId}`;\n    const screenReaderLabelId = `pf-context-selector-label-id-${uniqueId}`;\n    const isStatic = isFlipEnabled && menuAppendTo !== 'inline';\n    const menuContainer = React.createElement(\"div\", {\n      className: css(styles.contextSelectorMenu, isStatic && styles.modifiers.static),\n      id: uniqueId\n    }, isOpen && React.createElement(FocusTrap, {\n      active: !disableFocusTrap,\n      focusTrapOptions: {\n        clickOutsideDeactivates: true,\n        tabbableOptions: {\n          displayCheck: 'none'\n        }\n      }\n    }, React.createElement(\"div\", {\n      className: css(styles.contextSelectorMenuSearch)\n    }, React.createElement(InputGroup, null, React.createElement(TextInput, {\n      value: searchInputValue,\n      type: \"search\",\n      placeholder: searchInputPlaceholder,\n      onChange: onSearchInputChange,\n      onKeyPress: this.onEnterPressed,\n      \"aria-label\": searchButtonAriaLabel\n    }), React.createElement(Button, {\n      variant: ButtonVariant.control,\n      \"aria-label\": searchButtonAriaLabel,\n      onClick: onSearchButtonClick\n    }, React.createElement(SearchIcon, {\n      \"aria-hidden\": \"true\"\n    })))), React.createElement(ContextSelectorContext.Provider, {\n      value: {\n        onSelect\n      }\n    }, React.createElement(ContextSelectorMenuList, {\n      isOpen: isOpen\n    }, children)), footer));\n    const popperContainer = React.createElement(\"div\", Object.assign({\n      className: css(styles.contextSelector, isOpen && styles.modifiers.expanded, className),\n      ref: this.popperRef\n    }, props), isOpen && menuContainer);\n    const mainContainer = React.createElement(\"div\", Object.assign({\n      className: css(styles.contextSelector, isOpen && styles.modifiers.expanded, isFullHeight && styles.modifiers.fullHeight, className),\n      ref: this.parentRef\n    }, getOUIAProps(ContextSelector.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), props), screenReaderLabel && React.createElement(\"span\", {\n      id: screenReaderLabelId,\n      hidden: true\n    }, screenReaderLabel), React.createElement(ContextSelectorToggle, {\n      onToggle: onToggle,\n      isOpen: isOpen,\n      toggleText: toggleText,\n      id: toggleId,\n      parentRef: menuAppendTo === 'inline' ? this.parentRef : this.popperRef,\n      \"aria-labelledby\": `${screenReaderLabelId} ${toggleId}`,\n      isPlain: isPlain,\n      isText: isText\n    }), isOpen && menuAppendTo === 'inline' && menuContainer);\n    const getParentElement = () => {\n      if (this.parentRef && this.parentRef.current) {\n        return this.parentRef.current.parentElement;\n      }\n      return null;\n    };\n    return menuAppendTo === 'inline' ? mainContainer : React.createElement(Popper, {\n      trigger: mainContainer,\n      popper: popperContainer,\n      appendTo: menuAppendTo === 'parent' ? getParentElement() : menuAppendTo,\n      isVisible: isOpen,\n      removeFindDomNode: removeFindDomNode,\n      zIndex: zIndex\n    });\n  }\n}\nContextSelector.displayName = 'ContextSelector';\nContextSelector.defaultProps = {\n  children: null,\n  className: '',\n  isOpen: false,\n  onToggle: () => undefined,\n  onSelect: () => undefined,\n  screenReaderLabel: '',\n  toggleText: '',\n  searchButtonAriaLabel: 'Search menu items',\n  searchInputValue: '',\n  onSearchInputChange: () => undefined,\n  searchInputPlaceholder: 'Search',\n  onSearchButtonClick: () => undefined,\n  menuAppendTo: 'inline',\n  ouiaSafe: true,\n  disableFocusTrap: false,\n  footer: null,\n  isPlain: false,\n  isText: false,\n  isFlipEnabled: true,\n  removeFindDomNode: false,\n  zIndex: 9999\n};","map":{"version":3,"sources":["../../../../src/components/ContextSelector/ContextSelector.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ContextSelector/context-selector';\nimport { css } from '@patternfly/react-styles';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport { ContextSelectorToggle } from './ContextSelectorToggle';\nimport { ContextSelectorMenuList } from './ContextSelectorMenuList';\nimport { ContextSelectorContext } from './contextSelectorConstants';\nimport { Button, ButtonVariant } from '../Button';\nimport { TextInput } from '../TextInput';\nimport { InputGroup } from '../InputGroup';\nimport { KeyTypes } from '../../helpers/constants';\nimport { FocusTrap, getUniqueId } from '../../helpers';\nimport { Popper } from '../../helpers/Popper/Popper';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class ContextSelector extends React.Component {\n    constructor(props) {\n        super(props);\n        this.parentRef = React.createRef();\n        this.popperRef = React.createRef();\n        this.onEnterPressed = (event) => {\n            if (event.key === KeyTypes.Enter) {\n                this.props.onSearchButtonClick();\n            }\n        };\n        this.state = {\n            ouiaStateId: getDefaultOUIAId(ContextSelector.displayName)\n        };\n    }\n    render() {\n        const _a = this.props, { children, className, isOpen, isFullHeight, onToggle, onSelect, screenReaderLabel, toggleText, searchButtonAriaLabel, searchInputValue, onSearchInputChange, searchInputPlaceholder, onSearchButtonClick, menuAppendTo, ouiaId, ouiaSafe, isPlain, isText, footer, disableFocusTrap, isFlipEnabled, id, removeFindDomNode, zIndex } = _a, props = __rest(_a, [\"children\", \"className\", \"isOpen\", \"isFullHeight\", \"onToggle\", \"onSelect\", \"screenReaderLabel\", \"toggleText\", \"searchButtonAriaLabel\", \"searchInputValue\", \"onSearchInputChange\", \"searchInputPlaceholder\", \"onSearchButtonClick\", \"menuAppendTo\", \"ouiaId\", \"ouiaSafe\", \"isPlain\", \"isText\", \"footer\", \"disableFocusTrap\", \"isFlipEnabled\", \"id\", \"removeFindDomNode\", \"zIndex\"]);\n        const uniqueId = id || getUniqueId();\n        const toggleId = `pf-context-selector-toggle-id-${uniqueId}`;\n        const screenReaderLabelId = `pf-context-selector-label-id-${uniqueId}`;\n        const isStatic = isFlipEnabled && menuAppendTo !== 'inline';\n        const menuContainer = (React.createElement(\"div\", { className: css(styles.contextSelectorMenu, isStatic && styles.modifiers.static), id: uniqueId }, isOpen && (React.createElement(FocusTrap, { active: !disableFocusTrap, focusTrapOptions: { clickOutsideDeactivates: true, tabbableOptions: { displayCheck: 'none' } } },\n            React.createElement(\"div\", { className: css(styles.contextSelectorMenuSearch) },\n                React.createElement(InputGroup, null,\n                    React.createElement(TextInput, { value: searchInputValue, type: \"search\", placeholder: searchInputPlaceholder, onChange: onSearchInputChange, onKeyPress: this.onEnterPressed, \"aria-label\": searchButtonAriaLabel }),\n                    React.createElement(Button, { variant: ButtonVariant.control, \"aria-label\": searchButtonAriaLabel, onClick: onSearchButtonClick },\n                        React.createElement(SearchIcon, { \"aria-hidden\": \"true\" })))),\n            React.createElement(ContextSelectorContext.Provider, { value: { onSelect } },\n                React.createElement(ContextSelectorMenuList, { isOpen: isOpen }, children)),\n            footer))));\n        const popperContainer = (React.createElement(\"div\", Object.assign({ className: css(styles.contextSelector, isOpen && styles.modifiers.expanded, className), ref: this.popperRef }, props), isOpen && menuContainer));\n        const mainContainer = (React.createElement(\"div\", Object.assign({ className: css(styles.contextSelector, isOpen && styles.modifiers.expanded, isFullHeight && styles.modifiers.fullHeight, className), ref: this.parentRef }, getOUIAProps(ContextSelector.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), props),\n            screenReaderLabel && (React.createElement(\"span\", { id: screenReaderLabelId, hidden: true }, screenReaderLabel)),\n            React.createElement(ContextSelectorToggle, { onToggle: onToggle, isOpen: isOpen, toggleText: toggleText, id: toggleId, parentRef: menuAppendTo === 'inline' ? this.parentRef : this.popperRef, \"aria-labelledby\": `${screenReaderLabelId} ${toggleId}`, isPlain: isPlain, isText: isText }),\n            isOpen && menuAppendTo === 'inline' && menuContainer));\n        const getParentElement = () => {\n            if (this.parentRef && this.parentRef.current) {\n                return this.parentRef.current.parentElement;\n            }\n            return null;\n        };\n        return menuAppendTo === 'inline' ? (mainContainer) : (React.createElement(Popper, { trigger: mainContainer, popper: popperContainer, appendTo: menuAppendTo === 'parent' ? getParentElement() : menuAppendTo, isVisible: isOpen, removeFindDomNode: removeFindDomNode, zIndex: zIndex }));\n    }\n}\nContextSelector.displayName = 'ContextSelector';\nContextSelector.defaultProps = {\n    children: null,\n    className: '',\n    isOpen: false,\n    onToggle: () => undefined,\n    onSelect: () => undefined,\n    screenReaderLabel: '',\n    toggleText: '',\n    searchButtonAriaLabel: 'Search menu items',\n    searchInputValue: '',\n    onSearchInputChange: () => undefined,\n    searchInputPlaceholder: 'Search',\n    onSearchButtonClick: () => undefined,\n    menuAppendTo: 'inline',\n    ouiaSafe: true,\n    disableFocusTrap: false,\n    footer: null,\n    isPlain: false,\n    isText: false,\n    isFlipEnabled: true,\n    removeFindDomNode: false,\n    zIndex: 9999\n};\n//# sourceMappingURL=ContextSelector.js.map"]},"metadata":{},"sourceType":"module"}