{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip';\nexport var TableTextVariant;\n(function (TableTextVariant) {\n  TableTextVariant[\"div\"] = \"div\";\n  TableTextVariant[\"nav\"] = \"nav\";\n})(TableTextVariant || (TableTextVariant = {}));\nexport var WrapModifier;\n(function (WrapModifier) {\n  WrapModifier[\"wrap\"] = \"wrap\";\n  WrapModifier[\"nowrap\"] = \"nowrap\";\n  WrapModifier[\"truncate\"] = \"truncate\";\n  WrapModifier[\"breakWord\"] = \"breakWord\";\n  WrapModifier[\"fitContent\"] = \"fitContent\";\n})(WrapModifier || (WrapModifier = {}));\nexport const TableText = _a => {\n  var {\n      children = null,\n      className = '',\n      variant = 'span',\n      wrapModifier = null,\n      tooltip: tooltipProp = '',\n      tooltipProps = {},\n      onMouseEnter: onMouseEnterProp = () => {}\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"variant\", \"wrapModifier\", \"tooltip\", \"tooltipProps\", \"onMouseEnter\"]);\n  const Component = variant;\n  const [tooltip, setTooltip] = React.useState('');\n  const onMouseEnter = event => {\n    if (event.target.offsetWidth < event.target.scrollWidth) {\n      setTooltip(tooltipProp || event.target.innerText);\n    } else {\n      setTooltip('');\n    }\n    onMouseEnterProp(event);\n  };\n  const text = React.createElement(Component, Object.assign({\n    onMouseEnter: onMouseEnter,\n    className: css(className, wrapModifier && styles.modifiers[wrapModifier], styles.tableText)\n  }, props), children);\n  return tooltip !== '' ? React.createElement(Tooltip, Object.assign({\n    content: tooltip,\n    isVisible: true\n  }, tooltipProps), text) : text;\n};\nTableText.displayName = 'TableText';","map":{"version":3,"sources":["../../../../src/components/Table/TableText.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,OAAO,MAAM,MAAM,qDAAqD;AACxE,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,SAAS,OAAO,QAAsB,oDAAoD;AAE1F,OAAA,IAAY,gBAGX;AAHD,CAAA,UAAY,gBAAgB,EAAA;EAC1B,gBAAA,CAAA,KAAA,CAAA,GAAA,KAAW;EACX,gBAAA,CAAA,KAAA,CAAA,GAAA,KAAW;AACb,CAAC,EAHW,gBAAgB,KAAhB,gBAAgB,GAAA,CAAA,CAAA,CAAA,CAAA;AAK5B,OAAA,IAAY,YAMX;AAND,CAAA,UAAY,YAAY,EAAA;EACtB,YAAA,CAAA,MAAA,CAAA,GAAA,MAAa;EACb,YAAA,CAAA,QAAA,CAAA,GAAA,QAAiB;EACjB,YAAA,CAAA,UAAA,CAAA,GAAA,UAAqB;EACrB,YAAA,CAAA,WAAA,CAAA,GAAA,WAAuB;EACvB,YAAA,CAAA,YAAA,CAAA,GAAA,YAAyB;AAC3B,CAAC,EANW,YAAY,KAAZ,YAAY,GAAA,CAAA,CAAA,CAAA,CAAA;AAyBxB,OAAO,MAAM,SAAS,GAA6C,EASlD,IAAI;MAT8C;MACjE,QAAQ,GAAG,IAAI;MACf,SAAS,GAAG,EAAE;MACd,OAAO,GAAG,MAAM;MAChB,YAAY,GAAG,IAAI;MACnB,OAAO,EAAE,WAAW,GAAG,EAAE;MACzB,YAAY,GAAG,CAAA,CAAE;MACjB,YAAY,EAAE,gBAAgB,GAAG,CAAA,KAAK,CAAE;IAAC,CAAA,GAAA,EAE1B;IADZ,KAAK,GAAA,MAAA,CAAA,EAAA,EARyD,CAAA,UAAA,EAAA,WAAA,EAAA,SAAA,EAAA,cAAA,EAAA,SAAA,EAAA,cAAA,EAAA,cAAA,CASlE,CADS;EAER,MAAM,SAAS,GAAsC,OAAO;EAE5D,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,YAAY,GAAI,KAAU,IAAI;IAClC,IAAI,KAAK,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE;MACvD,UAAU,CAAC,WAAW,IAAI,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC;KAClD,MAAM;MACL,UAAU,CAAC,EAAE,CAAC;IACf;IACD,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAM,IAAI,GACR,KAAA,CAAA,aAAA,CAAC,SAAS,EAAA,MAAA,CAAA,MAAA,CAAA;IACR,YAAY,EAAE,YAAY;IAC1B,SAAS,EAAE,GAAG,CAAC,SAAS,EAAE,YAAY,IAAI,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,MAAM,CAAC,SAAS;EAAC,CAAA,EACvF,KAAK,CAAA,EAER,QAAQ,CAEZ;EAED,OAAO,OAAO,KAAK,EAAE,GACnB,KAAA,CAAA,aAAA,CAAC,OAAO,EAAA,MAAA,CAAA,MAAA,CAAA;IAAC,OAAO,EAAE,OAAO;IAAE,SAAS,EAAA;EAAA,CAAA,EAAK,YAAY,CAAA,EAClD,IAAI,CACG,GAEV,IACD;AACH,CAAC;AACD,SAAS,CAAC,WAAW,GAAG,WAAW","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip';\nexport var TableTextVariant;\n(function (TableTextVariant) {\n    TableTextVariant[\"div\"] = \"div\";\n    TableTextVariant[\"nav\"] = \"nav\";\n})(TableTextVariant || (TableTextVariant = {}));\nexport var WrapModifier;\n(function (WrapModifier) {\n    WrapModifier[\"wrap\"] = \"wrap\";\n    WrapModifier[\"nowrap\"] = \"nowrap\";\n    WrapModifier[\"truncate\"] = \"truncate\";\n    WrapModifier[\"breakWord\"] = \"breakWord\";\n    WrapModifier[\"fitContent\"] = \"fitContent\";\n})(WrapModifier || (WrapModifier = {}));\nexport const TableText = (_a) => {\n    var { children = null, className = '', variant = 'span', wrapModifier = null, tooltip: tooltipProp = '', tooltipProps = {}, onMouseEnter: onMouseEnterProp = () => { } } = _a, props = __rest(_a, [\"children\", \"className\", \"variant\", \"wrapModifier\", \"tooltip\", \"tooltipProps\", \"onMouseEnter\"]);\n    const Component = variant;\n    const [tooltip, setTooltip] = React.useState('');\n    const onMouseEnter = (event) => {\n        if (event.target.offsetWidth < event.target.scrollWidth) {\n            setTooltip(tooltipProp || event.target.innerText);\n        }\n        else {\n            setTooltip('');\n        }\n        onMouseEnterProp(event);\n    };\n    const text = (React.createElement(Component, Object.assign({ onMouseEnter: onMouseEnter, className: css(className, wrapModifier && styles.modifiers[wrapModifier], styles.tableText) }, props), children));\n    return tooltip !== '' ? (React.createElement(Tooltip, Object.assign({ content: tooltip, isVisible: true }, tooltipProps), text)) : (text);\n};\nTableText.displayName = 'TableText';\n//# sourceMappingURL=TableText.js.map"]},"metadata":{},"sourceType":"module"}