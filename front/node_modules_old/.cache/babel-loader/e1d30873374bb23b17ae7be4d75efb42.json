{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class MenuToggleCheckbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      this.props.onChange(event.target.checked, event);\n    };\n    this.calculateChecked = () => {\n      const {\n        isChecked,\n        defaultChecked\n      } = this.props;\n      if (isChecked === null) {\n        // return false here and the indeterminate state will be set to true through the ref\n        return false;\n      } else if (isChecked !== undefined) {\n        return isChecked;\n      }\n      return defaultChecked;\n    };\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(MenuToggleCheckbox.displayName)\n    };\n  }\n  render() {\n    const _a = this.props,\n      {\n        className,\n        isValid,\n        isDisabled,\n        isChecked,\n        children,\n        ouiaId,\n        ouiaSafe,\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        onChange,\n        defaultChecked,\n        id\n      } = _a,\n      props = __rest(_a, [\"className\", \"isValid\", \"isDisabled\", \"isChecked\", \"children\", \"ouiaId\", \"ouiaSafe\", \"onChange\", \"defaultChecked\", \"id\"]);\n    const text = children && React.createElement(\"span\", {\n      className: css(styles.checkLabel, className),\n      \"aria-hidden\": \"true\",\n      id: id\n    }, children);\n    return React.createElement(\"label\", {\n      className: css(styles.check, !children && styles.modifiers.standalone, className),\n      htmlFor: id\n    }, React.createElement(\"input\", Object.assign({\n      className: css(styles.checkInput)\n    }, this.calculateChecked() !== undefined && {\n      onChange: this.handleChange\n    }, {\n      name: id,\n      type: \"checkbox\",\n      ref: elem => elem && (elem.indeterminate = isChecked === null),\n      \"aria-invalid\": !isValid,\n      disabled: isDisabled\n    }, defaultChecked !== undefined ? {\n      defaultChecked\n    } : {\n      checked: isChecked\n    }, getOUIAProps(MenuToggleCheckbox.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), props)), text);\n  }\n}\nMenuToggleCheckbox.displayName = 'MenuToggleCheckbox';\nMenuToggleCheckbox.defaultProps = {\n  isValid: true,\n  isDisabled: false,\n  onChange: () => undefined\n};","map":{"version":3,"sources":["../../../../src/components/MenuToggle/MenuToggleCheckbox.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class MenuToggleCheckbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            this.props.onChange(event.target.checked, event);\n        };\n        this.calculateChecked = () => {\n            const { isChecked, defaultChecked } = this.props;\n            if (isChecked === null) {\n                // return false here and the indeterminate state will be set to true through the ref\n                return false;\n            }\n            else if (isChecked !== undefined) {\n                return isChecked;\n            }\n            return defaultChecked;\n        };\n        this.state = {\n            ouiaStateId: getDefaultOUIAId(MenuToggleCheckbox.displayName)\n        };\n    }\n    render() {\n        const _a = this.props, { className, isValid, isDisabled, isChecked, children, ouiaId, ouiaSafe, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        onChange, defaultChecked, id } = _a, props = __rest(_a, [\"className\", \"isValid\", \"isDisabled\", \"isChecked\", \"children\", \"ouiaId\", \"ouiaSafe\", \"onChange\", \"defaultChecked\", \"id\"]);\n        const text = children && (React.createElement(\"span\", { className: css(styles.checkLabel, className), \"aria-hidden\": \"true\", id: id }, children));\n        return (React.createElement(\"label\", { className: css(styles.check, !children && styles.modifiers.standalone, className), htmlFor: id },\n            React.createElement(\"input\", Object.assign({ className: css(styles.checkInput) }, (this.calculateChecked() !== undefined && { onChange: this.handleChange }), { name: id, type: \"checkbox\", ref: elem => elem && (elem.indeterminate = isChecked === null), \"aria-invalid\": !isValid, disabled: isDisabled }, (defaultChecked !== undefined ? { defaultChecked } : { checked: isChecked }), getOUIAProps(MenuToggleCheckbox.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), props)),\n            text));\n    }\n}\nMenuToggleCheckbox.displayName = 'MenuToggleCheckbox';\nMenuToggleCheckbox.defaultProps = {\n    isValid: true,\n    isDisabled: false,\n    onChange: () => undefined\n};\n//# sourceMappingURL=MenuToggleCheckbox.js.map"]},"metadata":{},"sourceType":"module"}