{"ast":null,"code":"/**\n * merge-props.js\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport * as React from 'react';\nimport mergeWith from 'lodash/mergeWith';\nimport { css } from '@patternfly/react-styles';\n/**\n * @param {any} props - Props\n */\nexport function mergeProps(...props) {\n  const firstProps = props[0];\n  const restProps = props.slice(1);\n  if (!restProps.length) {\n    return mergeWith({}, firstProps);\n  }\n  // Avoid mutating the first prop collection\n  return mergeWith(mergeWith({}, firstProps), ...restProps, (a, b, key) => {\n    if (key === 'children') {\n      if (a && b) {\n        // compose the two\n        return React.cloneElement(a, {\n          children: b\n        });\n      }\n      // Children have to be merged in reverse order for Reactabular\n      // logic to work.\n      return Object.assign(Object.assign({}, b), a);\n    }\n    if (key === 'className') {\n      // Process class names through classNames to merge properly\n      // as a string.\n      return css(a, b);\n    }\n    return undefined;\n  });\n}","map":{"version":3,"sources":["../../../../../src/components/Table/base/merge-props.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;AACH,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,OAAO,SAAS,MAAM,kBAAkB;AACxC,SAAS,GAAG,QAAQ,0BAA0B;AAE9C;;AAEG;AACH,OAAM,SAAU,UAAU,CAAC,GAAG,KAAU,EAAA;EACtC,MAAM,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC;EAC3B,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;EAEhC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;IACrB,OAAO,SAAS,CAAC,CAAA,CAAE,EAAE,UAAU,CAAC;EACjC;EAED;EACA,OAAO,SAAS,CAAC,SAAS,CAAC,CAAA,CAAE,EAAE,UAAU,CAAC,EAAE,GAAG,SAAS,EAAE,CAAC,CAAM,EAAE,CAAM,EAAE,GAAQ,KAAI;IACrF,IAAI,GAAG,KAAK,UAAU,EAAE;MACtB,IAAI,CAAC,IAAI,CAAC,EAAE;QACV;QACA,OAAO,KAAK,CAAC,YAAY,CAAC,CAAC,EAAE;UAC3B,QAAQ,EAAE;SACX,CAAC;MACH;MAED;MACA;MACA,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAY,CAAC,CAAA,EAAK,CAAC,CAAA;IACpB;IAED,IAAI,GAAG,KAAK,WAAW,EAAE;MACvB;MACA;MACA,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACjB;IAED,OAAO,SAAS;EAClB,CAAC,CAAC;AACJ","sourceRoot":"","sourcesContent":["/**\n * merge-props.js\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport * as React from 'react';\nimport mergeWith from 'lodash/mergeWith';\nimport { css } from '@patternfly/react-styles';\n/**\n * @param {any} props - Props\n */\nexport function mergeProps(...props) {\n    const firstProps = props[0];\n    const restProps = props.slice(1);\n    if (!restProps.length) {\n        return mergeWith({}, firstProps);\n    }\n    // Avoid mutating the first prop collection\n    return mergeWith(mergeWith({}, firstProps), ...restProps, (a, b, key) => {\n        if (key === 'children') {\n            if (a && b) {\n                // compose the two\n                return React.cloneElement(a, {\n                    children: b\n                });\n            }\n            // Children have to be merged in reverse order for Reactabular\n            // logic to work.\n            return Object.assign(Object.assign({}, b), a);\n        }\n        if (key === 'className') {\n            // Process class names through classNames to merge properly\n            // as a string.\n            return css(a, b);\n        }\n        return undefined;\n    });\n}\n//# sourceMappingURL=merge-props.js.map"]},"metadata":{},"sourceType":"module"}