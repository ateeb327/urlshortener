{"ast":null,"code":"import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { TableText } from '../../TableText';\nexport const compoundExpand = (value, {\n  rowIndex,\n  columnIndex,\n  rowData,\n  column,\n  property\n}) => {\n  if (!value) {\n    return null;\n  }\n  const {\n    title,\n    props\n  } = value;\n  const {\n    extraParams: {\n      onExpand,\n      expandId = 'expand-toggle'\n    }\n  } = column;\n  const extraData = {\n    rowIndex,\n    columnIndex,\n    column,\n    property\n  };\n  /**\n   * @param {React.MouseEvent} event - Mouse event\n   */\n  function onToggle(event) {\n    // tslint:disable-next-line:no-unused-expression\n    onExpand && onExpand(event, rowIndex, columnIndex, props.isOpen, rowData, extraData);\n  }\n  return {\n    className: css(styles.tableCompoundExpansionToggle, props.isOpen && styles.modifiers.expanded),\n    children: props.isOpen !== undefined && React.createElement(\"button\", {\n      type: \"button\",\n      className: css(styles.tableButton),\n      onClick: onToggle,\n      \"aria-expanded\": props.isOpen,\n      \"aria-controls\": props.ariaControls,\n      id: `${expandId}-${rowIndex}-${columnIndex}`\n    }, React.createElement(TableText, null, title))\n  };\n};","map":{"version":3,"sources":["../../../../../../src/components/Table/utils/decorators/compoundExpand.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,MAAM,MAAM,qDAAqD;AAExE,SAAS,SAAS,QAAQ,iBAAiB;AAE3C,OAAO,MAAM,cAAc,GAAe,CACxC,KAA0B,EAC1B;EAAE,QAAQ;EAAE,WAAW;EAAE,OAAO;EAAE,MAAM;EAAE;AAAQ,CAAU,KAC1D;EACF,IAAI,CAAC,KAAK,EAAE;IACV,OAAO,IAAI;EACZ;EACD,MAAM;IAAE,KAAK;IAAE;EAAK,CAAE,GAAG,KAAK;EAC9B,MAAM;IACJ,WAAW,EAAE;MAAE,QAAQ;MAAE,QAAQ,GAAG;IAAe;EAAE,CACtD,GAAG,MAAM;EACV,MAAM,SAAS,GAAG;IAChB,QAAQ;IACR,WAAW;IACX,MAAM;IACN;GACD;EACD;;AAEG;EACH,SAAS,QAAQ,CAAC,KAAuB,EAAA;IACvC;IACA,QAAQ,IAAI,QAAQ,CAAC,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,KAAK,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC;EACtF;EACA,OAAO;IACL,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,4BAA4B,EAAE,KAAK,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;IAC9F,QAAQ,EAAE,KAAK,CAAC,MAAM,KAAK,SAAS,IAClC,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;MACE,IAAI,EAAC,QAAQ;MACb,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;MAClC,OAAO,EAAE,QAAQ;MAAA,eAAA,EACF,KAAK,CAAC,MAAM;MAAA,eAAA,EACZ,KAAK,CAAC,YAAY;MACjC,EAAE,EAAE,GAAG,QAAQ,IAAI,QAAQ,IAAI,WAAW;IAAE,CAAA,EAE5C,KAAA,CAAA,aAAA,CAAC,SAAS,EAAA,IAAA,EAAE,KAAK,CAAa;GAGnC;AACH,CAAC","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { TableText } from '../../TableText';\nexport const compoundExpand = (value, { rowIndex, columnIndex, rowData, column, property }) => {\n    if (!value) {\n        return null;\n    }\n    const { title, props } = value;\n    const { extraParams: { onExpand, expandId = 'expand-toggle' } } = column;\n    const extraData = {\n        rowIndex,\n        columnIndex,\n        column,\n        property\n    };\n    /**\n     * @param {React.MouseEvent} event - Mouse event\n     */\n    function onToggle(event) {\n        // tslint:disable-next-line:no-unused-expression\n        onExpand && onExpand(event, rowIndex, columnIndex, props.isOpen, rowData, extraData);\n    }\n    return {\n        className: css(styles.tableCompoundExpansionToggle, props.isOpen && styles.modifiers.expanded),\n        children: props.isOpen !== undefined && (React.createElement(\"button\", { type: \"button\", className: css(styles.tableButton), onClick: onToggle, \"aria-expanded\": props.isOpen, \"aria-controls\": props.ariaControls, id: `${expandId}-${rowIndex}-${columnIndex}` },\n            React.createElement(TableText, null, title)))\n    };\n};\n//# sourceMappingURL=compoundExpand.js.map"]},"metadata":{},"sourceType":"module"}