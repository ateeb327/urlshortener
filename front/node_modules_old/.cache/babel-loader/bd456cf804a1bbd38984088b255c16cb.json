{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tile/tile';\nimport { css } from '@patternfly/react-styles';\nexport const Tile = _a => {\n  var {\n      children,\n      title,\n      icon,\n      isStacked,\n      isSelected,\n      isDisabled,\n      isDisplayLarge,\n      className\n    } = _a,\n    props = __rest(_a, [\"children\", \"title\", \"icon\", \"isStacked\", \"isSelected\", \"isDisabled\", \"isDisplayLarge\", \"className\"]);\n  return React.createElement(\"div\", Object.assign({\n    role: \"option\",\n    \"aria-selected\": isSelected\n  }, isDisabled && {\n    'aria-disabled': isDisabled\n  }, {\n    className: css(styles.tile, isSelected && styles.modifiers.selected, isDisabled && styles.modifiers.disabled, isDisplayLarge && styles.modifiers.displayLg, className),\n    tabIndex: 0\n  }, props), React.createElement(\"div\", {\n    className: css(styles.tileHeader, isStacked && styles.modifiers.stacked)\n  }, icon && React.createElement(\"div\", {\n    className: css(styles.tileIcon)\n  }, icon), React.createElement(\"div\", {\n    className: css(styles.tileTitle)\n  }, title)), children && React.createElement(\"div\", {\n    className: css(styles.tileBody)\n  }, children));\n};\nTile.displayName = 'Tile';","map":{"version":3,"sources":["../../../../src/components/Tile/Tile.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,OAAO,MAAM,MAAM,mDAAmD;AACtE,SAAS,GAAG,QAAQ,0BAA0B;AAqB9C,OAAO,MAAM,IAAI,GAAwC,EAU7C,IAAI;MAVyC;MACvD,QAAQ;MACR,KAAK;MACL,IAAI;MACJ,SAAS;MACT,UAAU;MACV,UAAU;MACV,cAAc;MACd;IAAS,CAAA,GAAA,EAEC;IADP,KAAK,GAAA,MAAA,CAAA,EAAA,EAT+C,CAAA,UAAA,EAAA,OAAA,EAAA,MAAA,EAAA,WAAA,EAAA,YAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,WAAA,CAUxD,CADS;EACO,OACf,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;IACE,IAAI,EAAC,QAAQ;IAAA,eAAA,EACE;EAAU,CAAA,EACpB,UAAU,IAAI;IAAE,eAAe,EAAE;EAAU,CAAE,EAAC;IACnD,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,IAAI,EACX,UAAU,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,EACvC,UAAU,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,EACvC,cAAc,IAAI,MAAM,CAAC,SAAS,CAAC,SAAS,EAC5C,SAAS,CACV;IACD,QAAQ,EAAE;EAAC,CAAA,EACP,KAAK,CAAA,EAET,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,OAAO;EAAC,CAAA,EAC1E,IAAI,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,QAAQ;EAAC,CAAA,EAAG,IAAI,CAAO,EAC3D,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS;EAAC,CAAA,EAAG,KAAK,CAAO,CAChD,EACL,QAAQ,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,QAAQ;EAAC,CAAA,EAAG,QAAQ,CAAO,CAC/D;CACP;AACD,IAAI,CAAC,WAAW,GAAG,MAAM","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tile/tile';\nimport { css } from '@patternfly/react-styles';\nexport const Tile = (_a) => {\n    var { children, title, icon, isStacked, isSelected, isDisabled, isDisplayLarge, className } = _a, props = __rest(_a, [\"children\", \"title\", \"icon\", \"isStacked\", \"isSelected\", \"isDisabled\", \"isDisplayLarge\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ role: \"option\", \"aria-selected\": isSelected }, (isDisabled && { 'aria-disabled': isDisabled }), { className: css(styles.tile, isSelected && styles.modifiers.selected, isDisabled && styles.modifiers.disabled, isDisplayLarge && styles.modifiers.displayLg, className), tabIndex: 0 }, props),\n        React.createElement(\"div\", { className: css(styles.tileHeader, isStacked && styles.modifiers.stacked) },\n            icon && React.createElement(\"div\", { className: css(styles.tileIcon) }, icon),\n            React.createElement(\"div\", { className: css(styles.tileTitle) }, title)),\n        children && React.createElement(\"div\", { className: css(styles.tileBody) }, children)));\n};\nTile.displayName = 'Tile';\n//# sourceMappingURL=Tile.js.map"]},"metadata":{},"sourceType":"module"}