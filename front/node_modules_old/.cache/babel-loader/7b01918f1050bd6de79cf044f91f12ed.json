{"ast":null,"code":"import { __rest } from \"tslib\";\n/* eslint-disable no-console */\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tooltip/tooltip';\nimport { css } from '@patternfly/react-styles';\nimport { TooltipContent } from './TooltipContent';\nimport { TooltipArrow } from './TooltipArrow';\nimport { KeyTypes } from '../../helpers/constants';\nimport tooltipMaxWidth from '@patternfly/react-tokens/dist/esm/c_tooltip_MaxWidth';\nimport { Popper, getOpacityTransition } from '../../helpers/Popper/Popper';\nexport var TooltipPosition;\n(function (TooltipPosition) {\n  TooltipPosition[\"auto\"] = \"auto\";\n  TooltipPosition[\"top\"] = \"top\";\n  TooltipPosition[\"bottom\"] = \"bottom\";\n  TooltipPosition[\"left\"] = \"left\";\n  TooltipPosition[\"right\"] = \"right\";\n  TooltipPosition[\"topStart\"] = \"top-start\";\n  TooltipPosition[\"topEnd\"] = \"top-end\";\n  TooltipPosition[\"bottomStart\"] = \"bottom-start\";\n  TooltipPosition[\"bottomEnd\"] = \"bottom-end\";\n  TooltipPosition[\"leftStart\"] = \"left-start\";\n  TooltipPosition[\"leftEnd\"] = \"left-end\";\n  TooltipPosition[\"rightStart\"] = \"right-start\";\n  TooltipPosition[\"rightEnd\"] = \"right-end\";\n})(TooltipPosition || (TooltipPosition = {}));\n// id for associating trigger with the content aria-describedby or aria-labelledby\nlet pfTooltipIdCounter = 1;\nexport const Tooltip = _a => {\n  var {\n      content: bodyContent,\n      position = 'top',\n      trigger = 'mouseenter focus',\n      isVisible = false,\n      isContentLeftAligned = false,\n      enableFlip = true,\n      className = '',\n      entryDelay = 300,\n      exitDelay = 300,\n      appendTo = () => document.body,\n      zIndex = 9999,\n      maxWidth = tooltipMaxWidth.value,\n      distance = 15,\n      aria = 'describedby',\n      // For every initial starting position, there are 3 escape positions\n      flipBehavior = ['top', 'right', 'bottom', 'left', 'top', 'right', 'bottom'],\n      id = `pf-tooltip-${pfTooltipIdCounter++}`,\n      children,\n      animationDuration = 300,\n      reference,\n      'aria-live': ariaLive = reference ? 'polite' : 'off',\n      boundary,\n      isAppLauncher,\n      tippyProps,\n      removeFindDomNode = false,\n      onTooltipHidden = () => {}\n    } = _a,\n    rest = __rest(_a, [\"content\", \"position\", \"trigger\", \"isVisible\", \"isContentLeftAligned\", \"enableFlip\", \"className\", \"entryDelay\", \"exitDelay\", \"appendTo\", \"zIndex\", \"maxWidth\", \"distance\", \"aria\", \"flipBehavior\", \"id\", \"children\", \"animationDuration\", \"reference\", 'aria-live', \"boundary\", \"isAppLauncher\", \"tippyProps\", \"removeFindDomNode\", \"onTooltipHidden\"]);\n  if (process.env.NODE_ENV !== 'production') {\n    boundary !== undefined && console.warn('The Tooltip boundary prop has been deprecated. If you want to constrain the popper to a specific element use the appendTo prop instead.');\n    isAppLauncher !== undefined && console.warn('The Tooltip isAppLauncher prop has been deprecated and is no longer used.');\n    tippyProps !== undefined && console.warn('The Tooltip tippyProps prop has been deprecated and is no longer used.');\n  }\n  // could make this a prop in the future (true | false | 'toggle')\n  const hideOnClick = true;\n  const triggerOnMouseenter = trigger.includes('mouseenter');\n  const triggerOnFocus = trigger.includes('focus');\n  const triggerOnClick = trigger.includes('click');\n  const triggerManually = trigger === 'manual';\n  const [visible, setVisible] = React.useState(false);\n  const [opacity, setOpacity] = React.useState(0);\n  const transitionTimerRef = React.useRef(null);\n  const showTimerRef = React.useRef(null);\n  const hideTimerRef = React.useRef(null);\n  const prevExitDelayRef = React.useRef();\n  const clearTimeouts = timeoutRefs => {\n    timeoutRefs.forEach(ref => {\n      if (ref.current) {\n        clearTimeout(ref.current);\n      }\n    });\n  };\n  // Cancel all timers on unmount\n  React.useEffect(() => () => {\n    clearTimeouts([transitionTimerRef, hideTimerRef, showTimerRef]);\n  }, []);\n  const onDocumentKeyDown = event => {\n    if (!triggerManually) {\n      if (event.key === KeyTypes.Escape && visible) {\n        hide();\n      }\n    }\n  };\n  const onTriggerEnter = event => {\n    if (event.key === KeyTypes.Enter) {\n      if (!visible) {\n        show();\n      } else {\n        hide();\n      }\n    }\n  };\n  React.useEffect(() => {\n    if (isVisible) {\n      show();\n    } else {\n      hide();\n    }\n  }, [isVisible]);\n  React.useEffect(() => {\n    if (prevExitDelayRef.current < exitDelay) {\n      clearTimeouts([transitionTimerRef, hideTimerRef]);\n      hideTimerRef.current = setTimeout(() => {\n        setOpacity(0);\n        transitionTimerRef.current = setTimeout(() => {\n          setVisible(false);\n          onTooltipHidden();\n        }, animationDuration);\n      }, exitDelay);\n    }\n    prevExitDelayRef.current = exitDelay;\n  }, [exitDelay]);\n  const show = () => {\n    clearTimeouts([transitionTimerRef, hideTimerRef]);\n    showTimerRef.current = setTimeout(() => {\n      setVisible(true);\n      setOpacity(1);\n    }, entryDelay);\n  };\n  const hide = () => {\n    clearTimeouts([showTimerRef]);\n    hideTimerRef.current = setTimeout(() => {\n      setOpacity(0);\n      transitionTimerRef.current = setTimeout(() => {\n        setVisible(false);\n        onTooltipHidden();\n      }, animationDuration);\n    }, exitDelay);\n  };\n  const positionModifiers = {\n    top: styles.modifiers.top,\n    bottom: styles.modifiers.bottom,\n    left: styles.modifiers.left,\n    right: styles.modifiers.right,\n    'top-start': styles.modifiers.topLeft,\n    'top-end': styles.modifiers.topRight,\n    'bottom-start': styles.modifiers.bottomLeft,\n    'bottom-end': styles.modifiers.bottomRight,\n    'left-start': styles.modifiers.leftTop,\n    'left-end': styles.modifiers.leftBottom,\n    'right-start': styles.modifiers.rightTop,\n    'right-end': styles.modifiers.rightBottom\n  };\n  const hasCustomMaxWidth = maxWidth !== tooltipMaxWidth.value;\n  const content = React.createElement(\"div\", Object.assign({\n    \"aria-live\": ariaLive,\n    className: css(styles.tooltip, className),\n    role: \"tooltip\",\n    id: id,\n    style: {\n      maxWidth: hasCustomMaxWidth ? maxWidth : null,\n      opacity,\n      transition: getOpacityTransition(animationDuration)\n    }\n  }, rest), React.createElement(TooltipArrow, null), React.createElement(TooltipContent, {\n    isLeftAligned: isContentLeftAligned\n  }, bodyContent));\n  const onDocumentClick = (event, triggerElement) => {\n    // event.currentTarget = document\n    // event.target could be triggerElement or something else\n    if (hideOnClick === true) {\n      // hide on inside the toggle as well as on outside clicks\n      if (visible) {\n        hide();\n      } else if (event.target === triggerElement) {\n        show();\n      }\n    } else if (hideOnClick === 'toggle' && event.target === triggerElement) {\n      // prevent outside clicks from hiding but allow it to still be toggled on toggle click\n      if (visible) {\n        hide();\n      } else {\n        show();\n      }\n    } else if (hideOnClick === false && !visible && event.target === triggerElement) {\n      show();\n    }\n  };\n  const addAriaToTrigger = () => {\n    if (aria === 'describedby' && children && children.props && !children.props['aria-describedby']) {\n      return React.cloneElement(children, {\n        'aria-describedby': id\n      });\n    } else if (aria === 'labelledby' && children.props && !children.props['aria-labelledby']) {\n      return React.cloneElement(children, {\n        'aria-labelledby': id\n      });\n    }\n    return children;\n  };\n  return React.createElement(Popper, {\n    trigger: aria !== 'none' && visible ? addAriaToTrigger() : children,\n    reference: reference,\n    popper: content,\n    popperMatchesTriggerWidth: false,\n    appendTo: appendTo,\n    isVisible: visible,\n    positionModifiers: positionModifiers,\n    distance: distance,\n    placement: position,\n    onMouseEnter: triggerOnMouseenter && show,\n    onMouseLeave: triggerOnMouseenter && hide,\n    onPopperMouseEnter: triggerOnMouseenter && show,\n    onPopperMouseLeave: triggerOnMouseenter && hide,\n    onFocus: triggerOnFocus && show,\n    onBlur: triggerOnFocus && hide,\n    onDocumentClick: triggerOnClick && onDocumentClick,\n    onDocumentKeyDown: triggerManually ? null : onDocumentKeyDown,\n    onTriggerEnter: triggerManually ? null : onTriggerEnter,\n    enableFlip: enableFlip,\n    zIndex: zIndex,\n    flipBehavior: flipBehavior,\n    removeFindDomNode: removeFindDomNode\n  });\n};\nTooltip.displayName = 'Tooltip';","map":{"version":3,"sources":["../../../../src/components/Tooltip/Tooltip.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\n/* eslint-disable no-console */\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tooltip/tooltip';\nimport { css } from '@patternfly/react-styles';\nimport { TooltipContent } from './TooltipContent';\nimport { TooltipArrow } from './TooltipArrow';\nimport { KeyTypes } from '../../helpers/constants';\nimport tooltipMaxWidth from '@patternfly/react-tokens/dist/esm/c_tooltip_MaxWidth';\nimport { Popper, getOpacityTransition } from '../../helpers/Popper/Popper';\nexport var TooltipPosition;\n(function (TooltipPosition) {\n    TooltipPosition[\"auto\"] = \"auto\";\n    TooltipPosition[\"top\"] = \"top\";\n    TooltipPosition[\"bottom\"] = \"bottom\";\n    TooltipPosition[\"left\"] = \"left\";\n    TooltipPosition[\"right\"] = \"right\";\n    TooltipPosition[\"topStart\"] = \"top-start\";\n    TooltipPosition[\"topEnd\"] = \"top-end\";\n    TooltipPosition[\"bottomStart\"] = \"bottom-start\";\n    TooltipPosition[\"bottomEnd\"] = \"bottom-end\";\n    TooltipPosition[\"leftStart\"] = \"left-start\";\n    TooltipPosition[\"leftEnd\"] = \"left-end\";\n    TooltipPosition[\"rightStart\"] = \"right-start\";\n    TooltipPosition[\"rightEnd\"] = \"right-end\";\n})(TooltipPosition || (TooltipPosition = {}));\n// id for associating trigger with the content aria-describedby or aria-labelledby\nlet pfTooltipIdCounter = 1;\nexport const Tooltip = (_a) => {\n    var { content: bodyContent, position = 'top', trigger = 'mouseenter focus', isVisible = false, isContentLeftAligned = false, enableFlip = true, className = '', entryDelay = 300, exitDelay = 300, appendTo = () => document.body, zIndex = 9999, maxWidth = tooltipMaxWidth.value, distance = 15, aria = 'describedby', \n    // For every initial starting position, there are 3 escape positions\n    flipBehavior = ['top', 'right', 'bottom', 'left', 'top', 'right', 'bottom'], id = `pf-tooltip-${pfTooltipIdCounter++}`, children, animationDuration = 300, reference, 'aria-live': ariaLive = reference ? 'polite' : 'off', boundary, isAppLauncher, tippyProps, removeFindDomNode = false, onTooltipHidden = () => { } } = _a, rest = __rest(_a, [\"content\", \"position\", \"trigger\", \"isVisible\", \"isContentLeftAligned\", \"enableFlip\", \"className\", \"entryDelay\", \"exitDelay\", \"appendTo\", \"zIndex\", \"maxWidth\", \"distance\", \"aria\", \"flipBehavior\", \"id\", \"children\", \"animationDuration\", \"reference\", 'aria-live', \"boundary\", \"isAppLauncher\", \"tippyProps\", \"removeFindDomNode\", \"onTooltipHidden\"]);\n    if (process.env.NODE_ENV !== 'production') {\n        boundary !== undefined &&\n            console.warn('The Tooltip boundary prop has been deprecated. If you want to constrain the popper to a specific element use the appendTo prop instead.');\n        isAppLauncher !== undefined &&\n            console.warn('The Tooltip isAppLauncher prop has been deprecated and is no longer used.');\n        tippyProps !== undefined && console.warn('The Tooltip tippyProps prop has been deprecated and is no longer used.');\n    }\n    // could make this a prop in the future (true | false | 'toggle')\n    const hideOnClick = true;\n    const triggerOnMouseenter = trigger.includes('mouseenter');\n    const triggerOnFocus = trigger.includes('focus');\n    const triggerOnClick = trigger.includes('click');\n    const triggerManually = trigger === 'manual';\n    const [visible, setVisible] = React.useState(false);\n    const [opacity, setOpacity] = React.useState(0);\n    const transitionTimerRef = React.useRef(null);\n    const showTimerRef = React.useRef(null);\n    const hideTimerRef = React.useRef(null);\n    const prevExitDelayRef = React.useRef();\n    const clearTimeouts = (timeoutRefs) => {\n        timeoutRefs.forEach(ref => {\n            if (ref.current) {\n                clearTimeout(ref.current);\n            }\n        });\n    };\n    // Cancel all timers on unmount\n    React.useEffect(() => () => {\n        clearTimeouts([transitionTimerRef, hideTimerRef, showTimerRef]);\n    }, []);\n    const onDocumentKeyDown = (event) => {\n        if (!triggerManually) {\n            if (event.key === KeyTypes.Escape && visible) {\n                hide();\n            }\n        }\n    };\n    const onTriggerEnter = (event) => {\n        if (event.key === KeyTypes.Enter) {\n            if (!visible) {\n                show();\n            }\n            else {\n                hide();\n            }\n        }\n    };\n    React.useEffect(() => {\n        if (isVisible) {\n            show();\n        }\n        else {\n            hide();\n        }\n    }, [isVisible]);\n    React.useEffect(() => {\n        if (prevExitDelayRef.current < exitDelay) {\n            clearTimeouts([transitionTimerRef, hideTimerRef]);\n            hideTimerRef.current = setTimeout(() => {\n                setOpacity(0);\n                transitionTimerRef.current = setTimeout(() => {\n                    setVisible(false);\n                    onTooltipHidden();\n                }, animationDuration);\n            }, exitDelay);\n        }\n        prevExitDelayRef.current = exitDelay;\n    }, [exitDelay]);\n    const show = () => {\n        clearTimeouts([transitionTimerRef, hideTimerRef]);\n        showTimerRef.current = setTimeout(() => {\n            setVisible(true);\n            setOpacity(1);\n        }, entryDelay);\n    };\n    const hide = () => {\n        clearTimeouts([showTimerRef]);\n        hideTimerRef.current = setTimeout(() => {\n            setOpacity(0);\n            transitionTimerRef.current = setTimeout(() => {\n                setVisible(false);\n                onTooltipHidden();\n            }, animationDuration);\n        }, exitDelay);\n    };\n    const positionModifiers = {\n        top: styles.modifiers.top,\n        bottom: styles.modifiers.bottom,\n        left: styles.modifiers.left,\n        right: styles.modifiers.right,\n        'top-start': styles.modifiers.topLeft,\n        'top-end': styles.modifiers.topRight,\n        'bottom-start': styles.modifiers.bottomLeft,\n        'bottom-end': styles.modifiers.bottomRight,\n        'left-start': styles.modifiers.leftTop,\n        'left-end': styles.modifiers.leftBottom,\n        'right-start': styles.modifiers.rightTop,\n        'right-end': styles.modifiers.rightBottom\n    };\n    const hasCustomMaxWidth = maxWidth !== tooltipMaxWidth.value;\n    const content = (React.createElement(\"div\", Object.assign({ \"aria-live\": ariaLive, className: css(styles.tooltip, className), role: \"tooltip\", id: id, style: {\n            maxWidth: hasCustomMaxWidth ? maxWidth : null,\n            opacity,\n            transition: getOpacityTransition(animationDuration)\n        } }, rest),\n        React.createElement(TooltipArrow, null),\n        React.createElement(TooltipContent, { isLeftAligned: isContentLeftAligned }, bodyContent)));\n    const onDocumentClick = (event, triggerElement) => {\n        // event.currentTarget = document\n        // event.target could be triggerElement or something else\n        if (hideOnClick === true) {\n            // hide on inside the toggle as well as on outside clicks\n            if (visible) {\n                hide();\n            }\n            else if (event.target === triggerElement) {\n                show();\n            }\n        }\n        else if (hideOnClick === 'toggle' && event.target === triggerElement) {\n            // prevent outside clicks from hiding but allow it to still be toggled on toggle click\n            if (visible) {\n                hide();\n            }\n            else {\n                show();\n            }\n        }\n        else if (hideOnClick === false && !visible && event.target === triggerElement) {\n            show();\n        }\n    };\n    const addAriaToTrigger = () => {\n        if (aria === 'describedby' && children && children.props && !children.props['aria-describedby']) {\n            return React.cloneElement(children, { 'aria-describedby': id });\n        }\n        else if (aria === 'labelledby' && children.props && !children.props['aria-labelledby']) {\n            return React.cloneElement(children, { 'aria-labelledby': id });\n        }\n        return children;\n    };\n    return (React.createElement(Popper, { trigger: aria !== 'none' && visible ? addAriaToTrigger() : children, reference: reference, popper: content, popperMatchesTriggerWidth: false, appendTo: appendTo, isVisible: visible, positionModifiers: positionModifiers, distance: distance, placement: position, onMouseEnter: triggerOnMouseenter && show, onMouseLeave: triggerOnMouseenter && hide, onPopperMouseEnter: triggerOnMouseenter && show, onPopperMouseLeave: triggerOnMouseenter && hide, onFocus: triggerOnFocus && show, onBlur: triggerOnFocus && hide, onDocumentClick: triggerOnClick && onDocumentClick, onDocumentKeyDown: triggerManually ? null : onDocumentKeyDown, onTriggerEnter: triggerManually ? null : onTriggerEnter, enableFlip: enableFlip, zIndex: zIndex, flipBehavior: flipBehavior, removeFindDomNode: removeFindDomNode }));\n};\nTooltip.displayName = 'Tooltip';\n//# sourceMappingURL=Tooltip.js.map"]},"metadata":{},"sourceType":"module"}