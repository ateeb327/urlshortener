{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport { getDefaultOUIAId, getOUIAProps } from '../../helpers';\nimport { ASTERISK } from '../../helpers/htmlConstants';\n// tslint:disable-next-line:no-empty\nconst defaultOnChange = () => {};\nexport class Checkbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      this.props.onChange(event.currentTarget.checked, event);\n    };\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(Checkbox.displayName)\n    };\n  }\n  render() {\n    const _a = this.props,\n      {\n        'aria-label': ariaLabel,\n        className,\n        onChange,\n        isValid,\n        isDisabled,\n        isRequired,\n        isChecked,\n        label,\n        checked,\n        defaultChecked,\n        description,\n        body,\n        ouiaId,\n        ouiaSafe,\n        component: Component\n      } = _a,\n      props = __rest(_a, ['aria-label', \"className\", \"onChange\", \"isValid\", \"isDisabled\", \"isRequired\", \"isChecked\", \"label\", \"checked\", \"defaultChecked\", \"description\", \"body\", \"ouiaId\", \"ouiaSafe\", \"component\"]);\n    if (!props.id) {\n      // eslint-disable-next-line no-console\n      console.error('Checkbox:', 'id is required to make input accessible');\n    }\n    const checkedProps = {};\n    if ([true, false].includes(checked) || isChecked === true) {\n      checkedProps.checked = checked || isChecked;\n    }\n    if (onChange !== defaultOnChange) {\n      checkedProps.checked = isChecked;\n    }\n    if ([false, true].includes(defaultChecked)) {\n      checkedProps.defaultChecked = defaultChecked;\n    }\n    checkedProps.checked = checkedProps.checked === null ? false : checkedProps.checked;\n    return React.createElement(Component, {\n      className: css(styles.check, !label && styles.modifiers.standalone, className)\n    }, React.createElement(\"input\", Object.assign({}, props, {\n      className: css(styles.checkInput),\n      type: \"checkbox\",\n      onChange: this.handleChange,\n      \"aria-invalid\": !isValid,\n      \"aria-label\": ariaLabel,\n      disabled: isDisabled,\n      required: isRequired,\n      ref: elem => elem && (elem.indeterminate = isChecked === null)\n    }, checkedProps, getOUIAProps(Checkbox.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe))), label && React.createElement(\"label\", {\n      className: css(styles.checkLabel, isDisabled && styles.modifiers.disabled),\n      htmlFor: props.id\n    }, label, isRequired && React.createElement(\"span\", {\n      className: css(styles.checkLabelRequired),\n      \"aria-hidden\": \"true\"\n    }, ASTERISK)), description && React.createElement(\"span\", {\n      className: css(styles.checkDescription)\n    }, description), body && React.createElement(\"span\", {\n      className: css(styles.checkBody)\n    }, body));\n  }\n}\nCheckbox.displayName = 'Checkbox';\nCheckbox.defaultProps = {\n  className: '',\n  isValid: true,\n  isDisabled: false,\n  isRequired: false,\n  isChecked: false,\n  onChange: defaultOnChange,\n  ouiaSafe: true,\n  component: 'div'\n};","map":{"version":3,"sources":["../../../../src/components/Checkbox/Checkbox.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport { getDefaultOUIAId, getOUIAProps } from '../../helpers';\nimport { ASTERISK } from '../../helpers/htmlConstants';\n// tslint:disable-next-line:no-empty\nconst defaultOnChange = () => { };\nexport class Checkbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            this.props.onChange(event.currentTarget.checked, event);\n        };\n        this.state = {\n            ouiaStateId: getDefaultOUIAId(Checkbox.displayName)\n        };\n    }\n    render() {\n        const _a = this.props, { 'aria-label': ariaLabel, className, onChange, isValid, isDisabled, isRequired, isChecked, label, checked, defaultChecked, description, body, ouiaId, ouiaSafe, component: Component } = _a, props = __rest(_a, ['aria-label', \"className\", \"onChange\", \"isValid\", \"isDisabled\", \"isRequired\", \"isChecked\", \"label\", \"checked\", \"defaultChecked\", \"description\", \"body\", \"ouiaId\", \"ouiaSafe\", \"component\"]);\n        if (!props.id) {\n            // eslint-disable-next-line no-console\n            console.error('Checkbox:', 'id is required to make input accessible');\n        }\n        const checkedProps = {};\n        if ([true, false].includes(checked) || isChecked === true) {\n            checkedProps.checked = checked || isChecked;\n        }\n        if (onChange !== defaultOnChange) {\n            checkedProps.checked = isChecked;\n        }\n        if ([false, true].includes(defaultChecked)) {\n            checkedProps.defaultChecked = defaultChecked;\n        }\n        checkedProps.checked = checkedProps.checked === null ? false : checkedProps.checked;\n        return (React.createElement(Component, { className: css(styles.check, !label && styles.modifiers.standalone, className) },\n            React.createElement(\"input\", Object.assign({}, props, { className: css(styles.checkInput), type: \"checkbox\", onChange: this.handleChange, \"aria-invalid\": !isValid, \"aria-label\": ariaLabel, disabled: isDisabled, required: isRequired, ref: elem => elem && (elem.indeterminate = isChecked === null) }, checkedProps, getOUIAProps(Checkbox.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe))),\n            label && (React.createElement(\"label\", { className: css(styles.checkLabel, isDisabled && styles.modifiers.disabled), htmlFor: props.id },\n                label,\n                isRequired && (React.createElement(\"span\", { className: css(styles.checkLabelRequired), \"aria-hidden\": \"true\" }, ASTERISK)))),\n            description && React.createElement(\"span\", { className: css(styles.checkDescription) }, description),\n            body && React.createElement(\"span\", { className: css(styles.checkBody) }, body)));\n    }\n}\nCheckbox.displayName = 'Checkbox';\nCheckbox.defaultProps = {\n    className: '',\n    isValid: true,\n    isDisabled: false,\n    isRequired: false,\n    isChecked: false,\n    onChange: defaultOnChange,\n    ouiaSafe: true,\n    component: 'div'\n};\n//# sourceMappingURL=Checkbox.js.map"]},"metadata":{},"sourceType":"module"}