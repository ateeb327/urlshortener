{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { Title, TitleSizes } from '../Title';\nimport { PopoverHeaderIcon } from './PopoverHeaderIcon';\nimport { PopoverHeaderText } from './PopoverHeaderText';\nexport const PopoverHeader = _a => {\n  var {\n      children,\n      icon,\n      className,\n      titleHeadingLevel = 'h6',\n      alertSeverityVariant,\n      id,\n      alertSeverityScreenReaderText\n    } = _a,\n    props = __rest(_a, [\"children\", \"icon\", \"className\", \"titleHeadingLevel\", \"alertSeverityVariant\", \"id\", \"alertSeverityScreenReaderText\"]);\n  const HeadingLevel = titleHeadingLevel;\n  return icon || alertSeverityVariant ? React.createElement(\"header\", Object.assign({\n    className: css('pf-c-popover__header', className),\n    id: id\n  }, props), React.createElement(HeadingLevel, {\n    className: css(styles.popoverTitle, icon && styles.modifiers.icon)\n  }, icon && React.createElement(PopoverHeaderIcon, null, icon), alertSeverityVariant && alertSeverityScreenReaderText && React.createElement(\"span\", {\n    className: \"pf-u-screen-reader\"\n  }, alertSeverityScreenReaderText), React.createElement(PopoverHeaderText, null, children))) : React.createElement(Title, Object.assign({\n    headingLevel: titleHeadingLevel,\n    size: TitleSizes.md,\n    id: id,\n    className: className\n  }, props), children);\n};\nPopoverHeader.displayName = 'PopoverHeader';","map":{"version":3,"sources":["../../../../src/components/Popover/PopoverHeader.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,MAAM,MAAM,yDAAyD;AAC5E,SAAS,KAAK,EAAE,UAAU,QAAQ,UAAU;AAC5C,SAAS,iBAAiB,QAAQ,qBAAqB;AACvD,SAAS,iBAAiB,QAAQ,qBAAqB;AAmBvD,OAAO,MAAM,aAAa,GAAiD,EAStD,IAAI;MATkD;MACzE,QAAQ;MACR,IAAI;MACJ,SAAS;MACT,iBAAiB,GAAG,IAAI;MACxB,oBAAoB;MACpB,EAAE;MACF;IAA6B,CAAA,GAAA,EAEV;IADhB,KAAK,GAAA,MAAA,CAAA,EAAA,EARiE,CAAA,UAAA,EAAA,MAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,sBAAA,EAAA,IAAA,EAAA,+BAAA,CAS1E,CADS;EAER,MAAM,YAAY,GAAG,iBAAiB;EAEtC,OAAO,IAAI,IAAI,oBAAoB,GACjC,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA;IAAQ,SAAS,EAAE,GAAG,CAAC,sBAAsB,EAAE,SAAS,CAAC;IAAE,EAAE,EAAE;EAAE,CAAA,EAAM,KAAK,CAAA,EAC1E,KAAA,CAAA,aAAA,CAAC,YAAY,EAAA;IAAC,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI;EAAC,CAAA,EAC7E,IAAI,IAAI,KAAA,CAAA,aAAA,CAAC,iBAAiB,EAAA,IAAA,EAAE,IAAI,CAAqB,EACrD,oBAAoB,IAAI,6BAA6B,IACpD,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAC;EAAoB,CAAA,EAAE,6BAA6B,CACpE,EACD,KAAA,CAAA,aAAA,CAAC,iBAAiB,EAAA,IAAA,EAAE,QAAQ,CAAqB,CACpC,CACR,GAET,KAAA,CAAA,aAAA,CAAC,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA;IAAC,YAAY,EAAE,iBAAiB;IAAE,IAAI,EAAE,UAAU,CAAC,EAAE;IAAE,EAAE,EAAE,EAAE;IAAE,SAAS,EAAE;EAAS,CAAA,EAAM,KAAK,CAAA,EACjG,QAAQ,CAEZ;AACH,CAAC;AACD,aAAa,CAAC,WAAW,GAAG,eAAe","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Popover/popover';\nimport { Title, TitleSizes } from '../Title';\nimport { PopoverHeaderIcon } from './PopoverHeaderIcon';\nimport { PopoverHeaderText } from './PopoverHeaderText';\nexport const PopoverHeader = (_a) => {\n    var { children, icon, className, titleHeadingLevel = 'h6', alertSeverityVariant, id, alertSeverityScreenReaderText } = _a, props = __rest(_a, [\"children\", \"icon\", \"className\", \"titleHeadingLevel\", \"alertSeverityVariant\", \"id\", \"alertSeverityScreenReaderText\"]);\n    const HeadingLevel = titleHeadingLevel;\n    return icon || alertSeverityVariant ? (React.createElement(\"header\", Object.assign({ className: css('pf-c-popover__header', className), id: id }, props),\n        React.createElement(HeadingLevel, { className: css(styles.popoverTitle, icon && styles.modifiers.icon) },\n            icon && React.createElement(PopoverHeaderIcon, null, icon),\n            alertSeverityVariant && alertSeverityScreenReaderText && (React.createElement(\"span\", { className: \"pf-u-screen-reader\" }, alertSeverityScreenReaderText)),\n            React.createElement(PopoverHeaderText, null, children)))) : (React.createElement(Title, Object.assign({ headingLevel: titleHeadingLevel, size: TitleSizes.md, id: id, className: className }, props), children));\n};\nPopoverHeader.displayName = 'PopoverHeader';\n//# sourceMappingURL=PopoverHeader.js.map"]},"metadata":{},"sourceType":"module"}