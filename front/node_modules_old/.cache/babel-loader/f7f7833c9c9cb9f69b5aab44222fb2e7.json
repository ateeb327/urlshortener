{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nexport var DrawerColorVariant;\n(function (DrawerColorVariant) {\n  DrawerColorVariant[\"default\"] = \"default\";\n  DrawerColorVariant[\"light200\"] = \"light-200\";\n})(DrawerColorVariant || (DrawerColorVariant = {}));\nexport const DrawerContext = React.createContext({\n  isExpanded: false,\n  isStatic: false,\n  onExpand: () => {},\n  position: 'right',\n  drawerRef: null,\n  drawerContentRef: null,\n  isInline: false\n});\nexport const Drawer = _a => {\n  var {\n      className = '',\n      children,\n      isExpanded = false,\n      isInline = false,\n      isStatic = false,\n      position = 'right',\n      onExpand = () => {}\n    } = _a,\n    props = __rest(_a, [\"className\", \"children\", \"isExpanded\", \"isInline\", \"isStatic\", \"position\", \"onExpand\"]);\n  const drawerRef = React.useRef();\n  const drawerContentRef = React.useRef();\n  return React.createElement(DrawerContext.Provider, {\n    value: {\n      isExpanded,\n      isStatic,\n      onExpand,\n      position,\n      drawerRef,\n      drawerContentRef,\n      isInline\n    }\n  }, React.createElement(\"div\", Object.assign({\n    className: css(styles.drawer, isExpanded && styles.modifiers.expanded, isInline && styles.modifiers.inline, isStatic && styles.modifiers.static, position === 'left' && styles.modifiers.panelLeft, position === 'bottom' && styles.modifiers.panelBottom, className),\n    ref: drawerRef\n  }, props), children));\n};\nDrawer.displayName = 'Drawer';","map":{"version":3,"sources":["../../../../src/components/Drawer/Drawer.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,OAAO,MAAM,MAAM,uDAAuD;AAC1E,SAAS,GAAG,QAAQ,0BAA0B;AAE9C,OAAA,IAAY,kBAGX;AAHD,CAAA,UAAY,kBAAkB,EAAA;EAC5B,kBAAA,CAAA,SAAA,CAAA,GAAA,SAAmB;EACnB,kBAAA,CAAA,UAAA,CAAA,GAAA,WAAsB;AACxB,CAAC,EAHW,kBAAkB,KAAlB,kBAAkB,GAAA,CAAA,CAAA,CAAA,CAAA;AAgC9B,OAAO,MAAM,aAAa,GAAG,KAAK,CAAC,aAAa,CAA8B;EAC5E,UAAU,EAAE,KAAK;EACjB,QAAQ,EAAE,KAAK;EACf,QAAQ,EAAE,CAAA,KAAK,CAAE,CAAC;EAClB,QAAQ,EAAE,OAAO;EACjB,SAAS,EAAE,IAAI;EACf,gBAAgB,EAAE,IAAI;EACtB,QAAQ,EAAE;CACX,CAAC;AAEF,OAAO,MAAM,MAAM,GAA0C,EAS/C,IAAI;MAT2C;MAC3D,SAAS,GAAG,EAAE;MACd,QAAQ;MACR,UAAU,GAAG,KAAK;MAClB,QAAQ,GAAG,KAAK;MAChB,QAAQ,GAAG,KAAK;MAChB,QAAQ,GAAG,OAAO;MAClB,QAAQ,GAAG,CAAA,KAAK,CAAE;IAAC,CAAA,GAAA,EAEP;IADT,KAAK,GAAA,MAAA,CAAA,EAAA,EARmD,CAAA,WAAA,EAAA,UAAA,EAAA,YAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,CAS5D,CADS;EAER,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAA,CAAkB;EAChD,MAAM,gBAAgB,GAAG,KAAK,CAAC,MAAM,CAAA,CAAkB;EAEvD,OACE,KAAA,CAAA,aAAA,CAAC,aAAa,CAAC,QAAQ,EAAA;IAAC,KAAK,EAAE;MAAE,UAAU;MAAE,QAAQ;MAAE,QAAQ;MAAE,QAAQ;MAAE,SAAS;MAAE,gBAAgB;MAAE;IAAQ;EAAE,CAAA,EAChH,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;IACE,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,MAAM,EACb,UAAU,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,EACvC,QAAQ,IAAI,MAAM,CAAC,SAAS,CAAC,MAAM,EACnC,QAAQ,IAAI,MAAM,CAAC,SAAS,CAAC,MAAM,EACnC,QAAQ,KAAK,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC,SAAS,EACjD,QAAQ,KAAK,QAAQ,IAAI,MAAM,CAAC,SAAS,CAAC,WAAW,EACrD,SAAS,CACV;IACD,GAAG,EAAE;EAAS,CAAA,EACV,KAAK,CAAA,EAER,QAAQ,CACL,CACiB;AAE7B,CAAC;AACD,MAAM,CAAC,WAAW,GAAG,QAAQ","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nexport var DrawerColorVariant;\n(function (DrawerColorVariant) {\n    DrawerColorVariant[\"default\"] = \"default\";\n    DrawerColorVariant[\"light200\"] = \"light-200\";\n})(DrawerColorVariant || (DrawerColorVariant = {}));\nexport const DrawerContext = React.createContext({\n    isExpanded: false,\n    isStatic: false,\n    onExpand: () => { },\n    position: 'right',\n    drawerRef: null,\n    drawerContentRef: null,\n    isInline: false\n});\nexport const Drawer = (_a) => {\n    var { className = '', children, isExpanded = false, isInline = false, isStatic = false, position = 'right', onExpand = () => { } } = _a, props = __rest(_a, [\"className\", \"children\", \"isExpanded\", \"isInline\", \"isStatic\", \"position\", \"onExpand\"]);\n    const drawerRef = React.useRef();\n    const drawerContentRef = React.useRef();\n    return (React.createElement(DrawerContext.Provider, { value: { isExpanded, isStatic, onExpand, position, drawerRef, drawerContentRef, isInline } },\n        React.createElement(\"div\", Object.assign({ className: css(styles.drawer, isExpanded && styles.modifiers.expanded, isInline && styles.modifiers.inline, isStatic && styles.modifiers.static, position === 'left' && styles.modifiers.panelLeft, position === 'bottom' && styles.modifiers.panelBottom, className), ref: drawerRef }, props), children)));\n};\nDrawer.displayName = 'Drawer';\n//# sourceMappingURL=Drawer.js.map"]},"metadata":{},"sourceType":"module"}