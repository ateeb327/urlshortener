{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport AngleDownIcon from '@patternfly/react-icons/dist/esm/icons/angle-down-icon';\nimport { Button } from '../Button';\nexport const ClipboardCopyToggle = _a => {\n  var {\n      onClick,\n      id,\n      textId,\n      contentId,\n      isExpanded = false\n    } = _a,\n    props = __rest(_a, [\"onClick\", \"id\", \"textId\", \"contentId\", \"isExpanded\"]);\n  return React.createElement(Button, Object.assign({\n    type: \"button\",\n    variant: \"control\",\n    onClick: onClick,\n    id: id,\n    \"aria-labelledby\": `${id} ${textId}`,\n    \"aria-controls\": `${id} ${contentId}`,\n    \"aria-expanded\": isExpanded\n  }, props), isExpanded ? React.createElement(AngleDownIcon, {\n    \"aria-hidden\": \"true\"\n  }) : React.createElement(AngleRightIcon, {\n    \"aria-hidden\": \"true\"\n  }));\n};\nClipboardCopyToggle.displayName = 'ClipboardCopyToggle';","map":{"version":3,"sources":["../../../../src/components/ClipboardCopy/ClipboardCopyToggle.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,OAAO,cAAc,MAAM,yDAAyD;AACpF,OAAO,aAAa,MAAM,wDAAwD;AAClF,SAAS,MAAM,QAAQ,WAAW;AAYlC,OAAO,MAAM,mBAAmB,GAAuD,EAO5D,IAAI;MAPwD;MACrF,OAAO;MACP,EAAE;MACF,MAAM;MACN,SAAS;MACT,UAAU,GAAG;IAAK,CAAA,GAAA,EAEO;IADtB,KAAK,GAAA,MAAA,CAAA,EAAA,EAN6E,CAAA,SAAA,EAAA,IAAA,EAAA,QAAA,EAAA,WAAA,EAAA,YAAA,CAOtF,CADS;EACsB,OAC9B,KAAA,CAAA,aAAA,CAAC,MAAM,EAAA,MAAA,CAAA,MAAA,CAAA;IACL,IAAI,EAAC,QAAQ;IACb,OAAO,EAAC,SAAS;IACjB,OAAO,EAAE,OAAO;IAChB,EAAE,EAAE,EAAE;IAAA,iBAAA,EACW,GAAG,EAAE,IAAI,MAAM,EAAE;IAAA,eAAA,EACnB,GAAG,EAAE,IAAI,SAAS,EAAE;IAAA,eAAA,EACpB;EAAU,CAAA,EACrB,KAAK,CAAA,EAER,UAAU,GAAG,KAAA,CAAA,aAAA,CAAC,aAAa,EAAA;IAAA,aAAA,EAAa;EAAM,CAAA,CAAG,GAAG,KAAA,CAAA,aAAA,CAAC,cAAc,EAAA;IAAA,aAAA,EAAa;EAAM,CAAA,CAAG,CACnF;CACV;AACD,mBAAmB,CAAC,WAAW,GAAG,qBAAqB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport AngleDownIcon from '@patternfly/react-icons/dist/esm/icons/angle-down-icon';\nimport { Button } from '../Button';\nexport const ClipboardCopyToggle = (_a) => {\n    var { onClick, id, textId, contentId, isExpanded = false } = _a, props = __rest(_a, [\"onClick\", \"id\", \"textId\", \"contentId\", \"isExpanded\"]);\n    return (React.createElement(Button, Object.assign({ type: \"button\", variant: \"control\", onClick: onClick, id: id, \"aria-labelledby\": `${id} ${textId}`, \"aria-controls\": `${id} ${contentId}`, \"aria-expanded\": isExpanded }, props), isExpanded ? React.createElement(AngleDownIcon, { \"aria-hidden\": \"true\" }) : React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" })));\n};\nClipboardCopyToggle.displayName = 'ClipboardCopyToggle';\n//# sourceMappingURL=ClipboardCopyToggle.js.map"]},"metadata":{},"sourceType":"module"}