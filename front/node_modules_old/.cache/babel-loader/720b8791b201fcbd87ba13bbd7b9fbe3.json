{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport globalBreakpointXl from '@patternfly/react-tokens/dist/esm/global_breakpoint_xl';\nimport { debounce, canUseDOM } from '../../helpers/util';\nimport { Drawer, DrawerContent, DrawerContentBody, DrawerPanelContent } from '../Drawer';\nimport { PageGroup } from './PageGroup';\nimport { getResizeObserver } from '../../helpers/resizeObserver';\nimport { formatBreakpointMods, getBreakpoint, getVerticalBreakpoint } from '../../helpers/util';\nimport { PageContextProvider } from './PageContext';\nexport var PageLayouts;\n(function (PageLayouts) {\n  PageLayouts[\"vertical\"] = \"vertical\";\n  PageLayouts[\"horizontal\"] = \"horizontal\";\n})(PageLayouts || (PageLayouts = {}));\nexport class Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mainRef = React.createRef();\n    this.pageRef = React.createRef();\n    this.observer = () => {};\n    this.getWindowWidth = () => {\n      if (canUseDOM) {\n        return this.pageRef.current ? this.pageRef.current.clientWidth : window.innerWidth;\n      } else {\n        return 1200;\n      }\n    };\n    this.isMobile = () =>\n    // eslint-disable-next-line radix\n    this.getWindowWidth() < Number.parseInt(globalBreakpointXl.value, 10);\n    this.resize = () => {\n      var _a;\n      const {\n        onPageResize\n      } = this.props;\n      const mobileView = this.isMobile();\n      if (onPageResize) {\n        onPageResize({\n          mobileView,\n          windowSize: this.getWindowWidth()\n        });\n      }\n      if (mobileView !== this.state.mobileView) {\n        this.setState({\n          mobileView\n        });\n      }\n      if ((_a = this.pageRef) === null || _a === void 0 ? void 0 : _a.current) {\n        const currentWidth = this.pageRef.current.clientWidth;\n        const currentHeight = this.pageRef.current.clientHeight;\n        if (this.state.width !== currentWidth) {\n          this.setState({\n            width: currentWidth\n          });\n        }\n        if (this.state.height !== currentHeight) {\n          this.setState({\n            height: currentHeight\n          });\n        }\n      }\n    };\n    this.handleResize = debounce(this.resize, 250);\n    this.handleMainClick = () => {\n      if (this.isMobile() && this.state.mobileIsNavOpen && this.mainRef.current) {\n        this.setState({\n          mobileIsNavOpen: false\n        });\n      }\n    };\n    this.onNavToggleMobile = () => {\n      this.setState(prevState => ({\n        mobileIsNavOpen: !prevState.mobileIsNavOpen\n      }));\n    };\n    this.onNavToggleDesktop = () => {\n      this.setState(prevState => ({\n        desktopIsNavOpen: !prevState.desktopIsNavOpen\n      }));\n    };\n    const {\n      isManagedSidebar,\n      defaultManagedSidebarIsOpen\n    } = props;\n    const managedSidebarOpen = !isManagedSidebar ? true : defaultManagedSidebarIsOpen;\n    this.state = {\n      desktopIsNavOpen: managedSidebarOpen,\n      mobileIsNavOpen: false,\n      mobileView: false,\n      width: null,\n      height: null\n    };\n  }\n  componentDidMount() {\n    const {\n      isManagedSidebar,\n      onPageResize\n    } = this.props;\n    if (isManagedSidebar || onPageResize) {\n      this.observer = getResizeObserver(this.pageRef.current, this.handleResize);\n      const currentRef = this.mainRef.current;\n      if (currentRef) {\n        currentRef.addEventListener('mousedown', this.handleMainClick);\n        currentRef.addEventListener('touchstart', this.handleMainClick);\n      }\n      // Initial check if should be shown\n      this.resize();\n    }\n  }\n  componentWillUnmount() {\n    const {\n      isManagedSidebar,\n      onPageResize\n    } = this.props;\n    if (isManagedSidebar || onPageResize) {\n      this.observer();\n      const currentRef = this.mainRef.current;\n      if (currentRef) {\n        currentRef.removeEventListener('mousedown', this.handleMainClick);\n        currentRef.removeEventListener('touchstart', this.handleMainClick);\n      }\n    }\n  }\n  render() {\n    const _a = this.props,\n      {\n        breadcrumb,\n        isBreadcrumbWidthLimited,\n        className,\n        children,\n        header,\n        sidebar,\n        notificationDrawer,\n        isNotificationDrawerExpanded,\n        onNotificationDrawerExpand,\n        isTertiaryNavWidthLimited,\n        skipToContent,\n        role,\n        mainContainerId,\n        isManagedSidebar,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        defaultManagedSidebarIsOpen,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onPageResize,\n        getBreakpoint,\n        getVerticalBreakpoint,\n        mainAriaLabel,\n        mainTabIndex,\n        tertiaryNav,\n        isTertiaryNavGrouped,\n        isBreadcrumbGrouped,\n        additionalGroupedContent,\n        groupProps,\n        breadcrumbProps\n      } = _a,\n      rest = __rest(_a, [\"breadcrumb\", \"isBreadcrumbWidthLimited\", \"className\", \"children\", \"header\", \"sidebar\", \"notificationDrawer\", \"isNotificationDrawerExpanded\", \"onNotificationDrawerExpand\", \"isTertiaryNavWidthLimited\", \"skipToContent\", \"role\", \"mainContainerId\", \"isManagedSidebar\", \"defaultManagedSidebarIsOpen\", \"onPageResize\", \"getBreakpoint\", \"getVerticalBreakpoint\", \"mainAriaLabel\", \"mainTabIndex\", \"tertiaryNav\", \"isTertiaryNavGrouped\", \"isBreadcrumbGrouped\", \"additionalGroupedContent\", \"groupProps\", \"breadcrumbProps\"]);\n    const {\n      mobileView,\n      mobileIsNavOpen,\n      desktopIsNavOpen,\n      width,\n      height\n    } = this.state;\n    const context = {\n      isManagedSidebar,\n      onNavToggle: mobileView ? this.onNavToggleMobile : this.onNavToggleDesktop,\n      isNavOpen: mobileView ? mobileIsNavOpen : desktopIsNavOpen,\n      width,\n      height,\n      getBreakpoint,\n      getVerticalBreakpoint\n    };\n    let nav = null;\n    if (tertiaryNav && isTertiaryNavWidthLimited) {\n      nav = React.createElement(\"div\", {\n        className: css(styles.pageMainNav, styles.modifiers.limitWidth)\n      }, React.createElement(\"div\", {\n        className: css(styles.pageMainBody)\n      }, tertiaryNav));\n    } else if (tertiaryNav) {\n      nav = React.createElement(\"div\", {\n        className: css(styles.pageMainNav)\n      }, tertiaryNav);\n    }\n    const crumb = breadcrumb ? React.createElement(\"section\", {\n      className: css(styles.pageMainBreadcrumb, isBreadcrumbWidthLimited && styles.modifiers.limitWidth, formatBreakpointMods(breadcrumbProps === null || breadcrumbProps === void 0 ? void 0 : breadcrumbProps.stickyOnBreakpoint, styles, 'sticky-', getVerticalBreakpoint(height), true))\n    }, isBreadcrumbWidthLimited ? React.createElement(\"div\", {\n      className: css(styles.pageMainBody)\n    }, breadcrumb) : breadcrumb) : null;\n    const isGrouped = isTertiaryNavGrouped || isBreadcrumbGrouped || additionalGroupedContent;\n    const group = isGrouped ? React.createElement(PageGroup, Object.assign({}, groupProps), isTertiaryNavGrouped && nav, isBreadcrumbGrouped && crumb, additionalGroupedContent) : null;\n    const main = React.createElement(\"main\", {\n      ref: this.mainRef,\n      role: role,\n      id: mainContainerId,\n      className: css(styles.pageMain),\n      tabIndex: mainTabIndex,\n      \"aria-label\": mainAriaLabel\n    }, group, !isTertiaryNavGrouped && nav, !isBreadcrumbGrouped && crumb, children);\n    const panelContent = React.createElement(DrawerPanelContent, null, notificationDrawer);\n    return React.createElement(PageContextProvider, {\n      value: context\n    }, React.createElement(\"div\", Object.assign({\n      ref: this.pageRef\n    }, rest, {\n      className: css(styles.page, width !== null && height !== null && 'pf-m-resize-observer', width !== null && `pf-m-breakpoint-${getBreakpoint(width)}`, height !== null && `pf-m-height-breakpoint-${getVerticalBreakpoint(height)}`, className)\n    }), skipToContent, header, sidebar, notificationDrawer && React.createElement(\"div\", {\n      className: css(styles.pageDrawer)\n    }, React.createElement(Drawer, {\n      isExpanded: isNotificationDrawerExpanded,\n      onExpand: onNotificationDrawerExpand\n    }, React.createElement(DrawerContent, {\n      panelContent: panelContent\n    }, React.createElement(DrawerContentBody, null, main)))), !notificationDrawer && main));\n  }\n}\nPage.displayName = 'Page';\nPage.defaultProps = {\n  isManagedSidebar: false,\n  isBreadcrumbWidthLimited: false,\n  defaultManagedSidebarIsOpen: true,\n  onPageResize: () => null,\n  mainTabIndex: -1,\n  isNotificationDrawerExpanded: false,\n  onNotificationDrawerExpand: () => null,\n  getBreakpoint,\n  getVerticalBreakpoint\n};","map":{"version":3,"sources":["../../../../src/components/Page/Page.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport globalBreakpointXl from '@patternfly/react-tokens/dist/esm/global_breakpoint_xl';\nimport { debounce, canUseDOM } from '../../helpers/util';\nimport { Drawer, DrawerContent, DrawerContentBody, DrawerPanelContent } from '../Drawer';\nimport { PageGroup } from './PageGroup';\nimport { getResizeObserver } from '../../helpers/resizeObserver';\nimport { formatBreakpointMods, getBreakpoint, getVerticalBreakpoint } from '../../helpers/util';\nimport { PageContextProvider } from './PageContext';\nexport var PageLayouts;\n(function (PageLayouts) {\n    PageLayouts[\"vertical\"] = \"vertical\";\n    PageLayouts[\"horizontal\"] = \"horizontal\";\n})(PageLayouts || (PageLayouts = {}));\nexport class Page extends React.Component {\n    constructor(props) {\n        super(props);\n        this.mainRef = React.createRef();\n        this.pageRef = React.createRef();\n        this.observer = () => { };\n        this.getWindowWidth = () => {\n            if (canUseDOM) {\n                return this.pageRef.current ? this.pageRef.current.clientWidth : window.innerWidth;\n            }\n            else {\n                return 1200;\n            }\n        };\n        this.isMobile = () => \n        // eslint-disable-next-line radix\n        this.getWindowWidth() < Number.parseInt(globalBreakpointXl.value, 10);\n        this.resize = () => {\n            var _a;\n            const { onPageResize } = this.props;\n            const mobileView = this.isMobile();\n            if (onPageResize) {\n                onPageResize({ mobileView, windowSize: this.getWindowWidth() });\n            }\n            if (mobileView !== this.state.mobileView) {\n                this.setState({ mobileView });\n            }\n            if ((_a = this.pageRef) === null || _a === void 0 ? void 0 : _a.current) {\n                const currentWidth = this.pageRef.current.clientWidth;\n                const currentHeight = this.pageRef.current.clientHeight;\n                if (this.state.width !== currentWidth) {\n                    this.setState({ width: currentWidth });\n                }\n                if (this.state.height !== currentHeight) {\n                    this.setState({ height: currentHeight });\n                }\n            }\n        };\n        this.handleResize = debounce(this.resize, 250);\n        this.handleMainClick = () => {\n            if (this.isMobile() && this.state.mobileIsNavOpen && this.mainRef.current) {\n                this.setState({ mobileIsNavOpen: false });\n            }\n        };\n        this.onNavToggleMobile = () => {\n            this.setState(prevState => ({\n                mobileIsNavOpen: !prevState.mobileIsNavOpen\n            }));\n        };\n        this.onNavToggleDesktop = () => {\n            this.setState(prevState => ({\n                desktopIsNavOpen: !prevState.desktopIsNavOpen\n            }));\n        };\n        const { isManagedSidebar, defaultManagedSidebarIsOpen } = props;\n        const managedSidebarOpen = !isManagedSidebar ? true : defaultManagedSidebarIsOpen;\n        this.state = {\n            desktopIsNavOpen: managedSidebarOpen,\n            mobileIsNavOpen: false,\n            mobileView: false,\n            width: null,\n            height: null\n        };\n    }\n    componentDidMount() {\n        const { isManagedSidebar, onPageResize } = this.props;\n        if (isManagedSidebar || onPageResize) {\n            this.observer = getResizeObserver(this.pageRef.current, this.handleResize);\n            const currentRef = this.mainRef.current;\n            if (currentRef) {\n                currentRef.addEventListener('mousedown', this.handleMainClick);\n                currentRef.addEventListener('touchstart', this.handleMainClick);\n            }\n            // Initial check if should be shown\n            this.resize();\n        }\n    }\n    componentWillUnmount() {\n        const { isManagedSidebar, onPageResize } = this.props;\n        if (isManagedSidebar || onPageResize) {\n            this.observer();\n            const currentRef = this.mainRef.current;\n            if (currentRef) {\n                currentRef.removeEventListener('mousedown', this.handleMainClick);\n                currentRef.removeEventListener('touchstart', this.handleMainClick);\n            }\n        }\n    }\n    render() {\n        const _a = this.props, { breadcrumb, isBreadcrumbWidthLimited, className, children, header, sidebar, notificationDrawer, isNotificationDrawerExpanded, onNotificationDrawerExpand, isTertiaryNavWidthLimited, skipToContent, role, mainContainerId, isManagedSidebar, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        defaultManagedSidebarIsOpen, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onPageResize, getBreakpoint, getVerticalBreakpoint, mainAriaLabel, mainTabIndex, tertiaryNav, isTertiaryNavGrouped, isBreadcrumbGrouped, additionalGroupedContent, groupProps, breadcrumbProps } = _a, rest = __rest(_a, [\"breadcrumb\", \"isBreadcrumbWidthLimited\", \"className\", \"children\", \"header\", \"sidebar\", \"notificationDrawer\", \"isNotificationDrawerExpanded\", \"onNotificationDrawerExpand\", \"isTertiaryNavWidthLimited\", \"skipToContent\", \"role\", \"mainContainerId\", \"isManagedSidebar\", \"defaultManagedSidebarIsOpen\", \"onPageResize\", \"getBreakpoint\", \"getVerticalBreakpoint\", \"mainAriaLabel\", \"mainTabIndex\", \"tertiaryNav\", \"isTertiaryNavGrouped\", \"isBreadcrumbGrouped\", \"additionalGroupedContent\", \"groupProps\", \"breadcrumbProps\"]);\n        const { mobileView, mobileIsNavOpen, desktopIsNavOpen, width, height } = this.state;\n        const context = {\n            isManagedSidebar,\n            onNavToggle: mobileView ? this.onNavToggleMobile : this.onNavToggleDesktop,\n            isNavOpen: mobileView ? mobileIsNavOpen : desktopIsNavOpen,\n            width,\n            height,\n            getBreakpoint,\n            getVerticalBreakpoint\n        };\n        let nav = null;\n        if (tertiaryNav && isTertiaryNavWidthLimited) {\n            nav = (React.createElement(\"div\", { className: css(styles.pageMainNav, styles.modifiers.limitWidth) },\n                React.createElement(\"div\", { className: css(styles.pageMainBody) }, tertiaryNav)));\n        }\n        else if (tertiaryNav) {\n            nav = React.createElement(\"div\", { className: css(styles.pageMainNav) }, tertiaryNav);\n        }\n        const crumb = breadcrumb ? (React.createElement(\"section\", { className: css(styles.pageMainBreadcrumb, isBreadcrumbWidthLimited && styles.modifiers.limitWidth, formatBreakpointMods(breadcrumbProps === null || breadcrumbProps === void 0 ? void 0 : breadcrumbProps.stickyOnBreakpoint, styles, 'sticky-', getVerticalBreakpoint(height), true)) }, isBreadcrumbWidthLimited ? React.createElement(\"div\", { className: css(styles.pageMainBody) }, breadcrumb) : breadcrumb)) : null;\n        const isGrouped = isTertiaryNavGrouped || isBreadcrumbGrouped || additionalGroupedContent;\n        const group = isGrouped ? (React.createElement(PageGroup, Object.assign({}, groupProps),\n            isTertiaryNavGrouped && nav,\n            isBreadcrumbGrouped && crumb,\n            additionalGroupedContent)) : null;\n        const main = (React.createElement(\"main\", { ref: this.mainRef, role: role, id: mainContainerId, className: css(styles.pageMain), tabIndex: mainTabIndex, \"aria-label\": mainAriaLabel },\n            group,\n            !isTertiaryNavGrouped && nav,\n            !isBreadcrumbGrouped && crumb,\n            children));\n        const panelContent = React.createElement(DrawerPanelContent, null, notificationDrawer);\n        return (React.createElement(PageContextProvider, { value: context },\n            React.createElement(\"div\", Object.assign({ ref: this.pageRef }, rest, { className: css(styles.page, width !== null && height !== null && 'pf-m-resize-observer', width !== null && `pf-m-breakpoint-${getBreakpoint(width)}`, height !== null && `pf-m-height-breakpoint-${getVerticalBreakpoint(height)}`, className) }),\n                skipToContent,\n                header,\n                sidebar,\n                notificationDrawer && (React.createElement(\"div\", { className: css(styles.pageDrawer) },\n                    React.createElement(Drawer, { isExpanded: isNotificationDrawerExpanded, onExpand: onNotificationDrawerExpand },\n                        React.createElement(DrawerContent, { panelContent: panelContent },\n                            React.createElement(DrawerContentBody, null, main))))),\n                !notificationDrawer && main)));\n    }\n}\nPage.displayName = 'Page';\nPage.defaultProps = {\n    isManagedSidebar: false,\n    isBreadcrumbWidthLimited: false,\n    defaultManagedSidebarIsOpen: true,\n    onPageResize: () => null,\n    mainTabIndex: -1,\n    isNotificationDrawerExpanded: false,\n    onNotificationDrawerExpand: () => null,\n    getBreakpoint,\n    getVerticalBreakpoint\n};\n//# sourceMappingURL=Page.js.map"]},"metadata":{},"sourceType":"module"}