{"ast":null,"code":"import { __rest } from \"tslib\";\n/* eslint-disable no-console */\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\nimport { Button, ButtonVariant } from '../../components/Button';\nimport { PageContextConsumer } from './PageContext';\nexport const PageHeader = _a => {\n  var {\n      className = '',\n      logo = null,\n      logoProps = null,\n      logoComponent = 'a',\n      headerTools = null,\n      topNav = null,\n      isNavOpen = true,\n      isManagedSidebar: deprecatedIsManagedSidebar = undefined,\n      role = undefined,\n      showNavToggle = false,\n      navToggleId = 'nav-toggle',\n      onNavToggle = () => undefined,\n      'aria-label': ariaLabel = 'Global navigation',\n      'aria-controls': ariaControls = null\n    } = _a,\n    props = __rest(_a, [\"className\", \"logo\", \"logoProps\", \"logoComponent\", \"headerTools\", \"topNav\", \"isNavOpen\", \"isManagedSidebar\", \"role\", \"showNavToggle\", \"navToggleId\", \"onNavToggle\", 'aria-label', 'aria-controls']);\n  const LogoComponent = logoComponent;\n  if ([false, true].includes(deprecatedIsManagedSidebar)) {\n    console.warn('isManagedSidebar is deprecated in the PageHeader component. To make the sidebar toggle uncontrolled, pass this prop in the Page component');\n  }\n  return React.createElement(PageContextConsumer, null, ({\n    isManagedSidebar,\n    onNavToggle: managedOnNavToggle,\n    isNavOpen: managedIsNavOpen\n  }) => {\n    const navToggle = isManagedSidebar ? managedOnNavToggle : onNavToggle;\n    const navOpen = isManagedSidebar ? managedIsNavOpen : isNavOpen;\n    return React.createElement(\"header\", Object.assign({\n      role: role,\n      className: css(styles.pageHeader, className)\n    }, props), (showNavToggle || logo) && React.createElement(\"div\", {\n      className: css(styles.pageHeaderBrand)\n    }, showNavToggle && React.createElement(\"div\", {\n      className: css(styles.pageHeaderBrandToggle)\n    }, React.createElement(Button, {\n      id: navToggleId,\n      onClick: navToggle,\n      \"aria-label\": ariaLabel,\n      \"aria-controls\": ariaControls,\n      \"aria-expanded\": navOpen ? 'true' : 'false',\n      variant: ButtonVariant.plain\n    }, React.createElement(BarsIcon, null))), logo && React.createElement(LogoComponent, Object.assign({\n      className: css(styles.pageHeaderBrandLink)\n    }, logoProps), logo)), topNav && React.createElement(\"div\", {\n      className: css(styles.pageHeaderNav)\n    }, topNav), headerTools);\n  });\n};\nPageHeader.displayName = 'PageHeader';","map":{"version":3,"sources":["../../../../src/components/Page/PageHeader.tsx"],"names":[],"mappings":";AAAA;AACA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,OAAO,MAAM,MAAM,mDAAmD;AACtE,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,QAAQ,MAAM,kDAAkD;AACvE,SAAS,MAAM,EAAE,aAAa,QAAQ,yBAAyB;AAC/D,SAAS,mBAAmB,QAA0B,eAAe;AA+BrE,OAAO,MAAM,UAAU,GAA8C,EAgBnD,IAAI;MAhB+C;MACnE,SAAS,GAAG,EAAE;MACd,IAAI,GAAG,IAAuB;MAC9B,SAAS,GAAG,IAAc;MAC1B,aAAa,GAAG,GAAG;MACnB,WAAW,GAAG,IAAuB;MACrC,MAAM,GAAG,IAAuB;MAChC,SAAS,GAAG,IAAI;MAChB,gBAAgB,EAAE,0BAA0B,GAAG,SAAS;MACxD,IAAI,GAAG,SAAmB;MAC1B,aAAa,GAAG,KAAK;MACrB,WAAW,GAAG,YAAY;MAC1B,WAAW,GAAG,CAAA,KAAM,SAAgB;MACpC,YAAY,EAAE,SAAS,GAAG,mBAAmB;MAC7C,eAAe,EAAE,YAAY,GAAG;IAAI,CAAA,GAAA,EAEpB;IADb,KAAK,GAAA,MAAA,CAAA,EAAA,EAf2D,CAAA,WAAA,EAAA,MAAA,EAAA,WAAA,EAAA,eAAA,EAAA,aAAA,EAAA,QAAA,EAAA,WAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,eAAA,EAAA,aAAA,EAAA,aAAA,EAAA,YAAA,EAAA,eAAA,CAgBpE,CADS;EAER,MAAM,aAAa,GAAG,aAAoB;EAC1C,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,0BAA0B,CAAC,EAAE;IACtD,OAAO,CAAC,IAAI,CACV,2IAA2I,CAC5I;EACF;EACD,OACE,KAAA,CAAA,aAAA,CAAC,mBAAmB,EAAA,IAAA,EACjB,CAAC;IAAE,gBAAgB;IAAE,WAAW,EAAE,kBAAkB;IAAE,SAAS,EAAE;EAAgB,CAAoB,KAAI;IACxG,MAAM,SAAS,GAAG,gBAAgB,GAAG,kBAAkB,GAAG,WAAW;IACrE,MAAM,OAAO,GAAG,gBAAgB,GAAG,gBAAgB,GAAG,SAAS;IAE/D,OACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA;MAAQ,IAAI,EAAE,IAAI;MAAE,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,SAAS;IAAC,CAAA,EAAM,KAAK,CAAA,EACxE,CAAC,aAAa,IAAI,IAAI,KACrB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,eAAe;IAAC,CAAA,EACxC,aAAa,IACZ,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,qBAAqB;IAAC,CAAA,EAC/C,KAAA,CAAA,aAAA,CAAC,MAAM,EAAA;MACL,EAAE,EAAE,WAAW;MACf,OAAO,EAAE,SAAS;MAAA,YAAA,EACN,SAAS;MAAA,eAAA,EACN,YAAY;MAAA,eAAA,EACZ,OAAO,GAAG,MAAM,GAAG,OAAO;MACzC,OAAO,EAAE,aAAa,CAAC;IAAK,CAAA,EAE5B,KAAA,CAAA,aAAA,CAAC,QAAQ,EAAA,IAAA,CAAG,CACL,CAEZ,EACA,IAAI,IACH,KAAA,CAAA,aAAA,CAAC,aAAa,EAAA,MAAA,CAAA,MAAA,CAAA;MAAC,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,mBAAmB;IAAC,CAAA,EAAM,SAAS,CAAA,EACrE,IAAI,CAER,CAEJ,EACA,MAAM,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,aAAa;IAAC,CAAA,EAAG,MAAM,CAAO,EACnE,WAAW,CACL;EAEb,CAAC,CACmB;AAE1B,CAAC;AACD,UAAU,CAAC,WAAW,GAAG,YAAY","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\n/* eslint-disable no-console */\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\nimport { Button, ButtonVariant } from '../../components/Button';\nimport { PageContextConsumer } from './PageContext';\nexport const PageHeader = (_a) => {\n    var { className = '', logo = null, logoProps = null, logoComponent = 'a', headerTools = null, topNav = null, isNavOpen = true, isManagedSidebar: deprecatedIsManagedSidebar = undefined, role = undefined, showNavToggle = false, navToggleId = 'nav-toggle', onNavToggle = () => undefined, 'aria-label': ariaLabel = 'Global navigation', 'aria-controls': ariaControls = null } = _a, props = __rest(_a, [\"className\", \"logo\", \"logoProps\", \"logoComponent\", \"headerTools\", \"topNav\", \"isNavOpen\", \"isManagedSidebar\", \"role\", \"showNavToggle\", \"navToggleId\", \"onNavToggle\", 'aria-label', 'aria-controls']);\n    const LogoComponent = logoComponent;\n    if ([false, true].includes(deprecatedIsManagedSidebar)) {\n        console.warn('isManagedSidebar is deprecated in the PageHeader component. To make the sidebar toggle uncontrolled, pass this prop in the Page component');\n    }\n    return (React.createElement(PageContextConsumer, null, ({ isManagedSidebar, onNavToggle: managedOnNavToggle, isNavOpen: managedIsNavOpen }) => {\n        const navToggle = isManagedSidebar ? managedOnNavToggle : onNavToggle;\n        const navOpen = isManagedSidebar ? managedIsNavOpen : isNavOpen;\n        return (React.createElement(\"header\", Object.assign({ role: role, className: css(styles.pageHeader, className) }, props),\n            (showNavToggle || logo) && (React.createElement(\"div\", { className: css(styles.pageHeaderBrand) },\n                showNavToggle && (React.createElement(\"div\", { className: css(styles.pageHeaderBrandToggle) },\n                    React.createElement(Button, { id: navToggleId, onClick: navToggle, \"aria-label\": ariaLabel, \"aria-controls\": ariaControls, \"aria-expanded\": navOpen ? 'true' : 'false', variant: ButtonVariant.plain },\n                        React.createElement(BarsIcon, null)))),\n                logo && (React.createElement(LogoComponent, Object.assign({ className: css(styles.pageHeaderBrandLink) }, logoProps), logo)))),\n            topNav && React.createElement(\"div\", { className: css(styles.pageHeaderNav) }, topNav),\n            headerTools));\n    }));\n};\nPageHeader.displayName = 'PageHeader';\n//# sourceMappingURL=PageHeader.js.map"]},"metadata":{},"sourceType":"module"}