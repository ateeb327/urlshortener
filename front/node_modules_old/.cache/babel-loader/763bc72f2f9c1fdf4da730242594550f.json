{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nimport { useOUIAProps } from '../../helpers';\nexport const CardContext = React.createContext({\n  cardId: '',\n  registerTitleId: () => {},\n  isExpanded: false\n});\nexport const Card = _a => {\n  var {\n      children = null,\n      id = '',\n      className = '',\n      component = 'article',\n      isHoverable = false,\n      isCompact = false,\n      isSelectable = false,\n      isSelectableRaised = false,\n      isSelected = false,\n      isDisabledRaised = false,\n      isFlat = false,\n      isExpanded = false,\n      isRounded = false,\n      isLarge = false,\n      isFullHeight = false,\n      isPlain = false,\n      ouiaId,\n      ouiaSafe = true,\n      hasSelectableInput = false,\n      selectableInputAriaLabel,\n      onSelectableInputChange = () => {}\n    } = _a,\n    props = __rest(_a, [\"children\", \"id\", \"className\", \"component\", \"isHoverable\", \"isCompact\", \"isSelectable\", \"isSelectableRaised\", \"isSelected\", \"isDisabledRaised\", \"isFlat\", \"isExpanded\", \"isRounded\", \"isLarge\", \"isFullHeight\", \"isPlain\", \"ouiaId\", \"ouiaSafe\", \"hasSelectableInput\", \"selectableInputAriaLabel\", \"onSelectableInputChange\"]);\n  const Component = component;\n  const ouiaProps = useOUIAProps(Card.displayName, ouiaId, ouiaSafe);\n  const [titleId, setTitleId] = React.useState('');\n  const [ariaProps, setAriaProps] = React.useState();\n  if (isCompact && isLarge) {\n    // eslint-disable-next-line no-console\n    console.warn('Card: Cannot use isCompact with isLarge. Defaulting to isCompact');\n    isLarge = false;\n  }\n  const getSelectableModifiers = () => {\n    if (isDisabledRaised) {\n      return css(styles.modifiers.nonSelectableRaised);\n    }\n    if (isSelectableRaised) {\n      return css(styles.modifiers.selectableRaised, isSelected && styles.modifiers.selectedRaised);\n    }\n    if (isSelectable || isHoverable) {\n      return css(styles.modifiers.selectable, isSelected && styles.modifiers.selected);\n    }\n    return '';\n  };\n  const containsCardTitleChildRef = React.useRef(false);\n  const registerTitleId = id => {\n    setTitleId(id);\n    containsCardTitleChildRef.current = !!id;\n  };\n  React.useEffect(() => {\n    if (selectableInputAriaLabel) {\n      setAriaProps({\n        'aria-label': selectableInputAriaLabel\n      });\n    } else if (titleId) {\n      setAriaProps({\n        'aria-labelledby': titleId\n      });\n    } else if (hasSelectableInput && !containsCardTitleChildRef.current) {\n      setAriaProps({});\n      // eslint-disable-next-line no-console\n      console.warn('If no CardTitle component is passed as a child of Card the selectableInputAriaLabel prop must be passed');\n    }\n  }, [hasSelectableInput, selectableInputAriaLabel, titleId]);\n  return React.createElement(CardContext.Provider, {\n    value: {\n      cardId: id,\n      registerTitleId,\n      isExpanded\n    }\n  }, hasSelectableInput && React.createElement(\"input\", Object.assign({\n    className: \"pf-screen-reader\",\n    id: `${id}-input`\n  }, ariaProps, {\n    type: \"checkbox\",\n    checked: isSelected,\n    onChange: event => onSelectableInputChange(id, event),\n    disabled: isDisabledRaised,\n    tabIndex: -1\n  })), React.createElement(Component, Object.assign({\n    id: id,\n    className: css(styles.card, isCompact && styles.modifiers.compact, isExpanded && styles.modifiers.expanded, isFlat && styles.modifiers.flat, isRounded && styles.modifiers.rounded, isLarge && styles.modifiers.displayLg, isFullHeight && styles.modifiers.fullHeight, isPlain && styles.modifiers.plain, getSelectableModifiers(), className),\n    tabIndex: isSelectable || isSelectableRaised ? '0' : undefined\n  }, props, ouiaProps), children));\n};\nCard.displayName = 'Card';","map":{"version":3,"sources":["../../../../src/components/Card/Card.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nimport { useOUIAProps } from '../../helpers';\nexport const CardContext = React.createContext({\n    cardId: '',\n    registerTitleId: () => { },\n    isExpanded: false\n});\nexport const Card = (_a) => {\n    var { children = null, id = '', className = '', component = 'article', isHoverable = false, isCompact = false, isSelectable = false, isSelectableRaised = false, isSelected = false, isDisabledRaised = false, isFlat = false, isExpanded = false, isRounded = false, isLarge = false, isFullHeight = false, isPlain = false, ouiaId, ouiaSafe = true, hasSelectableInput = false, selectableInputAriaLabel, onSelectableInputChange = () => { } } = _a, props = __rest(_a, [\"children\", \"id\", \"className\", \"component\", \"isHoverable\", \"isCompact\", \"isSelectable\", \"isSelectableRaised\", \"isSelected\", \"isDisabledRaised\", \"isFlat\", \"isExpanded\", \"isRounded\", \"isLarge\", \"isFullHeight\", \"isPlain\", \"ouiaId\", \"ouiaSafe\", \"hasSelectableInput\", \"selectableInputAriaLabel\", \"onSelectableInputChange\"]);\n    const Component = component;\n    const ouiaProps = useOUIAProps(Card.displayName, ouiaId, ouiaSafe);\n    const [titleId, setTitleId] = React.useState('');\n    const [ariaProps, setAriaProps] = React.useState();\n    if (isCompact && isLarge) {\n        // eslint-disable-next-line no-console\n        console.warn('Card: Cannot use isCompact with isLarge. Defaulting to isCompact');\n        isLarge = false;\n    }\n    const getSelectableModifiers = () => {\n        if (isDisabledRaised) {\n            return css(styles.modifiers.nonSelectableRaised);\n        }\n        if (isSelectableRaised) {\n            return css(styles.modifiers.selectableRaised, isSelected && styles.modifiers.selectedRaised);\n        }\n        if (isSelectable || isHoverable) {\n            return css(styles.modifiers.selectable, isSelected && styles.modifiers.selected);\n        }\n        return '';\n    };\n    const containsCardTitleChildRef = React.useRef(false);\n    const registerTitleId = (id) => {\n        setTitleId(id);\n        containsCardTitleChildRef.current = !!id;\n    };\n    React.useEffect(() => {\n        if (selectableInputAriaLabel) {\n            setAriaProps({ 'aria-label': selectableInputAriaLabel });\n        }\n        else if (titleId) {\n            setAriaProps({ 'aria-labelledby': titleId });\n        }\n        else if (hasSelectableInput && !containsCardTitleChildRef.current) {\n            setAriaProps({});\n            // eslint-disable-next-line no-console\n            console.warn('If no CardTitle component is passed as a child of Card the selectableInputAriaLabel prop must be passed');\n        }\n    }, [hasSelectableInput, selectableInputAriaLabel, titleId]);\n    return (React.createElement(CardContext.Provider, { value: {\n            cardId: id,\n            registerTitleId,\n            isExpanded\n        } },\n        hasSelectableInput && (React.createElement(\"input\", Object.assign({ className: \"pf-screen-reader\", id: `${id}-input` }, ariaProps, { type: \"checkbox\", checked: isSelected, onChange: event => onSelectableInputChange(id, event), disabled: isDisabledRaised, tabIndex: -1 }))),\n        React.createElement(Component, Object.assign({ id: id, className: css(styles.card, isCompact && styles.modifiers.compact, isExpanded && styles.modifiers.expanded, isFlat && styles.modifiers.flat, isRounded && styles.modifiers.rounded, isLarge && styles.modifiers.displayLg, isFullHeight && styles.modifiers.fullHeight, isPlain && styles.modifiers.plain, getSelectableModifiers(), className), tabIndex: isSelectable || isSelectableRaised ? '0' : undefined }, props, ouiaProps), children)));\n};\nCard.displayName = 'Card';\n//# sourceMappingURL=Card.js.map"]},"metadata":{},"sourceType":"module"}