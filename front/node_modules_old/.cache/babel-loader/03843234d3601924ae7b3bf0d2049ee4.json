{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Accordion/accordion';\nimport { AccordionContext } from './AccordionContext';\nimport { AccordionExpandedContentBody } from './AccordionExpandedContentBody';\nexport const AccordionContent = _a => {\n  var {\n      className = '',\n      children = null,\n      id = '',\n      isHidden = false,\n      isFixed = false,\n      isCustomContent = false,\n      'aria-label': ariaLabel = '',\n      'aria-labelledby': ariaLabelledby,\n      component\n    } = _a,\n    props = __rest(_a, [\"className\", \"children\", \"id\", \"isHidden\", \"isFixed\", \"isCustomContent\", 'aria-label', 'aria-labelledby', \"component\"]);\n  const [hasScrollbar, setHasScrollbar] = React.useState(false);\n  const containerRef = React.useRef(null);\n  React.useEffect(() => {\n    if ((containerRef === null || containerRef === void 0 ? void 0 : containerRef.current) && isFixed && !isHidden) {\n      const {\n        offsetHeight,\n        scrollHeight\n      } = containerRef.current;\n      setHasScrollbar(offsetHeight < scrollHeight);\n    } else if (!isFixed) {\n      setHasScrollbar(false);\n    }\n  }, [containerRef, isFixed, isHidden]);\n  return React.createElement(AccordionContext.Consumer, null, ({\n    ContentContainer\n  }) => {\n    const Container = component || ContentContainer;\n    return React.createElement(Container, Object.assign({\n      ref: containerRef,\n      id: id,\n      className: css(styles.accordionExpandedContent, isFixed && styles.modifiers.fixed, !isHidden && styles.modifiers.expanded, className),\n      hidden: isHidden\n    }, ariaLabel && {\n      'aria-label': ariaLabel\n    }, ariaLabelledby && {\n      'aria-labelledby': ariaLabelledby\n    }, hasScrollbar && {\n      tabIndex: 0\n    }, hasScrollbar && Container === 'div' && {\n      role: 'region'\n    }, props), isCustomContent ? children : React.createElement(AccordionExpandedContentBody, null, children));\n  });\n};\nAccordionContent.displayName = 'AccordionContent';","map":{"version":3,"sources":["../../../../src/components/Accordion/AccordionContent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,MAAM,MAAM,6DAA6D;AAChF,SAAS,gBAAgB,QAAQ,oBAAoB;AACrD,SAAS,4BAA4B,QAAQ,gCAAgC;AAuB7E,OAAO,MAAM,gBAAgB,GAAoD,EAWzD,IAAI;MAXqD;MAC/E,SAAS,GAAG,EAAE;MACd,QAAQ,GAAG,IAAI;MACf,EAAE,GAAG,EAAE;MACP,QAAQ,GAAG,KAAK;MAChB,OAAO,GAAG,KAAK;MACf,eAAe,GAAG,KAAK;MACvB,YAAY,EAAE,SAAS,GAAG,EAAE;MAC5B,iBAAiB,EAAE,cAAc;MACjC;IAAS,CAAA,GAAA,EAEa;IADnB,KAAK,GAAA,MAAA,CAAA,EAAA,EAVuE,CAAA,WAAA,EAAA,UAAA,EAAA,IAAA,EAAA,UAAA,EAAA,SAAA,EAAA,iBAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAWhF,CADS;EAER,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;EAEvC,KAAK,CAAC,SAAS,CAAC,MAAK;IACnB,IAAI,CAAA,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZ,YAAY,CAAE,OAAO,KAAI,OAAO,IAAI,CAAC,QAAQ,EAAE;MACjD,MAAM;QAAE,YAAY;QAAE;MAAY,CAAE,GAAG,YAAY,CAAC,OAAO;MAE3D,eAAe,CAAC,YAAY,GAAG,YAAY,CAAC;KAC7C,MAAM,IAAI,CAAC,OAAO,EAAE;MACnB,eAAe,CAAC,KAAK,CAAC;IACvB;EACH,CAAC,EAAE,CAAC,YAAY,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;EAErC,OACE,KAAA,CAAA,aAAA,CAAC,gBAAgB,CAAC,QAAQ,EAAA,IAAA,EACvB,CAAC;IAAE;EAAgB,CAAE,KAAI;IACxB,MAAM,SAAS,GAAG,SAAS,IAAI,gBAAgB;IAC/C,OACE,KAAA,CAAA,aAAA,CAAC,SAAS,EAAA,MAAA,CAAA,MAAA,CAAA;MACR,GAAG,EAAE,YAAY;MACjB,EAAE,EAAE,EAAE;MACN,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,wBAAwB,EAC/B,OAAO,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,EACjC,CAAC,QAAQ,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,EACtC,SAAS,CACV;MACD,MAAM,EAAE;IAAQ,CAAA,EACX,SAAS,IAAI;MAAE,YAAY,EAAE;IAAS,CAAE,EACxC,cAAc,IAAI;MAAE,iBAAiB,EAAE;IAAc,CAAE,EACvD,YAAY,IAAI;MAAE,QAAQ,EAAE;IAAC,CAAE,EAC/B,YAAY,IAAI,SAAS,KAAK,KAAK,IAAI;MAAE,IAAI,EAAE;IAAQ,CAAE,EAC1D,KAAK,CAAA,EAER,eAAe,GAAG,QAAQ,GAAG,KAAA,CAAA,aAAA,CAAC,4BAA4B,EAAA,IAAA,EAAE,QAAQ,CAAgC,CAC3F;EAEhB,CAAC,CACyB;AAEhC,CAAC;AACD,gBAAgB,CAAC,WAAW,GAAG,kBAAkB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Accordion/accordion';\nimport { AccordionContext } from './AccordionContext';\nimport { AccordionExpandedContentBody } from './AccordionExpandedContentBody';\nexport const AccordionContent = (_a) => {\n    var { className = '', children = null, id = '', isHidden = false, isFixed = false, isCustomContent = false, 'aria-label': ariaLabel = '', 'aria-labelledby': ariaLabelledby, component } = _a, props = __rest(_a, [\"className\", \"children\", \"id\", \"isHidden\", \"isFixed\", \"isCustomContent\", 'aria-label', 'aria-labelledby', \"component\"]);\n    const [hasScrollbar, setHasScrollbar] = React.useState(false);\n    const containerRef = React.useRef(null);\n    React.useEffect(() => {\n        if ((containerRef === null || containerRef === void 0 ? void 0 : containerRef.current) && isFixed && !isHidden) {\n            const { offsetHeight, scrollHeight } = containerRef.current;\n            setHasScrollbar(offsetHeight < scrollHeight);\n        }\n        else if (!isFixed) {\n            setHasScrollbar(false);\n        }\n    }, [containerRef, isFixed, isHidden]);\n    return (React.createElement(AccordionContext.Consumer, null, ({ ContentContainer }) => {\n        const Container = component || ContentContainer;\n        return (React.createElement(Container, Object.assign({ ref: containerRef, id: id, className: css(styles.accordionExpandedContent, isFixed && styles.modifiers.fixed, !isHidden && styles.modifiers.expanded, className), hidden: isHidden }, (ariaLabel && { 'aria-label': ariaLabel }), (ariaLabelledby && { 'aria-labelledby': ariaLabelledby }), (hasScrollbar && { tabIndex: 0 }), (hasScrollbar && Container === 'div' && { role: 'region' }), props), isCustomContent ? children : React.createElement(AccordionExpandedContentBody, null, children)));\n    }));\n};\nAccordionContent.displayName = 'AccordionContent';\n//# sourceMappingURL=AccordionContent.js.map"]},"metadata":{},"sourceType":"module"}