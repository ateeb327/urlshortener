{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Backdrop/backdrop';\nimport { canUseDOM } from '../../helpers';\nimport { KeyTypes } from '../../helpers/constants';\nimport { AboutModalContainer } from './AboutModalContainer';\nexport class AboutModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.id = AboutModal.currentId++;\n    this.ariaLabelledBy = `pf-about-modal-title-${this.id}`;\n    this.ariaDescribedBy = `pf-about-modal-content-${this.id}`;\n    this.handleEscKeyClick = event => {\n      if (event.key === KeyTypes.Escape && this.props.isOpen) {\n        this.props.onClose();\n      }\n    };\n    this.toggleSiblingsFromScreenReaders = hide => {\n      const {\n        appendTo\n      } = this.props;\n      const target = this.getElement(appendTo);\n      const bodyChildren = target.children;\n      for (const child of Array.from(bodyChildren)) {\n        if (child !== this.state.container) {\n          hide ? child.setAttribute('aria-hidden', '' + hide) : child.removeAttribute('aria-hidden');\n        }\n      }\n    };\n    this.getElement = appendTo => {\n      if (typeof appendTo === 'function') {\n        return appendTo();\n      }\n      return appendTo || document.body;\n    };\n    this.state = {\n      container: undefined\n    };\n    if (props.brandImageSrc && !props.brandImageAlt) {\n      // eslint-disable-next-line no-console\n      console.error('AboutModal:', 'brandImageAlt is required when a brandImageSrc is specified');\n    }\n  }\n  componentDidMount() {\n    const container = document.createElement('div');\n    const target = this.getElement(this.props.appendTo);\n    this.setState({\n      container\n    });\n    target.appendChild(container);\n    target.addEventListener('keydown', this.handleEscKeyClick, false);\n    if (this.props.isOpen) {\n      target.classList.add(css(styles.backdropOpen));\n    } else {\n      target.classList.remove(css(styles.backdropOpen));\n    }\n  }\n  componentDidUpdate() {\n    const target = this.getElement(this.props.appendTo);\n    if (this.props.isOpen) {\n      target.classList.add(css(styles.backdropOpen));\n      this.toggleSiblingsFromScreenReaders(true);\n    } else {\n      target.classList.remove(css(styles.backdropOpen));\n      this.toggleSiblingsFromScreenReaders(false);\n    }\n  }\n  componentWillUnmount() {\n    const target = this.getElement(this.props.appendTo);\n    if (this.state.container) {\n      target.removeChild(this.state.container);\n    }\n    target.removeEventListener('keydown', this.handleEscKeyClick, false);\n    target.classList.remove(css(styles.backdropOpen));\n  }\n  render() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const _a = this.props,\n      {\n        appendTo\n      } = _a,\n      props = __rest(_a, [\"appendTo\"]);\n    const {\n      container\n    } = this.state;\n    if (!canUseDOM || !container) {\n      return null;\n    }\n    return ReactDOM.createPortal(React.createElement(AboutModalContainer, Object.assign({\n      aboutModalBoxHeaderId: this.ariaLabelledBy,\n      aboutModalBoxContentId: this.ariaDescribedBy\n    }, props)), container);\n  }\n}\nAboutModal.displayName = 'AboutModal';\nAboutModal.currentId = 0;\nAboutModal.defaultProps = {\n  className: '',\n  isOpen: false,\n  onClose: () => undefined,\n  productName: '',\n  trademark: '',\n  backgroundImageSrc: '',\n  noAboutModalBoxContentContainer: false,\n  appendTo: null\n};","map":{"version":3,"sources":["../../../../src/components/AboutModal/AboutModal.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Backdrop/backdrop';\nimport { canUseDOM } from '../../helpers';\nimport { KeyTypes } from '../../helpers/constants';\nimport { AboutModalContainer } from './AboutModalContainer';\nexport class AboutModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.id = AboutModal.currentId++;\n        this.ariaLabelledBy = `pf-about-modal-title-${this.id}`;\n        this.ariaDescribedBy = `pf-about-modal-content-${this.id}`;\n        this.handleEscKeyClick = (event) => {\n            if (event.key === KeyTypes.Escape && this.props.isOpen) {\n                this.props.onClose();\n            }\n        };\n        this.toggleSiblingsFromScreenReaders = (hide) => {\n            const { appendTo } = this.props;\n            const target = this.getElement(appendTo);\n            const bodyChildren = target.children;\n            for (const child of Array.from(bodyChildren)) {\n                if (child !== this.state.container) {\n                    hide ? child.setAttribute('aria-hidden', '' + hide) : child.removeAttribute('aria-hidden');\n                }\n            }\n        };\n        this.getElement = (appendTo) => {\n            if (typeof appendTo === 'function') {\n                return appendTo();\n            }\n            return appendTo || document.body;\n        };\n        this.state = {\n            container: undefined\n        };\n        if (props.brandImageSrc && !props.brandImageAlt) {\n            // eslint-disable-next-line no-console\n            console.error('AboutModal:', 'brandImageAlt is required when a brandImageSrc is specified');\n        }\n    }\n    componentDidMount() {\n        const container = document.createElement('div');\n        const target = this.getElement(this.props.appendTo);\n        this.setState({ container });\n        target.appendChild(container);\n        target.addEventListener('keydown', this.handleEscKeyClick, false);\n        if (this.props.isOpen) {\n            target.classList.add(css(styles.backdropOpen));\n        }\n        else {\n            target.classList.remove(css(styles.backdropOpen));\n        }\n    }\n    componentDidUpdate() {\n        const target = this.getElement(this.props.appendTo);\n        if (this.props.isOpen) {\n            target.classList.add(css(styles.backdropOpen));\n            this.toggleSiblingsFromScreenReaders(true);\n        }\n        else {\n            target.classList.remove(css(styles.backdropOpen));\n            this.toggleSiblingsFromScreenReaders(false);\n        }\n    }\n    componentWillUnmount() {\n        const target = this.getElement(this.props.appendTo);\n        if (this.state.container) {\n            target.removeChild(this.state.container);\n        }\n        target.removeEventListener('keydown', this.handleEscKeyClick, false);\n        target.classList.remove(css(styles.backdropOpen));\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _a = this.props, { appendTo } = _a, props = __rest(_a, [\"appendTo\"]);\n        const { container } = this.state;\n        if (!canUseDOM || !container) {\n            return null;\n        }\n        return ReactDOM.createPortal(React.createElement(AboutModalContainer, Object.assign({ aboutModalBoxHeaderId: this.ariaLabelledBy, aboutModalBoxContentId: this.ariaDescribedBy }, props)), container);\n    }\n}\nAboutModal.displayName = 'AboutModal';\nAboutModal.currentId = 0;\nAboutModal.defaultProps = {\n    className: '',\n    isOpen: false,\n    onClose: () => undefined,\n    productName: '',\n    trademark: '',\n    backgroundImageSrc: '',\n    noAboutModalBoxContentContainer: false,\n    appendTo: null\n};\n//# sourceMappingURL=AboutModal.js.map"]},"metadata":{},"sourceType":"module"}