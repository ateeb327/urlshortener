{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/DescriptionList/description-list';\nimport { css } from '@patternfly/react-styles';\nexport const DescriptionListTerm = _a => {\n  var {\n      children,\n      className,\n      icon\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"icon\"]);\n  return React.createElement(\"dt\", Object.assign({\n    className: css(styles.descriptionListTerm, className)\n  }, props), icon ? React.createElement(\"span\", {\n    className: css(styles.descriptionListTermIcon)\n  }, icon) : null, React.createElement(\"span\", {\n    className: css(styles.descriptionListText)\n  }, children));\n};\nDescriptionListTerm.displayName = 'DescriptionListTerm';","map":{"version":3,"sources":["../../../../src/components/DescriptionList/DescriptionListTerm.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,OAAO,MAAM,MAAM,0EAA0E;AAC7F,SAAS,GAAG,QAAQ,0BAA0B;AAW9C,OAAO,MAAM,mBAAmB,GAAuD,EAK5D,IAAI;MALwD;MACrF,QAAQ;MACR,SAAS;MACT;IAAI,CAAA,GAAA,EAEqB;IADtB,KAAK,GAAA,MAAA,CAAA,EAAA,EAJ6E,CAAA,UAAA,EAAA,WAAA,EAAA,MAAA,CAKtF,CADS;EACsB,OAC9B,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,MAAA,CAAA,MAAA,CAAA;IAAI,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,mBAAmB,EAAE,SAAS;EAAC,CAAA,EAAM,KAAK,CAAA,EACjE,IAAI,GAAG,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,uBAAuB;EAAC,CAAA,EAAG,IAAI,CAAQ,GAAG,IAAI,EAClF,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,mBAAmB;EAAC,CAAA,EAAG,QAAQ,CAAQ,CAChE;CACN;AACD,mBAAmB,CAAC,WAAW,GAAG,qBAAqB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/DescriptionList/description-list';\nimport { css } from '@patternfly/react-styles';\nexport const DescriptionListTerm = (_a) => {\n    var { children, className, icon } = _a, props = __rest(_a, [\"children\", \"className\", \"icon\"]);\n    return (React.createElement(\"dt\", Object.assign({ className: css(styles.descriptionListTerm, className) }, props),\n        icon ? React.createElement(\"span\", { className: css(styles.descriptionListTermIcon) }, icon) : null,\n        React.createElement(\"span\", { className: css(styles.descriptionListText) }, children)));\n};\nDescriptionListTerm.displayName = 'DescriptionListTerm';\n//# sourceMappingURL=DescriptionListTerm.js.map"]},"metadata":{},"sourceType":"module"}