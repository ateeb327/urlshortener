{"ast":null,"code":"import { top, bottom, left, right } from '../enums';\nimport detectOverflow from '../utils/detectOverflow';\n/**\n * @param overflow\n * @param rect\n * @param preventedOffsets\n */\nfunction getSideOffsets(overflow, rect, preventedOffsets = {\n  x: 0,\n  y: 0\n}) {\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n/**\n * @param overflow\n */\nfunction isAnySideFullyClipped(overflow) {\n  return [top, right, bottom, left].some(side => overflow[side] >= 0);\n}\n/**\n *\n */\nfunction hide({\n  state,\n  name\n}) {\n  const referenceRect = state.rects.reference;\n  const popperRect = state.rects.popper;\n  const preventedOffsets = state.modifiersData.preventOverflow;\n  const referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  const popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  const referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  const popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  const isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  const hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets,\n    popperEscapeOffsets,\n    isReferenceHidden,\n    hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign(Object.assign({}, state.attributes.popper), {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n}\nexport default {\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n};","map":{"version":3,"sources":["../../../../../../../src/helpers/Popper/thirdparty/popper-core/modifiers/hide.ts"],"names":[],"mappings":"AAEA,SAAS,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,QAAQ,UAAU;AACnD,OAAO,cAAc,MAAM,yBAAyB;AAEpD;;;;AAIG;AACH,SAAS,cAAc,CAAC,QAAoB,EAAE,IAAU,EAAE,gBAAA,GAA4B;EAAE,CAAC,EAAE,CAAC;EAAE,CAAC,EAAE;AAAC,CAAE,EAAA;EAClG,OAAO;IACL,GAAG,EAAE,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC,CAAC;IACpD,KAAK,EAAE,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC,CAAC;IACvD,MAAM,EAAE,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC,CAAC;IAC1D,IAAI,EAAE,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC;GACrD;AACH;AAEA;;AAEG;AACH,SAAS,qBAAqB,CAAC,QAAoB,EAAA;EACjD,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrE;AAEA;;AAEG;AACH,SAAS,IAAI,CAAC;EAAE,KAAK;EAAE;AAAI,CAAyB,EAAA;EAClD,MAAM,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS;EAC3C,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM;EACrC,MAAM,gBAAgB,GAAG,KAAK,CAAC,aAAa,CAAC,eAAe;EAE5D,MAAM,iBAAiB,GAAG,cAAc,CAAC,KAAK,EAAE;IAC9C,cAAc,EAAE;GACjB,CAAC;EACF,MAAM,iBAAiB,GAAG,cAAc,CAAC,KAAK,EAAE;IAC9C,WAAW,EAAE;GACd,CAAC;EAEF,MAAM,wBAAwB,GAAG,cAAc,CAAC,iBAAiB,EAAE,aAAa,CAAC;EACjF,MAAM,mBAAmB,GAAG,cAAc,CAAC,iBAAiB,EAAE,UAAU,EAAE,gBAAgB,CAAC;EAE3F,MAAM,iBAAiB,GAAG,qBAAqB,CAAC,wBAAwB,CAAC;EACzE,MAAM,gBAAgB,GAAG,qBAAqB,CAAC,mBAAmB,CAAC;EAEnE,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG;IAC1B,wBAAwB;IACxB,mBAAmB;IACnB,iBAAiB;IACjB;GACD;EAED,KAAK,CAAC,UAAU,CAAC,MAAM,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAClB,KAAK,CAAC,UAAU,CAAC,MAAM,CAAA,EAAA;IAC1B,8BAA8B,EAAE,iBAAiB;IACjD,qBAAqB,EAAE;EAAgB,CAAA,CACxC;AACH;AAIA,eAAe;EACb,IAAI,EAAE,MAAM;EACZ,OAAO,EAAE,IAAI;EACb,KAAK,EAAE,MAAM;EACb,gBAAgB,EAAE,CAAC,iBAAiB,CAAC;EACrC,EAAE,EAAE;CACW","sourceRoot":"","sourcesContent":["import { top, bottom, left, right } from '../enums';\nimport detectOverflow from '../utils/detectOverflow';\n/**\n * @param overflow\n * @param rect\n * @param preventedOffsets\n */\nfunction getSideOffsets(overflow, rect, preventedOffsets = { x: 0, y: 0 }) {\n    return {\n        top: overflow.top - rect.height - preventedOffsets.y,\n        right: overflow.right - rect.width + preventedOffsets.x,\n        bottom: overflow.bottom - rect.height + preventedOffsets.y,\n        left: overflow.left - rect.width - preventedOffsets.x\n    };\n}\n/**\n * @param overflow\n */\nfunction isAnySideFullyClipped(overflow) {\n    return [top, right, bottom, left].some(side => overflow[side] >= 0);\n}\n/**\n *\n */\nfunction hide({ state, name }) {\n    const referenceRect = state.rects.reference;\n    const popperRect = state.rects.popper;\n    const preventedOffsets = state.modifiersData.preventOverflow;\n    const referenceOverflow = detectOverflow(state, {\n        elementContext: 'reference'\n    });\n    const popperAltOverflow = detectOverflow(state, {\n        altBoundary: true\n    });\n    const referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n    const popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n    const isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n    const hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n    state.modifiersData[name] = {\n        referenceClippingOffsets,\n        popperEscapeOffsets,\n        isReferenceHidden,\n        hasPopperEscaped\n    };\n    state.attributes.popper = Object.assign(Object.assign({}, state.attributes.popper), { 'data-popper-reference-hidden': isReferenceHidden, 'data-popper-escaped': hasPopperEscaped });\n}\nexport default {\n    name: 'hide',\n    enabled: true,\n    phase: 'main',\n    requiresIfExists: ['preventOverflow'],\n    fn: hide\n};\n//# sourceMappingURL=hide.js.map"]},"metadata":{},"sourceType":"module"}