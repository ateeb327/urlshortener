{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nimport { MenuContext } from './MenuContext';\nimport { canUseDOM } from '../../helpers/util';\nimport { KeyboardHandler } from '../../helpers';\nclass MenuBase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.menuRef = React.createRef();\n    this.activeMenu = null;\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(Menu.displayName),\n      searchInputValue: '',\n      transitionMoveTarget: null,\n      flyoutRef: null,\n      disableHover: false,\n      currentDrilldownMenuId: this.props.id\n    };\n    this.handleDrilldownTransition = event => {\n      const current = this.menuRef.current;\n      if (!current || current !== event.target.closest('.pf-c-menu') && !Array.from(current.getElementsByClassName('pf-c-menu')).includes(event.target.closest('.pf-c-menu'))) {\n        return;\n      }\n      if (this.state.transitionMoveTarget) {\n        this.state.transitionMoveTarget.focus();\n        this.setState({\n          transitionMoveTarget: null\n        });\n      } else {\n        const nextMenu = current.querySelector('#' + this.props.activeMenu) || current || null;\n        const nextMenuChildren = Array.from(nextMenu.getElementsByTagName('UL')[0].children);\n        if (!this.state.currentDrilldownMenuId || nextMenu.id !== this.state.currentDrilldownMenuId) {\n          this.setState({\n            currentDrilldownMenuId: nextMenu.id\n          });\n        } else {\n          // if the drilldown transition ends on the same menu, do not focus the first item\n          return;\n        }\n        const nextTarget = nextMenuChildren.filter(el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider')))[0].firstChild;\n        nextTarget.focus();\n        nextTarget.tabIndex = 0;\n      }\n    };\n    this.handleExtraKeys = event => {\n      const isDrilldown = this.props.containsDrilldown;\n      const activeElement = document.activeElement;\n      if (event.target.closest('.pf-c-menu') !== this.activeMenu && !event.target.classList.contains('pf-c-breadcrumb__link')) {\n        this.activeMenu = event.target.closest('.pf-c-menu');\n        this.setState({\n          disableHover: true\n        });\n      }\n      if (event.target.tagName === 'INPUT') {\n        return;\n      }\n      const parentMenu = this.activeMenu;\n      const key = event.key;\n      const isFromBreadcrumb = activeElement.classList.contains('pf-c-breadcrumb__link') || activeElement.classList.contains('pf-c-dropdown__toggle');\n      if (key === ' ' || key === 'Enter') {\n        event.preventDefault();\n        if (isDrilldown && !isFromBreadcrumb) {\n          const isDrillingOut = activeElement.closest('li').classList.contains('pf-m-current-path');\n          if (isDrillingOut && parentMenu.parentElement.tagName === 'LI') {\n            activeElement.tabIndex = -1;\n            parentMenu.parentElement.firstChild.tabIndex = 0;\n            this.setState({\n              transitionMoveTarget: parentMenu.parentElement.firstChild\n            });\n          } else {\n            if (activeElement.nextElementSibling && activeElement.nextElementSibling.classList.contains('pf-c-menu')) {\n              const childItems = Array.from(activeElement.nextElementSibling.getElementsByTagName('UL')[0].children).filter(el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider')));\n              activeElement.tabIndex = -1;\n              childItems[0].firstChild.tabIndex = 0;\n              this.setState({\n                transitionMoveTarget: childItems[0].firstChild\n              });\n            }\n          }\n        }\n        document.activeElement.click();\n      }\n    };\n    this.createNavigableElements = () => {\n      const isDrilldown = this.props.containsDrilldown;\n      if (isDrilldown) {\n        return this.activeMenu ? Array.from(this.activeMenu.getElementsByTagName('UL')[0].children).filter(el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider'))) : [];\n      } else {\n        return this.menuRef.current ? Array.from(this.menuRef.current.getElementsByTagName('LI')).filter(el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider'))) : [];\n      }\n    };\n    if (props.innerRef) {\n      this.menuRef = props.innerRef;\n    }\n  }\n  allowTabFirstItem() {\n    // Allow tabbing to first menu item\n    const current = this.menuRef.current;\n    if (current) {\n      const first = current.querySelector('ul button:not(:disabled), ul a:not(:disabled)');\n      if (first) {\n        first.tabIndex = 0;\n      }\n    }\n  }\n  componentDidMount() {\n    if (this.context) {\n      this.setState({\n        disableHover: this.context.disableHover\n      });\n    }\n    if (canUseDOM) {\n      window.addEventListener('transitionend', this.props.isRootMenu ? this.handleDrilldownTransition : null);\n    }\n    this.allowTabFirstItem();\n  }\n  componentWillUnmount() {\n    if (canUseDOM) {\n      window.removeEventListener('transitionend', this.handleDrilldownTransition);\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.children !== this.props.children) {\n      this.allowTabFirstItem();\n    }\n  }\n  render() {\n    const _a = this.props,\n      {\n        'aria-label': ariaLabel,\n        id,\n        children,\n        className,\n        onSelect,\n        selected = null,\n        onActionClick,\n        ouiaId,\n        ouiaSafe,\n        containsFlyout,\n        isNavFlyout,\n        containsDrilldown,\n        isMenuDrilledIn,\n        isPlain,\n        isScrollable,\n        drilldownItemPath,\n        drilledInMenus,\n        onDrillIn,\n        onDrillOut,\n        onGetMenuHeight,\n        parentMenu = null,\n        activeItemId = null,\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        innerRef,\n        isRootMenu,\n        activeMenu,\n        role\n      } = _a,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      props = __rest(_a, ['aria-label', \"id\", \"children\", \"className\", \"onSelect\", \"selected\", \"onActionClick\", \"ouiaId\", \"ouiaSafe\", \"containsFlyout\", \"isNavFlyout\", \"containsDrilldown\", \"isMenuDrilledIn\", \"isPlain\", \"isScrollable\", \"drilldownItemPath\", \"drilledInMenus\", \"onDrillIn\", \"onDrillOut\", \"onGetMenuHeight\", \"parentMenu\", \"activeItemId\", \"innerRef\", \"isRootMenu\", \"activeMenu\", \"role\"]);\n    const _isMenuDrilledIn = isMenuDrilledIn || drilledInMenus && drilledInMenus.includes(id) || false;\n    return React.createElement(MenuContext.Provider, {\n      value: {\n        menuId: id,\n        parentMenu: parentMenu || id,\n        onSelect,\n        onActionClick,\n        activeItemId,\n        selected,\n        drilledInMenus,\n        drilldownItemPath,\n        onDrillIn,\n        onDrillOut,\n        onGetMenuHeight,\n        flyoutRef: this.state.flyoutRef,\n        setFlyoutRef: flyoutRef => this.setState({\n          flyoutRef\n        }),\n        disableHover: this.state.disableHover,\n        role\n      }\n    }, isRootMenu && React.createElement(KeyboardHandler, {\n      containerRef: this.menuRef || null,\n      additionalKeyHandler: this.handleExtraKeys,\n      createNavigableElements: this.createNavigableElements,\n      isActiveElement: element => document.activeElement.closest('li') === element ||\n      // if element is a basic MenuItem\n      document.activeElement.parentElement === element || document.activeElement.closest('.pf-c-menu__search') === element ||\n      // if element is a MenuInput\n      document.activeElement.closest('ol') && document.activeElement.closest('ol').firstChild === element,\n      getFocusableElement: navigableElement => navigableElement.tagName === 'DIV' && navigableElement.querySelector('input') ||\n      // for MenuInput\n      navigableElement.firstChild.tagName === 'LABEL' && navigableElement.querySelector('input') ||\n      // for MenuItem checkboxes\n      navigableElement.firstChild,\n      noHorizontalArrowHandling: document.activeElement && (document.activeElement.classList.contains('pf-c-breadcrumb__link') || document.activeElement.classList.contains('pf-c-dropdown__toggle')),\n      noEnterHandling: true,\n      noSpaceHandling: true\n    }), React.createElement(\"div\", Object.assign({\n      id: id,\n      className: css(styles.menu, isPlain && styles.modifiers.plain, isScrollable && styles.modifiers.scrollable, containsFlyout && styles.modifiers.flyout, isNavFlyout && styles.modifiers.nav, containsDrilldown && styles.modifiers.drilldown, _isMenuDrilledIn && styles.modifiers.drilledIn, className),\n      \"aria-label\": ariaLabel,\n      ref: this.menuRef\n    }, getOUIAProps(Menu.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), props), children));\n  }\n}\nMenuBase.displayName = 'Menu';\nMenuBase.contextType = MenuContext;\nMenuBase.defaultProps = {\n  ouiaSafe: true,\n  isRootMenu: true,\n  isPlain: false,\n  isScrollable: false,\n  role: 'menu'\n};\nexport const Menu = React.forwardRef((props, ref) => React.createElement(MenuBase, Object.assign({}, props, {\n  innerRef: ref\n})));\nMenu.displayName = 'Menu';","map":{"version":3,"sources":["../../../../src/components/Menu/Menu.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nimport { MenuContext } from './MenuContext';\nimport { canUseDOM } from '../../helpers/util';\nimport { KeyboardHandler } from '../../helpers';\nclass MenuBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.menuRef = React.createRef();\n        this.activeMenu = null;\n        this.state = {\n            ouiaStateId: getDefaultOUIAId(Menu.displayName),\n            searchInputValue: '',\n            transitionMoveTarget: null,\n            flyoutRef: null,\n            disableHover: false,\n            currentDrilldownMenuId: this.props.id\n        };\n        this.handleDrilldownTransition = (event) => {\n            const current = this.menuRef.current;\n            if (!current ||\n                (current !== event.target.closest('.pf-c-menu') &&\n                    !Array.from(current.getElementsByClassName('pf-c-menu')).includes(event.target.closest('.pf-c-menu')))) {\n                return;\n            }\n            if (this.state.transitionMoveTarget) {\n                this.state.transitionMoveTarget.focus();\n                this.setState({ transitionMoveTarget: null });\n            }\n            else {\n                const nextMenu = current.querySelector('#' + this.props.activeMenu) || current || null;\n                const nextMenuChildren = Array.from(nextMenu.getElementsByTagName('UL')[0].children);\n                if (!this.state.currentDrilldownMenuId || nextMenu.id !== this.state.currentDrilldownMenuId) {\n                    this.setState({ currentDrilldownMenuId: nextMenu.id });\n                }\n                else {\n                    // if the drilldown transition ends on the same menu, do not focus the first item\n                    return;\n                }\n                const nextTarget = nextMenuChildren.filter(el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider')))[0].firstChild;\n                nextTarget.focus();\n                nextTarget.tabIndex = 0;\n            }\n        };\n        this.handleExtraKeys = (event) => {\n            const isDrilldown = this.props.containsDrilldown;\n            const activeElement = document.activeElement;\n            if (event.target.closest('.pf-c-menu') !== this.activeMenu &&\n                !event.target.classList.contains('pf-c-breadcrumb__link')) {\n                this.activeMenu = event.target.closest('.pf-c-menu');\n                this.setState({ disableHover: true });\n            }\n            if (event.target.tagName === 'INPUT') {\n                return;\n            }\n            const parentMenu = this.activeMenu;\n            const key = event.key;\n            const isFromBreadcrumb = activeElement.classList.contains('pf-c-breadcrumb__link') ||\n                activeElement.classList.contains('pf-c-dropdown__toggle');\n            if (key === ' ' || key === 'Enter') {\n                event.preventDefault();\n                if (isDrilldown && !isFromBreadcrumb) {\n                    const isDrillingOut = activeElement.closest('li').classList.contains('pf-m-current-path');\n                    if (isDrillingOut && parentMenu.parentElement.tagName === 'LI') {\n                        activeElement.tabIndex = -1;\n                        parentMenu.parentElement.firstChild.tabIndex = 0;\n                        this.setState({ transitionMoveTarget: parentMenu.parentElement.firstChild });\n                    }\n                    else {\n                        if (activeElement.nextElementSibling && activeElement.nextElementSibling.classList.contains('pf-c-menu')) {\n                            const childItems = Array.from(activeElement.nextElementSibling.getElementsByTagName('UL')[0].children).filter(el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider')));\n                            activeElement.tabIndex = -1;\n                            childItems[0].firstChild.tabIndex = 0;\n                            this.setState({ transitionMoveTarget: childItems[0].firstChild });\n                        }\n                    }\n                }\n                document.activeElement.click();\n            }\n        };\n        this.createNavigableElements = () => {\n            const isDrilldown = this.props.containsDrilldown;\n            if (isDrilldown) {\n                return this.activeMenu\n                    ? Array.from(this.activeMenu.getElementsByTagName('UL')[0].children).filter(el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider')))\n                    : [];\n            }\n            else {\n                return this.menuRef.current\n                    ? Array.from(this.menuRef.current.getElementsByTagName('LI')).filter(el => !(el.classList.contains('pf-m-disabled') || el.classList.contains('pf-c-divider')))\n                    : [];\n            }\n        };\n        if (props.innerRef) {\n            this.menuRef = props.innerRef;\n        }\n    }\n    allowTabFirstItem() {\n        // Allow tabbing to first menu item\n        const current = this.menuRef.current;\n        if (current) {\n            const first = current.querySelector('ul button:not(:disabled), ul a:not(:disabled)');\n            if (first) {\n                first.tabIndex = 0;\n            }\n        }\n    }\n    componentDidMount() {\n        if (this.context) {\n            this.setState({ disableHover: this.context.disableHover });\n        }\n        if (canUseDOM) {\n            window.addEventListener('transitionend', this.props.isRootMenu ? this.handleDrilldownTransition : null);\n        }\n        this.allowTabFirstItem();\n    }\n    componentWillUnmount() {\n        if (canUseDOM) {\n            window.removeEventListener('transitionend', this.handleDrilldownTransition);\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.children !== this.props.children) {\n            this.allowTabFirstItem();\n        }\n    }\n    render() {\n        const _a = this.props, { 'aria-label': ariaLabel, id, children, className, onSelect, selected = null, onActionClick, ouiaId, ouiaSafe, containsFlyout, isNavFlyout, containsDrilldown, isMenuDrilledIn, isPlain, isScrollable, drilldownItemPath, drilledInMenus, onDrillIn, onDrillOut, onGetMenuHeight, parentMenu = null, activeItemId = null, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        innerRef, isRootMenu, activeMenu, role } = _a, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        props = __rest(_a, ['aria-label', \"id\", \"children\", \"className\", \"onSelect\", \"selected\", \"onActionClick\", \"ouiaId\", \"ouiaSafe\", \"containsFlyout\", \"isNavFlyout\", \"containsDrilldown\", \"isMenuDrilledIn\", \"isPlain\", \"isScrollable\", \"drilldownItemPath\", \"drilledInMenus\", \"onDrillIn\", \"onDrillOut\", \"onGetMenuHeight\", \"parentMenu\", \"activeItemId\", \"innerRef\", \"isRootMenu\", \"activeMenu\", \"role\"]);\n        const _isMenuDrilledIn = isMenuDrilledIn || (drilledInMenus && drilledInMenus.includes(id)) || false;\n        return (React.createElement(MenuContext.Provider, { value: {\n                menuId: id,\n                parentMenu: parentMenu || id,\n                onSelect,\n                onActionClick,\n                activeItemId,\n                selected,\n                drilledInMenus,\n                drilldownItemPath,\n                onDrillIn,\n                onDrillOut,\n                onGetMenuHeight,\n                flyoutRef: this.state.flyoutRef,\n                setFlyoutRef: flyoutRef => this.setState({ flyoutRef }),\n                disableHover: this.state.disableHover,\n                role\n            } },\n            isRootMenu && (React.createElement(KeyboardHandler, { containerRef: this.menuRef || null, additionalKeyHandler: this.handleExtraKeys, createNavigableElements: this.createNavigableElements, isActiveElement: (element) => document.activeElement.closest('li') === element || // if element is a basic MenuItem\n                    document.activeElement.parentElement === element ||\n                    document.activeElement.closest('.pf-c-menu__search') === element || // if element is a MenuInput\n                    (document.activeElement.closest('ol') && document.activeElement.closest('ol').firstChild === element), getFocusableElement: (navigableElement) => (navigableElement.tagName === 'DIV' && navigableElement.querySelector('input')) || // for MenuInput\n                    (navigableElement.firstChild.tagName === 'LABEL' &&\n                        navigableElement.querySelector('input')) || // for MenuItem checkboxes\n                    navigableElement.firstChild, noHorizontalArrowHandling: document.activeElement &&\n                    (document.activeElement.classList.contains('pf-c-breadcrumb__link') ||\n                        document.activeElement.classList.contains('pf-c-dropdown__toggle')), noEnterHandling: true, noSpaceHandling: true })),\n            React.createElement(\"div\", Object.assign({ id: id, className: css(styles.menu, isPlain && styles.modifiers.plain, isScrollable && styles.modifiers.scrollable, containsFlyout && styles.modifiers.flyout, isNavFlyout && styles.modifiers.nav, containsDrilldown && styles.modifiers.drilldown, _isMenuDrilledIn && styles.modifiers.drilledIn, className), \"aria-label\": ariaLabel, ref: this.menuRef }, getOUIAProps(Menu.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), props), children)));\n    }\n}\nMenuBase.displayName = 'Menu';\nMenuBase.contextType = MenuContext;\nMenuBase.defaultProps = {\n    ouiaSafe: true,\n    isRootMenu: true,\n    isPlain: false,\n    isScrollable: false,\n    role: 'menu'\n};\nexport const Menu = React.forwardRef((props, ref) => (React.createElement(MenuBase, Object.assign({}, props, { innerRef: ref }))));\nMenu.displayName = 'Menu';\n//# sourceMappingURL=Menu.js.map"]},"metadata":{},"sourceType":"module"}