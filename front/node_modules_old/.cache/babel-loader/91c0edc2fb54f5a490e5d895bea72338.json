{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Accordion/accordion';\nimport { AccordionContext } from './AccordionContext';\nexport const Accordion = _a => {\n  var {\n      children = null,\n      className = '',\n      'aria-label': ariaLabel = '',\n      headingLevel = 'h3',\n      asDefinitionList = true,\n      isBordered = false,\n      displaySize = 'default'\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", 'aria-label', \"headingLevel\", \"asDefinitionList\", \"isBordered\", \"displaySize\"]);\n  const AccordionList = asDefinitionList ? 'dl' : 'div';\n  return React.createElement(AccordionList, Object.assign({\n    className: css(styles.accordion, isBordered && styles.modifiers.bordered, displaySize === 'large' && styles.modifiers.displayLg, className),\n    \"aria-label\": ariaLabel\n  }, props), React.createElement(AccordionContext.Provider, {\n    value: {\n      ContentContainer: asDefinitionList ? 'dd' : 'div',\n      ToggleContainer: asDefinitionList ? 'dt' : headingLevel\n    }\n  }, children));\n};\nAccordion.displayName = 'Accordion';","map":{"version":3,"sources":["../../../../src/components/Accordion/Accordion.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,MAAM,MAAM,6DAA6D;AAChF,SAAS,gBAAgB,QAAQ,oBAAoB;AAmBrD,OAAO,MAAM,SAAS,GAA6C,EASlD,IAAI;MAT8C;MACjE,QAAQ,GAAG,IAAI;MACf,SAAS,GAAG,EAAE;MACd,YAAY,EAAE,SAAS,GAAG,EAAE;MAC5B,YAAY,GAAG,IAAI;MACnB,gBAAgB,GAAG,IAAI;MACvB,UAAU,GAAG,KAAK;MAClB,WAAW,GAAG;IAAS,CAAA,GAAA,EAER;IADZ,KAAK,GAAA,MAAA,CAAA,EAAA,EARyD,CAAA,UAAA,EAAA,WAAA,EAAA,YAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,YAAA,EAAA,aAAA,CASlE,CADS;EAER,MAAM,aAAa,GAAQ,gBAAgB,GAAG,IAAI,GAAG,KAAK;EAC1D,OACE,KAAA,CAAA,aAAA,CAAC,aAAa,EAAA,MAAA,CAAA,MAAA,CAAA;IACZ,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,SAAS,EAChB,UAAU,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,EACvC,WAAW,KAAK,OAAO,IAAI,MAAM,CAAC,SAAS,CAAC,SAAS,EACrD,SAAS,CACV;IAAA,YAAA,EACW;EAAS,CAAA,EACjB,KAAK,CAAA,EAET,KAAA,CAAA,aAAA,CAAC,gBAAgB,CAAC,QAAQ,EAAA;IACxB,KAAK,EAAE;MACL,gBAAgB,EAAE,gBAAgB,GAAG,IAAI,GAAG,KAAK;MACjD,eAAe,EAAE,gBAAgB,GAAG,IAAI,GAAG;IAC5C;EAAA,CAAA,EAEA,QAAQ,CACiB,CACd;AAEpB,CAAC;AACD,SAAS,CAAC,WAAW,GAAG,WAAW","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Accordion/accordion';\nimport { AccordionContext } from './AccordionContext';\nexport const Accordion = (_a) => {\n    var { children = null, className = '', 'aria-label': ariaLabel = '', headingLevel = 'h3', asDefinitionList = true, isBordered = false, displaySize = 'default' } = _a, props = __rest(_a, [\"children\", \"className\", 'aria-label', \"headingLevel\", \"asDefinitionList\", \"isBordered\", \"displaySize\"]);\n    const AccordionList = asDefinitionList ? 'dl' : 'div';\n    return (React.createElement(AccordionList, Object.assign({ className: css(styles.accordion, isBordered && styles.modifiers.bordered, displaySize === 'large' && styles.modifiers.displayLg, className), \"aria-label\": ariaLabel }, props),\n        React.createElement(AccordionContext.Provider, { value: {\n                ContentContainer: asDefinitionList ? 'dd' : 'div',\n                ToggleContainer: asDefinitionList ? 'dt' : headingLevel\n            } }, children)));\n};\nAccordion.displayName = 'Accordion';\n//# sourceMappingURL=Accordion.js.map"]},"metadata":{},"sourceType":"module"}