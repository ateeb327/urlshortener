{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { keyHandler, formatBreakpointMods } from '../../helpers/util';\nimport { DropdownPosition, DropdownArrowContext, DropdownContext } from './dropdownConstants';\nexport class DropdownMenu extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.refsCollection = [];\n    this.componentWillUnmount = () => {\n      document.removeEventListener('keydown', this.onKeyDown);\n    };\n    this.onKeyDown = event => {\n      if (!this.props.isOpen || !Array.from(document.activeElement.classList).find(className => DropdownMenu.validToggleClasses.concat(this.context.toggleClass).includes(className))) {\n        return;\n      }\n      const refs = this.refsCollection;\n      if (event.key === 'ArrowDown') {\n        const firstFocusTargetCollection = refs.find(ref => ref && ref[0] && !ref[0].hasAttribute('disabled'));\n        DropdownMenu.focusFirstRef(firstFocusTargetCollection);\n        event.stopPropagation();\n      } else if (event.key === 'ArrowUp') {\n        const collectionLength = refs.length;\n        const lastFocusTargetCollection = refs.slice(collectionLength - 1, collectionLength);\n        const lastFocusTarget = lastFocusTargetCollection && lastFocusTargetCollection[0];\n        DropdownMenu.focusFirstRef(lastFocusTarget);\n        event.stopPropagation();\n      }\n    };\n    this.childKeyHandler = (index, innerIndex, position, custom = false) => {\n      keyHandler(index, innerIndex, position, this.refsCollection, this.props.isGrouped ? this.refsCollection : React.Children.toArray(this.props.children), custom);\n    };\n    this.sendRef = (index, nodes, isDisabled, isSeparator) => {\n      this.refsCollection[index] = [];\n      nodes.map((node, innerIndex) => {\n        if (!node) {\n          this.refsCollection[index][innerIndex] = null;\n        } else if (!node.getAttribute) {\n          // eslint-disable-next-line react/no-find-dom-node\n          this.refsCollection[index][innerIndex] = ReactDOM.findDOMNode(node);\n        } else if (isSeparator) {\n          this.refsCollection[index][innerIndex] = null;\n        } else {\n          this.refsCollection[index][innerIndex] = node;\n        }\n      });\n    };\n  }\n  componentDidMount() {\n    document.addEventListener('keydown', this.onKeyDown);\n    const {\n      autoFocus\n    } = this.props;\n    if (autoFocus) {\n      // Focus first non-disabled element\n      const focusTargetCollection = this.refsCollection.find(ref => ref && ref[0] && !ref[0].hasAttribute('disabled'));\n      const focusTarget = focusTargetCollection && focusTargetCollection[0];\n      if (focusTarget && focusTarget.focus) {\n        setTimeout(() => focusTarget.focus());\n      }\n    }\n  }\n  shouldComponentUpdate() {\n    // reset refsCollection before updating to account for child removal between mounts\n    this.refsCollection = [];\n    return true;\n  }\n  extendChildren() {\n    const {\n      children,\n      isGrouped\n    } = this.props;\n    if (isGrouped) {\n      let index = 0;\n      return React.Children.map(children, groupedChildren => {\n        const group = groupedChildren;\n        const props = {};\n        if (group.props && group.props.children) {\n          if (Array.isArray(group.props.children)) {\n            props.children = React.Children.map(group.props.children, option => React.cloneElement(option, {\n              index: index++\n            }));\n          } else {\n            props.children = React.cloneElement(group.props.children, {\n              index: index++\n            });\n          }\n        }\n        return React.cloneElement(group, props);\n      });\n    }\n    return React.Children.map(children, (child, index) => React.cloneElement(child, {\n      index\n    }));\n  }\n  render() {\n    const _a = this.props,\n      {\n        className,\n        isOpen,\n        position,\n        children,\n        component,\n        isGrouped,\n        setMenuComponentRef,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        openedOnEnter,\n        alignments\n      } = _a,\n      props = __rest(_a, [\"className\", \"isOpen\", \"position\", \"children\", \"component\", \"isGrouped\", \"setMenuComponentRef\", \"openedOnEnter\", \"alignments\"]);\n    return React.createElement(DropdownArrowContext.Provider, {\n      value: {\n        keyHandler: this.childKeyHandler,\n        sendRef: this.sendRef\n      }\n    }, component === 'div' ? React.createElement(DropdownContext.Consumer, null, ({\n      onSelect,\n      menuClass\n    }) => React.createElement(\"div\", {\n      className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, formatBreakpointMods(alignments, styles, 'align-'), className),\n      hidden: !isOpen,\n      onClick: event => onSelect && onSelect(event),\n      ref: setMenuComponentRef\n    }, children)) : isGrouped && React.createElement(DropdownContext.Consumer, null, ({\n      menuClass,\n      menuComponent\n    }) => {\n      const MenuComponent = menuComponent || 'div';\n      return React.createElement(MenuComponent, Object.assign({}, props, {\n        className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, formatBreakpointMods(alignments, styles, 'align-'), className),\n        hidden: !isOpen,\n        role: \"menu\",\n        ref: setMenuComponentRef\n      }), this.extendChildren());\n    }) || React.createElement(DropdownContext.Consumer, null, ({\n      menuClass,\n      menuComponent\n    }) => {\n      const MenuComponent = menuComponent || component;\n      return React.createElement(MenuComponent, Object.assign({}, props, {\n        className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, formatBreakpointMods(alignments, styles, 'align-'), className),\n        hidden: !isOpen,\n        role: \"menu\",\n        ref: setMenuComponentRef\n      }), this.extendChildren());\n    }));\n  }\n}\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = {\n  className: '',\n  isOpen: true,\n  openedOnEnter: false,\n  autoFocus: true,\n  position: DropdownPosition.left,\n  component: 'ul',\n  isGrouped: false,\n  setMenuComponentRef: null\n};\nDropdownMenu.validToggleClasses = [styles.dropdownToggle, styles.dropdownToggleButton];\nDropdownMenu.focusFirstRef = refCollection => {\n  if (refCollection && refCollection[0] && refCollection[0].focus) {\n    setTimeout(() => refCollection[0].focus());\n  }\n};\nDropdownMenu.contextType = DropdownContext;","map":{"version":3,"sources":["../../../../src/components/Dropdown/DropdownMenu.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { keyHandler, formatBreakpointMods } from '../../helpers/util';\nimport { DropdownPosition, DropdownArrowContext, DropdownContext } from './dropdownConstants';\nexport class DropdownMenu extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.refsCollection = [];\n        this.componentWillUnmount = () => {\n            document.removeEventListener('keydown', this.onKeyDown);\n        };\n        this.onKeyDown = (event) => {\n            if (!this.props.isOpen ||\n                !Array.from(document.activeElement.classList).find(className => DropdownMenu.validToggleClasses.concat(this.context.toggleClass).includes(className))) {\n                return;\n            }\n            const refs = this.refsCollection;\n            if (event.key === 'ArrowDown') {\n                const firstFocusTargetCollection = refs.find(ref => ref && ref[0] && !ref[0].hasAttribute('disabled'));\n                DropdownMenu.focusFirstRef(firstFocusTargetCollection);\n                event.stopPropagation();\n            }\n            else if (event.key === 'ArrowUp') {\n                const collectionLength = refs.length;\n                const lastFocusTargetCollection = refs.slice(collectionLength - 1, collectionLength);\n                const lastFocusTarget = lastFocusTargetCollection && lastFocusTargetCollection[0];\n                DropdownMenu.focusFirstRef(lastFocusTarget);\n                event.stopPropagation();\n            }\n        };\n        this.childKeyHandler = (index, innerIndex, position, custom = false) => {\n            keyHandler(index, innerIndex, position, this.refsCollection, this.props.isGrouped ? this.refsCollection : React.Children.toArray(this.props.children), custom);\n        };\n        this.sendRef = (index, nodes, isDisabled, isSeparator) => {\n            this.refsCollection[index] = [];\n            nodes.map((node, innerIndex) => {\n                if (!node) {\n                    this.refsCollection[index][innerIndex] = null;\n                }\n                else if (!node.getAttribute) {\n                    // eslint-disable-next-line react/no-find-dom-node\n                    this.refsCollection[index][innerIndex] = ReactDOM.findDOMNode(node);\n                }\n                else if (isSeparator) {\n                    this.refsCollection[index][innerIndex] = null;\n                }\n                else {\n                    this.refsCollection[index][innerIndex] = node;\n                }\n            });\n        };\n    }\n    componentDidMount() {\n        document.addEventListener('keydown', this.onKeyDown);\n        const { autoFocus } = this.props;\n        if (autoFocus) {\n            // Focus first non-disabled element\n            const focusTargetCollection = this.refsCollection.find(ref => ref && ref[0] && !ref[0].hasAttribute('disabled'));\n            const focusTarget = focusTargetCollection && focusTargetCollection[0];\n            if (focusTarget && focusTarget.focus) {\n                setTimeout(() => focusTarget.focus());\n            }\n        }\n    }\n    shouldComponentUpdate() {\n        // reset refsCollection before updating to account for child removal between mounts\n        this.refsCollection = [];\n        return true;\n    }\n    extendChildren() {\n        const { children, isGrouped } = this.props;\n        if (isGrouped) {\n            let index = 0;\n            return React.Children.map(children, groupedChildren => {\n                const group = groupedChildren;\n                const props = {};\n                if (group.props && group.props.children) {\n                    if (Array.isArray(group.props.children)) {\n                        props.children = React.Children.map(group.props.children, option => React.cloneElement(option, {\n                            index: index++\n                        }));\n                    }\n                    else {\n                        props.children = React.cloneElement(group.props.children, {\n                            index: index++\n                        });\n                    }\n                }\n                return React.cloneElement(group, props);\n            });\n        }\n        return React.Children.map(children, (child, index) => React.cloneElement(child, {\n            index\n        }));\n    }\n    render() {\n        const _a = this.props, { className, isOpen, position, children, component, isGrouped, setMenuComponentRef, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        openedOnEnter, alignments } = _a, props = __rest(_a, [\"className\", \"isOpen\", \"position\", \"children\", \"component\", \"isGrouped\", \"setMenuComponentRef\", \"openedOnEnter\", \"alignments\"]);\n        return (React.createElement(DropdownArrowContext.Provider, { value: {\n                keyHandler: this.childKeyHandler,\n                sendRef: this.sendRef\n            } }, component === 'div' ? (React.createElement(DropdownContext.Consumer, null, ({ onSelect, menuClass }) => (React.createElement(\"div\", { className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, formatBreakpointMods(alignments, styles, 'align-'), className), hidden: !isOpen, onClick: event => onSelect && onSelect(event), ref: setMenuComponentRef }, children)))) : ((isGrouped && (React.createElement(DropdownContext.Consumer, null, ({ menuClass, menuComponent }) => {\n            const MenuComponent = (menuComponent || 'div');\n            return (React.createElement(MenuComponent, Object.assign({}, props, { className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, formatBreakpointMods(alignments, styles, 'align-'), className), hidden: !isOpen, role: \"menu\", ref: setMenuComponentRef }), this.extendChildren()));\n        }))) || (React.createElement(DropdownContext.Consumer, null, ({ menuClass, menuComponent }) => {\n            const MenuComponent = (menuComponent || component);\n            return (React.createElement(MenuComponent, Object.assign({}, props, { className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, formatBreakpointMods(alignments, styles, 'align-'), className), hidden: !isOpen, role: \"menu\", ref: setMenuComponentRef }), this.extendChildren()));\n        })))));\n    }\n}\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = {\n    className: '',\n    isOpen: true,\n    openedOnEnter: false,\n    autoFocus: true,\n    position: DropdownPosition.left,\n    component: 'ul',\n    isGrouped: false,\n    setMenuComponentRef: null\n};\nDropdownMenu.validToggleClasses = [styles.dropdownToggle, styles.dropdownToggleButton];\nDropdownMenu.focusFirstRef = (refCollection) => {\n    if (refCollection && refCollection[0] && refCollection[0].focus) {\n        setTimeout(() => refCollection[0].focus());\n    }\n};\nDropdownMenu.contextType = DropdownContext;\n//# sourceMappingURL=DropdownMenu.js.map"]},"metadata":{},"sourceType":"module"}