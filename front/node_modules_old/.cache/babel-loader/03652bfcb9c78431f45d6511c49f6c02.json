{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport { SelectVariant, SelectFooterTabbableItems } from './selectConstants';\nimport { findTabbableElements } from '../../helpers/util';\nimport { KeyTypes } from '../../helpers/constants';\nclass SelectToggleBase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onDocClick = event => {\n      const {\n        parentRef,\n        menuRef,\n        footerRef,\n        isOpen,\n        onToggle,\n        onClose\n      } = this.props;\n      const clickedOnToggle = parentRef && parentRef.current && parentRef.current.contains(event.target);\n      const clickedWithinMenu = menuRef && menuRef.current && menuRef.current.contains && menuRef.current.contains(event.target);\n      const clickedWithinFooter = footerRef && footerRef.current && footerRef.current.contains && footerRef.current.contains(event.target);\n      if (isOpen && !(clickedOnToggle || clickedWithinMenu || clickedWithinFooter)) {\n        onToggle(false, event);\n        onClose();\n      }\n    };\n    this.handleGlobalKeys = event => {\n      const {\n        parentRef,\n        menuRef,\n        hasFooter,\n        footerRef,\n        isOpen,\n        variant,\n        onToggle,\n        onClose,\n        moveFocusToLastMenuItem\n      } = this.props;\n      const escFromToggle = parentRef && parentRef.current && parentRef.current.contains(event.target);\n      const escFromWithinMenu = menuRef && menuRef.current && menuRef.current.contains && menuRef.current.contains(event.target);\n      if (isOpen && event.key === KeyTypes.Tab && (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti)) {\n        this.props.handleTypeaheadKeys('tab', event.shiftKey);\n        event.preventDefault();\n        return;\n      }\n      if (isOpen && event.key === KeyTypes.Tab && hasFooter) {\n        const tabbableItems = findTabbableElements(footerRef, SelectFooterTabbableItems);\n        // If no tabbable item in footer close select\n        if (tabbableItems.length <= 0) {\n          onToggle(false, event);\n          onClose();\n          this.toggle.current.focus();\n          return;\n        } else {\n          // if current element is not in footer, tab to first tabbable element in footer, or close if shift clicked\n          const currentElementIndex = tabbableItems.findIndex(item => item === document.activeElement);\n          if (currentElementIndex === -1) {\n            if (event.shiftKey) {\n              if (variant !== 'checkbox') {\n                // only close non checkbox variation on shift clicked\n                onToggle(false, event);\n                onClose();\n                this.toggle.current.focus();\n              }\n            } else {\n              // tab to footer\n              tabbableItems[0].focus();\n              return;\n            }\n          }\n          // Current element is in footer.\n          if (event.shiftKey) {\n            // Move focus back to menu if current tab index is 0\n            if (currentElementIndex === 0) {\n              moveFocusToLastMenuItem();\n              event.preventDefault();\n            }\n            return;\n          }\n          // Tab to next element in footer or close if there are none\n          if (currentElementIndex + 1 < tabbableItems.length) {\n            tabbableItems[currentElementIndex + 1].focus();\n          } else {\n            // no more footer items close menu\n            onToggle(false, event);\n            onClose();\n            this.toggle.current.focus();\n          }\n          event.preventDefault();\n          return;\n        }\n      }\n      if (isOpen && (event.key === KeyTypes.Escape || event.key === KeyTypes.Tab) && (escFromToggle || escFromWithinMenu)) {\n        onToggle(false, event);\n        onClose();\n        this.toggle.current.focus();\n      }\n    };\n    this.onKeyDown = event => {\n      const {\n        isOpen,\n        onToggle,\n        variant,\n        onClose,\n        onEnter,\n        handleTypeaheadKeys\n      } = this.props;\n      if (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti) {\n        if (event.key === KeyTypes.ArrowDown || event.key === KeyTypes.ArrowUp) {\n          handleTypeaheadKeys(event.key === KeyTypes.ArrowDown && 'down' || event.key === KeyTypes.ArrowUp && 'up');\n          event.preventDefault();\n        } else if (event.key === KeyTypes.Enter) {\n          if (isOpen) {\n            handleTypeaheadKeys('enter');\n          } else {\n            onToggle(!isOpen, event);\n          }\n        }\n      }\n      if (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti || event.key === KeyTypes.Tab && !isOpen || event.key !== KeyTypes.Enter && event.key !== KeyTypes.Space) {\n        return;\n      }\n      event.preventDefault();\n      if ((event.key === KeyTypes.Tab || event.key === KeyTypes.Enter || event.key === KeyTypes.Space) && isOpen) {\n        onToggle(!isOpen, event);\n        onClose();\n        this.toggle.current.focus();\n      } else if ((event.key === KeyTypes.Enter || event.key === KeyTypes.Space) && !isOpen) {\n        onToggle(!isOpen, event);\n        onEnter();\n      }\n    };\n    const {\n      variant\n    } = props;\n    const isTypeahead = variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti;\n    if (this.props.innerRef) {\n      this.toggle = this.props.innerRef;\n    } else {\n      this.toggle = isTypeahead ? React.createRef() : React.createRef();\n    }\n  }\n  componentDidMount() {\n    document.addEventListener('click', this.onDocClick, {\n      capture: true\n    });\n    document.addEventListener('touchstart', this.onDocClick);\n    document.addEventListener('keydown', this.handleGlobalKeys);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('click', this.onDocClick, {\n      capture: true\n    });\n    document.removeEventListener('touchstart', this.onDocClick);\n    document.removeEventListener('keydown', this.handleGlobalKeys);\n  }\n  render() {\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const _a = this.props,\n      {\n        className,\n        children,\n        isOpen,\n        isActive,\n        isPlain,\n        isDisabled,\n        hasPlaceholderStyle,\n        variant,\n        onToggle,\n        onEnter,\n        onClose,\n        onBlur,\n        onClickTypeaheadToggleButton,\n        handleTypeaheadKeys,\n        moveFocusToLastMenuItem,\n        parentRef,\n        menuRef,\n        id,\n        type,\n        hasClearButton,\n        'aria-labelledby': ariaLabelledBy,\n        'aria-label': ariaLabel,\n        hasFooter,\n        footerRef,\n        toggleIndicator,\n        innerRef\n      } = _a,\n      props = __rest(_a, [\"className\", \"children\", \"isOpen\", \"isActive\", \"isPlain\", \"isDisabled\", \"hasPlaceholderStyle\", \"variant\", \"onToggle\", \"onEnter\", \"onClose\", \"onBlur\", \"onClickTypeaheadToggleButton\", \"handleTypeaheadKeys\", \"moveFocusToLastMenuItem\", \"parentRef\", \"menuRef\", \"id\", \"type\", \"hasClearButton\", 'aria-labelledby', 'aria-label', \"hasFooter\", \"footerRef\", \"toggleIndicator\", \"innerRef\"]);\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    const isTypeahead = variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti || hasClearButton;\n    const toggleProps = {\n      id,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-expanded': isOpen,\n      'aria-haspopup': variant !== SelectVariant.checkbox && 'listbox' || null\n    };\n    return React.createElement(React.Fragment, null, !isTypeahead && React.createElement(\"button\", Object.assign({}, props, toggleProps, {\n      ref: this.toggle,\n      type: type,\n      className: css(styles.selectToggle, hasPlaceholderStyle && styles.modifiers.placeholder, isDisabled && styles.modifiers.disabled, isPlain && styles.modifiers.plain, isActive && styles.modifiers.active, className),\n      \"aria-label\": ariaLabel,\n      onBlur: onBlur,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onClick: event => {\n        onToggle(!isOpen, event);\n        if (isOpen) {\n          onClose();\n        }\n      },\n      onKeyDown: this.onKeyDown,\n      disabled: isDisabled\n    }), children, React.createElement(\"span\", {\n      className: css(styles.selectToggleArrow)\n    }, toggleIndicator !== null && toggleIndicator !== void 0 ? toggleIndicator : React.createElement(CaretDownIcon, null))), isTypeahead && React.createElement(\"div\", Object.assign({}, props, {\n      ref: this.toggle,\n      className: css(styles.selectToggle, hasPlaceholderStyle && styles.modifiers.placeholder, isDisabled && styles.modifiers.disabled, isPlain && styles.modifiers.plain, isTypeahead && styles.modifiers.typeahead, className),\n      onBlur: onBlur,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onClick: event => {\n        if (!isDisabled) {\n          onToggle(!isOpen, event);\n          if (isOpen) {\n            onClose();\n          }\n        }\n      },\n      onKeyDown: this.onKeyDown\n    }), children, React.createElement(\"button\", Object.assign({}, toggleProps, {\n      type: type,\n      className: css(buttonStyles.button, styles.selectToggleButton, styles.modifiers.plain),\n      \"aria-label\": ariaLabel,\n      onClick: event => {\n        onToggle(!isOpen, event);\n        if (isOpen) {\n          onClose();\n        }\n        onClickTypeaheadToggleButton();\n      }\n    }, (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti) && {\n      tabIndex: -1\n    }, {\n      disabled: isDisabled\n    }), toggleIndicator !== null && toggleIndicator !== void 0 ? toggleIndicator : React.createElement(CaretDownIcon, {\n      className: css(styles.selectToggleArrow)\n    }))));\n  }\n}\nSelectToggleBase.displayName = 'SelectToggle';\nSelectToggleBase.defaultProps = {\n  className: '',\n  isOpen: false,\n  isActive: false,\n  isPlain: false,\n  isDisabled: false,\n  hasPlaceholderStyle: false,\n  hasClearButton: false,\n  hasFooter: false,\n  variant: 'single',\n  'aria-labelledby': '',\n  'aria-label': '',\n  type: 'button',\n  onToggle: () => {},\n  onEnter: () => {},\n  onClose: () => {},\n  onClickTypeaheadToggleButton: () => {}\n};\nexport const SelectToggle = React.forwardRef((props, ref) => React.createElement(SelectToggleBase, Object.assign({\n  innerRef: ref\n}, props)));","map":{"version":3,"sources":["../../../../src/components/Select/SelectToggle.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Select/select';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport { SelectVariant, SelectFooterTabbableItems } from './selectConstants';\nimport { findTabbableElements } from '../../helpers/util';\nimport { KeyTypes } from '../../helpers/constants';\nclass SelectToggleBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onDocClick = (event) => {\n            const { parentRef, menuRef, footerRef, isOpen, onToggle, onClose } = this.props;\n            const clickedOnToggle = parentRef && parentRef.current && parentRef.current.contains(event.target);\n            const clickedWithinMenu = menuRef && menuRef.current && menuRef.current.contains && menuRef.current.contains(event.target);\n            const clickedWithinFooter = footerRef && footerRef.current && footerRef.current.contains && footerRef.current.contains(event.target);\n            if (isOpen && !(clickedOnToggle || clickedWithinMenu || clickedWithinFooter)) {\n                onToggle(false, event);\n                onClose();\n            }\n        };\n        this.handleGlobalKeys = (event) => {\n            const { parentRef, menuRef, hasFooter, footerRef, isOpen, variant, onToggle, onClose, moveFocusToLastMenuItem } = this.props;\n            const escFromToggle = parentRef && parentRef.current && parentRef.current.contains(event.target);\n            const escFromWithinMenu = menuRef && menuRef.current && menuRef.current.contains && menuRef.current.contains(event.target);\n            if (isOpen &&\n                event.key === KeyTypes.Tab &&\n                (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti)) {\n                this.props.handleTypeaheadKeys('tab', event.shiftKey);\n                event.preventDefault();\n                return;\n            }\n            if (isOpen && event.key === KeyTypes.Tab && hasFooter) {\n                const tabbableItems = findTabbableElements(footerRef, SelectFooterTabbableItems);\n                // If no tabbable item in footer close select\n                if (tabbableItems.length <= 0) {\n                    onToggle(false, event);\n                    onClose();\n                    this.toggle.current.focus();\n                    return;\n                }\n                else {\n                    // if current element is not in footer, tab to first tabbable element in footer, or close if shift clicked\n                    const currentElementIndex = tabbableItems.findIndex((item) => item === document.activeElement);\n                    if (currentElementIndex === -1) {\n                        if (event.shiftKey) {\n                            if (variant !== 'checkbox') {\n                                // only close non checkbox variation on shift clicked\n                                onToggle(false, event);\n                                onClose();\n                                this.toggle.current.focus();\n                            }\n                        }\n                        else {\n                            // tab to footer\n                            tabbableItems[0].focus();\n                            return;\n                        }\n                    }\n                    // Current element is in footer.\n                    if (event.shiftKey) {\n                        // Move focus back to menu if current tab index is 0\n                        if (currentElementIndex === 0) {\n                            moveFocusToLastMenuItem();\n                            event.preventDefault();\n                        }\n                        return;\n                    }\n                    // Tab to next element in footer or close if there are none\n                    if (currentElementIndex + 1 < tabbableItems.length) {\n                        tabbableItems[currentElementIndex + 1].focus();\n                    }\n                    else {\n                        // no more footer items close menu\n                        onToggle(false, event);\n                        onClose();\n                        this.toggle.current.focus();\n                    }\n                    event.preventDefault();\n                    return;\n                }\n            }\n            if (isOpen &&\n                (event.key === KeyTypes.Escape || event.key === KeyTypes.Tab) &&\n                (escFromToggle || escFromWithinMenu)) {\n                onToggle(false, event);\n                onClose();\n                this.toggle.current.focus();\n            }\n        };\n        this.onKeyDown = (event) => {\n            const { isOpen, onToggle, variant, onClose, onEnter, handleTypeaheadKeys } = this.props;\n            if (variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti) {\n                if (event.key === KeyTypes.ArrowDown || event.key === KeyTypes.ArrowUp) {\n                    handleTypeaheadKeys((event.key === KeyTypes.ArrowDown && 'down') || (event.key === KeyTypes.ArrowUp && 'up'));\n                    event.preventDefault();\n                }\n                else if (event.key === KeyTypes.Enter) {\n                    if (isOpen) {\n                        handleTypeaheadKeys('enter');\n                    }\n                    else {\n                        onToggle(!isOpen, event);\n                    }\n                }\n            }\n            if (variant === SelectVariant.typeahead ||\n                variant === SelectVariant.typeaheadMulti ||\n                (event.key === KeyTypes.Tab && !isOpen) ||\n                (event.key !== KeyTypes.Enter && event.key !== KeyTypes.Space)) {\n                return;\n            }\n            event.preventDefault();\n            if ((event.key === KeyTypes.Tab || event.key === KeyTypes.Enter || event.key === KeyTypes.Space) && isOpen) {\n                onToggle(!isOpen, event);\n                onClose();\n                this.toggle.current.focus();\n            }\n            else if ((event.key === KeyTypes.Enter || event.key === KeyTypes.Space) && !isOpen) {\n                onToggle(!isOpen, event);\n                onEnter();\n            }\n        };\n        const { variant } = props;\n        const isTypeahead = variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti;\n        if (this.props.innerRef) {\n            this.toggle = this.props.innerRef;\n        }\n        else {\n            this.toggle = isTypeahead ? React.createRef() : React.createRef();\n        }\n    }\n    componentDidMount() {\n        document.addEventListener('click', this.onDocClick, { capture: true });\n        document.addEventListener('touchstart', this.onDocClick);\n        document.addEventListener('keydown', this.handleGlobalKeys);\n    }\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onDocClick, { capture: true });\n        document.removeEventListener('touchstart', this.onDocClick);\n        document.removeEventListener('keydown', this.handleGlobalKeys);\n    }\n    render() {\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        const _a = this.props, { className, children, isOpen, isActive, isPlain, isDisabled, hasPlaceholderStyle, variant, onToggle, onEnter, onClose, onBlur, onClickTypeaheadToggleButton, handleTypeaheadKeys, moveFocusToLastMenuItem, parentRef, menuRef, id, type, hasClearButton, 'aria-labelledby': ariaLabelledBy, 'aria-label': ariaLabel, hasFooter, footerRef, toggleIndicator, innerRef } = _a, props = __rest(_a, [\"className\", \"children\", \"isOpen\", \"isActive\", \"isPlain\", \"isDisabled\", \"hasPlaceholderStyle\", \"variant\", \"onToggle\", \"onEnter\", \"onClose\", \"onBlur\", \"onClickTypeaheadToggleButton\", \"handleTypeaheadKeys\", \"moveFocusToLastMenuItem\", \"parentRef\", \"menuRef\", \"id\", \"type\", \"hasClearButton\", 'aria-labelledby', 'aria-label', \"hasFooter\", \"footerRef\", \"toggleIndicator\", \"innerRef\"]);\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        const isTypeahead = variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti || hasClearButton;\n        const toggleProps = {\n            id,\n            'aria-labelledby': ariaLabelledBy,\n            'aria-expanded': isOpen,\n            'aria-haspopup': (variant !== SelectVariant.checkbox && 'listbox') || null\n        };\n        return (React.createElement(React.Fragment, null,\n            !isTypeahead && (React.createElement(\"button\", Object.assign({}, props, toggleProps, { ref: this.toggle, type: type, className: css(styles.selectToggle, hasPlaceholderStyle && styles.modifiers.placeholder, isDisabled && styles.modifiers.disabled, isPlain && styles.modifiers.plain, isActive && styles.modifiers.active, className), \"aria-label\": ariaLabel, onBlur: onBlur, \n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                onClick: event => {\n                    onToggle(!isOpen, event);\n                    if (isOpen) {\n                        onClose();\n                    }\n                }, onKeyDown: this.onKeyDown, disabled: isDisabled }),\n                children,\n                React.createElement(\"span\", { className: css(styles.selectToggleArrow) }, toggleIndicator !== null && toggleIndicator !== void 0 ? toggleIndicator : React.createElement(CaretDownIcon, null)))),\n            isTypeahead && (React.createElement(\"div\", Object.assign({}, props, { ref: this.toggle, className: css(styles.selectToggle, hasPlaceholderStyle && styles.modifiers.placeholder, isDisabled && styles.modifiers.disabled, isPlain && styles.modifiers.plain, isTypeahead && styles.modifiers.typeahead, className), onBlur: onBlur, \n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                onClick: event => {\n                    if (!isDisabled) {\n                        onToggle(!isOpen, event);\n                        if (isOpen) {\n                            onClose();\n                        }\n                    }\n                }, onKeyDown: this.onKeyDown }),\n                children,\n                React.createElement(\"button\", Object.assign({}, toggleProps, { type: type, className: css(buttonStyles.button, styles.selectToggleButton, styles.modifiers.plain), \"aria-label\": ariaLabel, onClick: event => {\n                        onToggle(!isOpen, event);\n                        if (isOpen) {\n                            onClose();\n                        }\n                        onClickTypeaheadToggleButton();\n                    } }, ((variant === SelectVariant.typeahead || variant === SelectVariant.typeaheadMulti) && {\n                    tabIndex: -1\n                }), { disabled: isDisabled }), toggleIndicator !== null && toggleIndicator !== void 0 ? toggleIndicator : React.createElement(CaretDownIcon, { className: css(styles.selectToggleArrow) }))))));\n    }\n}\nSelectToggleBase.displayName = 'SelectToggle';\nSelectToggleBase.defaultProps = {\n    className: '',\n    isOpen: false,\n    isActive: false,\n    isPlain: false,\n    isDisabled: false,\n    hasPlaceholderStyle: false,\n    hasClearButton: false,\n    hasFooter: false,\n    variant: 'single',\n    'aria-labelledby': '',\n    'aria-label': '',\n    type: 'button',\n    onToggle: () => { },\n    onEnter: () => { },\n    onClose: () => { },\n    onClickTypeaheadToggleButton: () => { }\n};\nexport const SelectToggle = React.forwardRef((props, ref) => (React.createElement(SelectToggleBase, Object.assign({ innerRef: ref }, props))));\n//# sourceMappingURL=SelectToggle.js.map"]},"metadata":{},"sourceType":"module"}