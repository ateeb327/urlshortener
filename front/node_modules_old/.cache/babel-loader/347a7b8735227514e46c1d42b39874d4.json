{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/NumberInput/number-input';\nimport { css } from '@patternfly/react-styles';\nimport MinusIcon from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport PlusIcon from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { InputGroup } from '../InputGroup';\nimport { Button } from '../Button';\nimport { KeyTypes, ValidatedOptions } from '../../helpers';\nimport { TextInput } from '../TextInput';\nconst defaultKeyDownHandler = args => event => {\n  if (KeyTypes.ArrowUp === event.key && args.onPlus) {\n    event.preventDefault();\n    args.onPlus(null, args.inputName);\n  }\n  if (KeyTypes.ArrowDown === event.key && args.onMinus) {\n    event.preventDefault();\n    args.onMinus(null, args.inputName);\n  }\n};\nexport const NumberInput = _a => {\n  var {\n      value = 0,\n      className,\n      widthChars,\n      isDisabled = false,\n      validated = ValidatedOptions.default,\n      onMinus = () => {},\n      onChange,\n      onBlur,\n      onPlus = () => {},\n      unit,\n      unitPosition = 'after',\n      min,\n      max,\n      inputName,\n      inputAriaLabel = 'Input',\n      minusBtnAriaLabel = 'Minus',\n      plusBtnAriaLabel = 'Plus',\n      inputProps,\n      minusBtnProps,\n      plusBtnProps,\n      allowEmptyInput = false\n    } = _a,\n    props = __rest(_a, [\"value\", \"className\", \"widthChars\", \"isDisabled\", \"validated\", \"onMinus\", \"onChange\", \"onBlur\", \"onPlus\", \"unit\", \"unitPosition\", \"min\", \"max\", \"inputName\", \"inputAriaLabel\", \"minusBtnAriaLabel\", \"plusBtnAriaLabel\", \"inputProps\", \"minusBtnProps\", \"plusBtnProps\", \"allowEmptyInput\"]);\n  if (!allowEmptyInput) {\n    value = value || 0;\n  }\n  const numberInputUnit = React.createElement(\"div\", {\n    className: css(styles.numberInputUnit)\n  }, unit);\n  const keyDownHandler = inputProps && inputProps.onKeyDown ? inputProps.onKeyDown : defaultKeyDownHandler({\n    inputName,\n    onMinus,\n    onPlus\n  });\n  const handleBlur = event => {\n    event.target.value = Number(event.target.value).toString();\n    if (onChange) {\n      onChange(event);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.numberInput, validated !== 'default' && styles.modifiers.status, className)\n  }, widthChars && {\n    style: Object.assign({\n      '--pf-c-number-input--c-form-control--width-chars': widthChars\n    }, props.style)\n  }, props), unit && unitPosition === 'before' && numberInputUnit, React.createElement(InputGroup, null, React.createElement(Button, Object.assign({\n    variant: \"control\",\n    \"aria-label\": minusBtnAriaLabel,\n    isDisabled: isDisabled || value <= min,\n    onClick: evt => onMinus(evt, inputName)\n  }, minusBtnProps), React.createElement(\"span\", {\n    className: css(styles.numberInputIcon)\n  }, React.createElement(MinusIcon, {\n    \"aria-hidden\": \"true\"\n  }))), React.createElement(TextInput, Object.assign({}, inputProps, {\n    type: \"number\",\n    value: value,\n    name: inputName,\n    \"aria-label\": inputAriaLabel\n  }, isDisabled && {\n    isDisabled\n  }, onChange && {\n    onChange: (value, event) => onChange(event)\n  }, {\n    onBlur: handleBlur\n  }, !onChange && {\n    isReadOnly: true\n  }, {\n    onKeyDown: keyDownHandler,\n    validated: validated\n  })), React.createElement(Button, Object.assign({\n    variant: \"control\",\n    \"aria-label\": plusBtnAriaLabel,\n    isDisabled: isDisabled || value >= max,\n    onClick: evt => onPlus(evt, inputName)\n  }, plusBtnProps), React.createElement(\"span\", {\n    className: css(styles.numberInputIcon)\n  }, React.createElement(PlusIcon, {\n    \"aria-hidden\": \"true\"\n  })))), unit && unitPosition === 'after' && numberInputUnit);\n};\nNumberInput.displayName = 'NumberInput';","map":{"version":3,"sources":["../../../../src/components/NumberInput/NumberInput.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/NumberInput/number-input';\nimport { css } from '@patternfly/react-styles';\nimport MinusIcon from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport PlusIcon from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { InputGroup } from '../InputGroup';\nimport { Button } from '../Button';\nimport { KeyTypes, ValidatedOptions } from '../../helpers';\nimport { TextInput } from '../TextInput';\nconst defaultKeyDownHandler = (args) => (event) => {\n    if (KeyTypes.ArrowUp === event.key && args.onPlus) {\n        event.preventDefault();\n        args.onPlus(null, args.inputName);\n    }\n    if (KeyTypes.ArrowDown === event.key && args.onMinus) {\n        event.preventDefault();\n        args.onMinus(null, args.inputName);\n    }\n};\nexport const NumberInput = (_a) => {\n    var { value = 0, className, widthChars, isDisabled = false, validated = ValidatedOptions.default, onMinus = () => { }, onChange, onBlur, onPlus = () => { }, unit, unitPosition = 'after', min, max, inputName, inputAriaLabel = 'Input', minusBtnAriaLabel = 'Minus', plusBtnAriaLabel = 'Plus', inputProps, minusBtnProps, plusBtnProps, allowEmptyInput = false } = _a, props = __rest(_a, [\"value\", \"className\", \"widthChars\", \"isDisabled\", \"validated\", \"onMinus\", \"onChange\", \"onBlur\", \"onPlus\", \"unit\", \"unitPosition\", \"min\", \"max\", \"inputName\", \"inputAriaLabel\", \"minusBtnAriaLabel\", \"plusBtnAriaLabel\", \"inputProps\", \"minusBtnProps\", \"plusBtnProps\", \"allowEmptyInput\"]);\n    if (!allowEmptyInput) {\n        value = value || 0;\n    }\n    const numberInputUnit = React.createElement(\"div\", { className: css(styles.numberInputUnit) }, unit);\n    const keyDownHandler = inputProps && inputProps.onKeyDown ? inputProps.onKeyDown : defaultKeyDownHandler({ inputName, onMinus, onPlus });\n    const handleBlur = (event) => {\n        event.target.value = Number(event.target.value).toString();\n        if (onChange) {\n            onChange(event);\n        }\n        if (onBlur) {\n            onBlur(event);\n        }\n    };\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.numberInput, validated !== 'default' && styles.modifiers.status, className) }, (widthChars && {\n        style: Object.assign({ '--pf-c-number-input--c-form-control--width-chars': widthChars }, props.style)\n    }), props),\n        unit && unitPosition === 'before' && numberInputUnit,\n        React.createElement(InputGroup, null,\n            React.createElement(Button, Object.assign({ variant: \"control\", \"aria-label\": minusBtnAriaLabel, isDisabled: isDisabled || value <= min, onClick: evt => onMinus(evt, inputName) }, minusBtnProps),\n                React.createElement(\"span\", { className: css(styles.numberInputIcon) },\n                    React.createElement(MinusIcon, { \"aria-hidden\": \"true\" }))),\n            React.createElement(TextInput, Object.assign({}, inputProps, { type: \"number\", value: value, name: inputName, \"aria-label\": inputAriaLabel }, (isDisabled && { isDisabled }), (onChange && { onChange: (value, event) => onChange(event) }), { onBlur: handleBlur }, (!onChange && { isReadOnly: true }), { onKeyDown: keyDownHandler, validated: validated })),\n            React.createElement(Button, Object.assign({ variant: \"control\", \"aria-label\": plusBtnAriaLabel, isDisabled: isDisabled || value >= max, onClick: evt => onPlus(evt, inputName) }, plusBtnProps),\n                React.createElement(\"span\", { className: css(styles.numberInputIcon) },\n                    React.createElement(PlusIcon, { \"aria-hidden\": \"true\" })))),\n        unit && unitPosition === 'after' && numberInputUnit));\n};\nNumberInput.displayName = 'NumberInput';\n//# sourceMappingURL=NumberInput.js.map"]},"metadata":{},"sourceType":"module"}