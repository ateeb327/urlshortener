{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nimport { Tooltip } from '../Tooltip';\nexport const DataListText = _a => {\n  var {\n      children = null,\n      className = '',\n      component = 'span',\n      wrapModifier = null,\n      tooltip: tooltipProp = '',\n      onMouseEnter: onMouseEnterProp = () => {}\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"component\", \"wrapModifier\", \"tooltip\", \"onMouseEnter\"]);\n  const Component = component;\n  const [tooltip, setTooltip] = React.useState('');\n  const onMouseEnter = event => {\n    if (event.target.offsetWidth < event.target.scrollWidth) {\n      setTooltip(tooltipProp || event.target.innerHTML);\n    } else {\n      setTooltip('');\n    }\n    onMouseEnterProp(event);\n  };\n  const text = React.createElement(Component, Object.assign({\n    onMouseEnter: onMouseEnter,\n    className: css(className, wrapModifier && styles.modifiers[wrapModifier], styles.dataListText)\n  }, props), children);\n  return tooltip !== '' ? React.createElement(Tooltip, {\n    content: tooltip,\n    isVisible: true\n  }, text) : text;\n};\nDataListText.displayName = 'DataListText';","map":{"version":3,"sources":["../../../../src/components/DataList/DataListText.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,MAAM,MAAM,4DAA4D;AAC/E,SAAS,OAAO,QAAQ,YAAY;AAkBpC,OAAO,MAAM,YAAY,GAAgD,EAQrD,IAAI;MARiD;MACvE,QAAQ,GAAG,IAAI;MACf,SAAS,GAAG,EAAE;MACd,SAAS,GAAG,MAAM;MAClB,YAAY,GAAG,IAAI;MACnB,OAAO,EAAE,WAAW,GAAG,EAAE;MACzB,YAAY,EAAE,gBAAgB,GAAG,CAAA,KAAK,CAAE;IAAC,CAAA,GAAA,EAEvB;IADf,KAAK,GAAA,MAAA,CAAA,EAAA,EAP+D,CAAA,UAAA,EAAA,WAAA,EAAA,WAAA,EAAA,cAAA,EAAA,SAAA,EAAA,cAAA,CAQxE,CADS;EAER,MAAM,SAAS,GAAG,SAAgB;EAElC,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,YAAY,GAAI,KAAU,IAAI;IAClC,IAAI,KAAK,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE;MACvD,UAAU,CAAC,WAAW,IAAI,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC;KAClD,MAAM;MACL,UAAU,CAAC,EAAE,CAAC;IACf;IACD,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAM,IAAI,GACR,KAAA,CAAA,aAAA,CAAC,SAAS,EAAA,MAAA,CAAA,MAAA,CAAA;IACR,YAAY,EAAE,YAAY;IAC1B,SAAS,EAAE,GAAG,CAAC,SAAS,EAAE,YAAY,IAAI,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,MAAM,CAAC,YAAY;EAAC,CAAA,EAC1F,KAAK,CAAA,EAER,QAAQ,CAEZ;EAED,OAAO,OAAO,KAAK,EAAE,GACnB,KAAA,CAAA,aAAA,CAAC,OAAO,EAAA;IAAC,OAAO,EAAE,OAAO;IAAE,SAAS,EAAA;EAAA,CAAA,EACjC,IAAI,CACG,GAEV,IACD;AACH,CAAC;AACD,YAAY,CAAC,WAAW,GAAG,cAAc","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list';\nimport { Tooltip } from '../Tooltip';\nexport const DataListText = (_a) => {\n    var { children = null, className = '', component = 'span', wrapModifier = null, tooltip: tooltipProp = '', onMouseEnter: onMouseEnterProp = () => { } } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"wrapModifier\", \"tooltip\", \"onMouseEnter\"]);\n    const Component = component;\n    const [tooltip, setTooltip] = React.useState('');\n    const onMouseEnter = (event) => {\n        if (event.target.offsetWidth < event.target.scrollWidth) {\n            setTooltip(tooltipProp || event.target.innerHTML);\n        }\n        else {\n            setTooltip('');\n        }\n        onMouseEnterProp(event);\n    };\n    const text = (React.createElement(Component, Object.assign({ onMouseEnter: onMouseEnter, className: css(className, wrapModifier && styles.modifiers[wrapModifier], styles.dataListText) }, props), children));\n    return tooltip !== '' ? (React.createElement(Tooltip, { content: tooltip, isVisible: true }, text)) : (text);\n};\nDataListText.displayName = 'DataListText';\n//# sourceMappingURL=DataListText.js.map"]},"metadata":{},"sourceType":"module"}