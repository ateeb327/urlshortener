{"ast":null,"code":"import * as React from 'react';\nimport { HeaderCellInfoWrapper } from '../../HeaderCellInfoWrapper';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nexport const info = ({\n  tooltip,\n  tooltipProps,\n  popover,\n  popoverProps,\n  className,\n  ariaLabel\n}) => {\n  const infoObj = value => ({\n    className: styles.modifiers.help,\n    children: tooltip ? React.createElement(HeaderCellInfoWrapper, {\n      variant: \"tooltip\",\n      info: tooltip,\n      tooltipProps: tooltipProps,\n      ariaLabel: ariaLabel,\n      className: className\n    }, value) : React.createElement(HeaderCellInfoWrapper, {\n      variant: \"popover\",\n      info: popover,\n      popoverProps: popoverProps,\n      ariaLabel: ariaLabel,\n      className: className\n    }, value)\n  });\n  return infoObj;\n};","map":{"version":3,"sources":["../../../../../../src/components/Table/utils/decorators/info.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAE9B,SAAS,qBAAqB,QAAQ,6BAA6B;AAEnE,OAAO,MAAM,MAAM,qDAAqD;AAExE,OAAO,MAAM,IAAI,GAAG,CAAC;EAAE,OAAO;EAAE,YAAY;EAAE,OAAO;EAAE,YAAY;EAAE,SAAS;EAAE;AAAS,CAAc,KAAI;EACzG,MAAM,OAAO,GAAgB,KAA0B,KAAM;IAC3D,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,IAAI;IAChC,QAAQ,EAAE,OAAO,GACf,KAAA,CAAA,aAAA,CAAC,qBAAqB,EAAA;MACpB,OAAO,EAAC,SAAS;MACjB,IAAI,EAAE,OAAO;MACb,YAAY,EAAE,YAAY;MAC1B,SAAS,EAAE,SAAS;MACpB,SAAS,EAAE;IAAS,CAAA,EAEnB,KAAwB,CACH,GAExB,KAAA,CAAA,aAAA,CAAC,qBAAqB,EAAA;MACpB,OAAO,EAAC,SAAS;MACjB,IAAI,EAAE,OAAO;MACb,YAAY,EAAE,YAAY;MAC1B,SAAS,EAAE,SAAS;MACpB,SAAS,EAAE;IAAS,CAAA,EAEnB,KAAwB;GAG9B,CAAC;EAEF,OAAO,OAAO;AAChB,CAAC","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { HeaderCellInfoWrapper } from '../../HeaderCellInfoWrapper';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nexport const info = ({ tooltip, tooltipProps, popover, popoverProps, className, ariaLabel }) => {\n    const infoObj = (value) => ({\n        className: styles.modifiers.help,\n        children: tooltip ? (React.createElement(HeaderCellInfoWrapper, { variant: \"tooltip\", info: tooltip, tooltipProps: tooltipProps, ariaLabel: ariaLabel, className: className }, value)) : (React.createElement(HeaderCellInfoWrapper, { variant: \"popover\", info: popover, popoverProps: popoverProps, ariaLabel: ariaLabel, className: className }, value))\n    });\n    return infoObj;\n};\n//# sourceMappingURL=info.js.map"]},"metadata":{},"sourceType":"module"}