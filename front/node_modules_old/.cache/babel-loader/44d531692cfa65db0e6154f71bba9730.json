{"ast":null,"code":"import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { usePopper } from './thirdparty/react-popper/usePopper';\nimport { css } from '@patternfly/react-styles';\nimport { FindRefWrapper } from './FindRefWrapper';\nimport '@patternfly/react-styles/css/components/Popper/Popper.css';\nconst hash = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom',\n  'top-start': 'bottom-end',\n  'top-end': 'bottom-start',\n  'bottom-start': 'top-end',\n  'bottom-end': 'top-start',\n  'left-start': 'right-end',\n  'left-end': 'right-start',\n  'right-start': 'left-end',\n  'right-end': 'left-start'\n};\nconst getOppositePlacement = placement => placement.replace(/left|right|bottom|top|top-start|top-end|bottom-start|bottom-end|right-start|right-end|left-start|left-end/g, matched => hash[matched]);\nexport const getOpacityTransition = animationDuration => `opacity ${animationDuration}ms cubic-bezier(.54, 1.5, .38, 1.11)`;\nexport const Popper = ({\n  trigger,\n  popper,\n  popperMatchesTriggerWidth = true,\n  direction = 'down',\n  position = 'left',\n  placement,\n  appendTo = () => document.body,\n  zIndex = 9999,\n  isVisible = true,\n  positionModifiers,\n  distance = 0,\n  onMouseEnter,\n  onMouseLeave,\n  onFocus,\n  onBlur,\n  onDocumentClick,\n  onTriggerClick,\n  onTriggerEnter,\n  onPopperClick,\n  onPopperMouseEnter,\n  onPopperMouseLeave,\n  onDocumentKeyDown,\n  enableFlip = true,\n  flipBehavior = 'flip',\n  reference,\n  removeFindDomNode = false,\n  popperRef\n}) => {\n  const [triggerElement, setTriggerElement] = React.useState(null);\n  const [refElement, setRefElement] = React.useState(null);\n  const [popperElement, setPopperElement] = React.useState(null);\n  const [ready, setReady] = React.useState(false);\n  const refOrTrigger = refElement || triggerElement;\n  const onDocumentClickCallback = React.useCallback(event => onDocumentClick(event, refOrTrigger, popperElement), [isVisible, triggerElement, refElement, popperElement, onDocumentClick]);\n  React.useEffect(() => {\n    setReady(true);\n  }, []);\n  React.useEffect(() => {\n    if (reference) {\n      if (reference.current) {\n        setRefElement(reference.current);\n      } else if (typeof reference === 'function') {\n        setRefElement(reference());\n      }\n    }\n  }, [reference]);\n  React.useEffect(() => {\n    // When the popperRef is defined or the popper visiblity changes, ensure the popper element is up to date\n    if (popperRef) {\n      if (popperRef.current) {\n        setPopperElement(popperRef.current);\n      } else if (typeof popperRef === 'function') {\n        setPopperElement(popperRef());\n      }\n    }\n  }, [isVisible, popperRef]);\n  const addEventListener = (listener, element, event, capture = false) => {\n    if (listener && element) {\n      element.addEventListener(event, listener, {\n        capture\n      });\n    }\n  };\n  const removeEventListener = (listener, element, event, capture = false) => {\n    if (listener && element) {\n      element.removeEventListener(event, listener, {\n        capture\n      });\n    }\n  };\n  React.useEffect(() => {\n    addEventListener(onMouseEnter, refOrTrigger, 'mouseenter');\n    addEventListener(onMouseLeave, refOrTrigger, 'mouseleave');\n    addEventListener(onFocus, refOrTrigger, 'focus');\n    addEventListener(onBlur, refOrTrigger, 'blur');\n    addEventListener(onTriggerClick, refOrTrigger, 'click');\n    addEventListener(onTriggerEnter, refOrTrigger, 'keydown');\n    addEventListener(onPopperClick, popperElement, 'click');\n    addEventListener(onPopperMouseEnter, popperElement, 'mouseenter');\n    addEventListener(onPopperMouseLeave, popperElement, 'mouseleave');\n    onDocumentClick && addEventListener(onDocumentClickCallback, document, 'click', true);\n    addEventListener(onDocumentKeyDown, document, 'keydown', true);\n    // Trigger a Popper update when content changes.\n    const observer = new MutationObserver(() => {\n      update && update();\n    });\n    popperElement && observer.observe(popperElement, {\n      attributes: true,\n      childList: true,\n      subtree: true\n    });\n    return () => {\n      removeEventListener(onMouseEnter, refOrTrigger, 'mouseenter');\n      removeEventListener(onMouseLeave, refOrTrigger, 'mouseleave');\n      removeEventListener(onFocus, refOrTrigger, 'focus');\n      removeEventListener(onBlur, refOrTrigger, 'blur');\n      removeEventListener(onTriggerClick, refOrTrigger, 'click');\n      removeEventListener(onTriggerEnter, refOrTrigger, 'keydown');\n      removeEventListener(onPopperClick, popperElement, 'click');\n      removeEventListener(onPopperMouseEnter, popperElement, 'mouseenter');\n      removeEventListener(onPopperMouseLeave, popperElement, 'mouseleave');\n      onDocumentClick && removeEventListener(onDocumentClickCallback, document, 'click', true);\n      removeEventListener(onDocumentKeyDown, document, 'keydown', true);\n      observer.disconnect();\n    };\n  }, [triggerElement, popperElement, onMouseEnter, onMouseLeave, onFocus, onBlur, onTriggerClick, onTriggerEnter, onPopperClick, onPopperMouseEnter, onPopperMouseLeave, onDocumentClick, onDocumentKeyDown, refElement]);\n  const getPlacement = () => {\n    if (placement) {\n      return placement;\n    }\n    let convertedPlacement = direction === 'up' ? 'top' : 'bottom';\n    if (position !== 'center') {\n      convertedPlacement = `${convertedPlacement}-${position === 'right' ? 'end' : 'start'}`;\n    }\n    return convertedPlacement;\n  };\n  const getPlacementMemo = React.useMemo(getPlacement, [direction, position, placement]);\n  const getOppositePlacementMemo = React.useMemo(() => getOppositePlacement(getPlacement()), [direction, position, placement]);\n  const sameWidthMod = React.useMemo(() => ({\n    name: 'sameWidth',\n    enabled: popperMatchesTriggerWidth,\n    phase: 'beforeWrite',\n    requires: ['computeStyles'],\n    fn: ({\n      state\n    }) => {\n      state.styles.popper.width = `${state.rects.reference.width}px`;\n    },\n    effect: ({\n      state\n    }) => {\n      state.elements.popper.style.width = `${state.elements.reference.offsetWidth}px`;\n      return () => {};\n    }\n  }), [popperMatchesTriggerWidth]);\n  const {\n    styles: popperStyles,\n    attributes,\n    update,\n    forceUpdate\n  } = usePopper(refOrTrigger, popperElement, {\n    placement: getPlacementMemo,\n    modifiers: [{\n      name: 'offset',\n      options: {\n        offset: [0, distance]\n      }\n    }, {\n      name: 'preventOverflow',\n      enabled: false\n    }, {\n      // adds attribute [data-popper-reference-hidden] to the popper element which can be used to hide it using CSS\n      name: 'hide',\n      enabled: true\n    }, {\n      name: 'flip',\n      enabled: getPlacementMemo.startsWith('auto') || enableFlip,\n      options: {\n        fallbackPlacements: flipBehavior === 'flip' ? [getOppositePlacementMemo] : flipBehavior\n      }\n    }, sameWidthMod]\n  });\n  React.useEffect(() => {\n    forceUpdate && forceUpdate();\n  }, [popper]);\n  // Returns the CSS modifier class in order to place the Popper's arrow properly\n  // Depends on the position of the Popper relative to the reference element\n  const modifierFromPopperPosition = () => {\n    if (attributes && attributes.popper && attributes.popper['data-popper-placement']) {\n      const popperPlacement = attributes.popper['data-popper-placement'];\n      return positionModifiers[popperPlacement];\n    }\n    return positionModifiers.top;\n  };\n  const options = Object.assign({\n    className: css(popper.props && popper.props.className, positionModifiers && modifierFromPopperPosition()),\n    style: Object.assign(Object.assign(Object.assign({}, popper.props && popper.props.style || {}), popperStyles.popper), {\n      zIndex\n    })\n  }, attributes.popper);\n  const menuWithPopper = React.cloneElement(popper, options);\n  const getTarget = () => {\n    if (typeof appendTo === 'function') {\n      return appendTo();\n    }\n    return appendTo;\n  };\n  /**\n   * To enable strict mode, the popper must either have its reference defined via the popperRef property,\n   * or the removeFindDomNode flag must be present. Even if the reference is passed in, unlike the trigger,\n   * the popper property must still be passed.\n   * The trigger must similarly have either its reference defined via the reference property, or the\n   * removeFindDomNode flag must be present. The trigger property is not required when the reference is passed.\n   *\n   * Strict mode may be enabled by passing both reference properties to Popper, or by passing the\n   * removeFindDomNode flag with either reference property, or by solely passing the removeFindDomNode\n   * flag.\n   */\n  let popperPortal;\n  if (removeFindDomNode) {\n    // If removeFindDomNode is passed, use the removeFindDomNode method of wrapping divs\n    popperPortal = React.createElement(\"div\", {\n      style: {\n        display: 'contents'\n      },\n      ref: node => setPopperElement(node === null || node === void 0 ? void 0 : node.firstElementChild)\n    }, menuWithPopper);\n  } else if (popperRef) {\n    // If removeFindDomNode is not passed and popperRef is passed, use the popperRef method\n    popperPortal = menuWithPopper;\n  } else {\n    // If neither removeFindDomNode and popperRef exist, use the old method of FindRefWrapper\n    popperPortal = React.createElement(FindRefWrapper, {\n      onFoundRef: foundRef => setPopperElement(foundRef)\n    }, menuWithPopper);\n  }\n  return React.createElement(React.Fragment, null, !reference && trigger && React.isValidElement(trigger) && !removeFindDomNode && React.createElement(FindRefWrapper, {\n    onFoundRef: foundRef => setTriggerElement(foundRef)\n  }, trigger), !reference && trigger && React.isValidElement(trigger) && removeFindDomNode && React.createElement(\"div\", {\n    style: {\n      display: 'contents'\n    },\n    ref: node => setTriggerElement(node === null || node === void 0 ? void 0 : node.firstElementChild)\n  }, trigger), ready && isVisible && ReactDOM.createPortal(popperPortal, getTarget()));\n};\nPopper.displayName = 'Popper';","map":{"version":3,"sources":["../../../../src/helpers/Popper/Popper.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { usePopper } from './thirdparty/react-popper/usePopper';\nimport { css } from '@patternfly/react-styles';\nimport { FindRefWrapper } from './FindRefWrapper';\nimport '@patternfly/react-styles/css/components/Popper/Popper.css';\nconst hash = {\n    left: 'right',\n    right: 'left',\n    bottom: 'top',\n    top: 'bottom',\n    'top-start': 'bottom-end',\n    'top-end': 'bottom-start',\n    'bottom-start': 'top-end',\n    'bottom-end': 'top-start',\n    'left-start': 'right-end',\n    'left-end': 'right-start',\n    'right-start': 'left-end',\n    'right-end': 'left-start'\n};\nconst getOppositePlacement = (placement) => placement.replace(/left|right|bottom|top|top-start|top-end|bottom-start|bottom-end|right-start|right-end|left-start|left-end/g, (matched) => hash[matched]);\nexport const getOpacityTransition = (animationDuration) => `opacity ${animationDuration}ms cubic-bezier(.54, 1.5, .38, 1.11)`;\nexport const Popper = ({ trigger, popper, popperMatchesTriggerWidth = true, direction = 'down', position = 'left', placement, appendTo = () => document.body, zIndex = 9999, isVisible = true, positionModifiers, distance = 0, onMouseEnter, onMouseLeave, onFocus, onBlur, onDocumentClick, onTriggerClick, onTriggerEnter, onPopperClick, onPopperMouseEnter, onPopperMouseLeave, onDocumentKeyDown, enableFlip = true, flipBehavior = 'flip', reference, removeFindDomNode = false, popperRef }) => {\n    const [triggerElement, setTriggerElement] = React.useState(null);\n    const [refElement, setRefElement] = React.useState(null);\n    const [popperElement, setPopperElement] = React.useState(null);\n    const [ready, setReady] = React.useState(false);\n    const refOrTrigger = refElement || triggerElement;\n    const onDocumentClickCallback = React.useCallback((event) => onDocumentClick(event, refOrTrigger, popperElement), [isVisible, triggerElement, refElement, popperElement, onDocumentClick]);\n    React.useEffect(() => {\n        setReady(true);\n    }, []);\n    React.useEffect(() => {\n        if (reference) {\n            if (reference.current) {\n                setRefElement(reference.current);\n            }\n            else if (typeof reference === 'function') {\n                setRefElement(reference());\n            }\n        }\n    }, [reference]);\n    React.useEffect(() => {\n        // When the popperRef is defined or the popper visiblity changes, ensure the popper element is up to date\n        if (popperRef) {\n            if (popperRef.current) {\n                setPopperElement(popperRef.current);\n            }\n            else if (typeof popperRef === 'function') {\n                setPopperElement(popperRef());\n            }\n        }\n    }, [isVisible, popperRef]);\n    const addEventListener = (listener, element, event, capture = false) => {\n        if (listener && element) {\n            element.addEventListener(event, listener, { capture });\n        }\n    };\n    const removeEventListener = (listener, element, event, capture = false) => {\n        if (listener && element) {\n            element.removeEventListener(event, listener, { capture });\n        }\n    };\n    React.useEffect(() => {\n        addEventListener(onMouseEnter, refOrTrigger, 'mouseenter');\n        addEventListener(onMouseLeave, refOrTrigger, 'mouseleave');\n        addEventListener(onFocus, refOrTrigger, 'focus');\n        addEventListener(onBlur, refOrTrigger, 'blur');\n        addEventListener(onTriggerClick, refOrTrigger, 'click');\n        addEventListener(onTriggerEnter, refOrTrigger, 'keydown');\n        addEventListener(onPopperClick, popperElement, 'click');\n        addEventListener(onPopperMouseEnter, popperElement, 'mouseenter');\n        addEventListener(onPopperMouseLeave, popperElement, 'mouseleave');\n        onDocumentClick && addEventListener(onDocumentClickCallback, document, 'click', true);\n        addEventListener(onDocumentKeyDown, document, 'keydown', true);\n        // Trigger a Popper update when content changes.\n        const observer = new MutationObserver(() => {\n            update && update();\n        });\n        popperElement && observer.observe(popperElement, { attributes: true, childList: true, subtree: true });\n        return () => {\n            removeEventListener(onMouseEnter, refOrTrigger, 'mouseenter');\n            removeEventListener(onMouseLeave, refOrTrigger, 'mouseleave');\n            removeEventListener(onFocus, refOrTrigger, 'focus');\n            removeEventListener(onBlur, refOrTrigger, 'blur');\n            removeEventListener(onTriggerClick, refOrTrigger, 'click');\n            removeEventListener(onTriggerEnter, refOrTrigger, 'keydown');\n            removeEventListener(onPopperClick, popperElement, 'click');\n            removeEventListener(onPopperMouseEnter, popperElement, 'mouseenter');\n            removeEventListener(onPopperMouseLeave, popperElement, 'mouseleave');\n            onDocumentClick && removeEventListener(onDocumentClickCallback, document, 'click', true);\n            removeEventListener(onDocumentKeyDown, document, 'keydown', true);\n            observer.disconnect();\n        };\n    }, [\n        triggerElement,\n        popperElement,\n        onMouseEnter,\n        onMouseLeave,\n        onFocus,\n        onBlur,\n        onTriggerClick,\n        onTriggerEnter,\n        onPopperClick,\n        onPopperMouseEnter,\n        onPopperMouseLeave,\n        onDocumentClick,\n        onDocumentKeyDown,\n        refElement\n    ]);\n    const getPlacement = () => {\n        if (placement) {\n            return placement;\n        }\n        let convertedPlacement = direction === 'up' ? 'top' : 'bottom';\n        if (position !== 'center') {\n            convertedPlacement = `${convertedPlacement}-${position === 'right' ? 'end' : 'start'}`;\n        }\n        return convertedPlacement;\n    };\n    const getPlacementMemo = React.useMemo(getPlacement, [direction, position, placement]);\n    const getOppositePlacementMemo = React.useMemo(() => getOppositePlacement(getPlacement()), [\n        direction,\n        position,\n        placement\n    ]);\n    const sameWidthMod = React.useMemo(() => ({\n        name: 'sameWidth',\n        enabled: popperMatchesTriggerWidth,\n        phase: 'beforeWrite',\n        requires: ['computeStyles'],\n        fn: ({ state }) => {\n            state.styles.popper.width = `${state.rects.reference.width}px`;\n        },\n        effect: ({ state }) => {\n            state.elements.popper.style.width = `${state.elements.reference.offsetWidth}px`;\n            return () => { };\n        }\n    }), [popperMatchesTriggerWidth]);\n    const { styles: popperStyles, attributes, update, forceUpdate } = usePopper(refOrTrigger, popperElement, {\n        placement: getPlacementMemo,\n        modifiers: [\n            {\n                name: 'offset',\n                options: {\n                    offset: [0, distance]\n                }\n            },\n            {\n                name: 'preventOverflow',\n                enabled: false\n            },\n            {\n                // adds attribute [data-popper-reference-hidden] to the popper element which can be used to hide it using CSS\n                name: 'hide',\n                enabled: true\n            },\n            {\n                name: 'flip',\n                enabled: getPlacementMemo.startsWith('auto') || enableFlip,\n                options: {\n                    fallbackPlacements: flipBehavior === 'flip' ? [getOppositePlacementMemo] : flipBehavior\n                }\n            },\n            sameWidthMod\n        ]\n    });\n    React.useEffect(() => {\n        forceUpdate && forceUpdate();\n    }, [popper]);\n    // Returns the CSS modifier class in order to place the Popper's arrow properly\n    // Depends on the position of the Popper relative to the reference element\n    const modifierFromPopperPosition = () => {\n        if (attributes && attributes.popper && attributes.popper['data-popper-placement']) {\n            const popperPlacement = attributes.popper['data-popper-placement'];\n            return positionModifiers[popperPlacement];\n        }\n        return positionModifiers.top;\n    };\n    const options = Object.assign({ className: css(popper.props && popper.props.className, positionModifiers && modifierFromPopperPosition()), style: Object.assign(Object.assign(Object.assign({}, ((popper.props && popper.props.style) || {})), popperStyles.popper), { zIndex }) }, attributes.popper);\n    const menuWithPopper = React.cloneElement(popper, options);\n    const getTarget = () => {\n        if (typeof appendTo === 'function') {\n            return appendTo();\n        }\n        return appendTo;\n    };\n    /**\n     * To enable strict mode, the popper must either have its reference defined via the popperRef property,\n     * or the removeFindDomNode flag must be present. Even if the reference is passed in, unlike the trigger,\n     * the popper property must still be passed.\n     * The trigger must similarly have either its reference defined via the reference property, or the\n     * removeFindDomNode flag must be present. The trigger property is not required when the reference is passed.\n     *\n     * Strict mode may be enabled by passing both reference properties to Popper, or by passing the\n     * removeFindDomNode flag with either reference property, or by solely passing the removeFindDomNode\n     * flag.\n     */\n    let popperPortal;\n    if (removeFindDomNode) {\n        // If removeFindDomNode is passed, use the removeFindDomNode method of wrapping divs\n        popperPortal = (React.createElement(\"div\", { style: { display: 'contents' }, ref: node => setPopperElement(node === null || node === void 0 ? void 0 : node.firstElementChild) }, menuWithPopper));\n    }\n    else if (popperRef) {\n        // If removeFindDomNode is not passed and popperRef is passed, use the popperRef method\n        popperPortal = menuWithPopper;\n    }\n    else {\n        // If neither removeFindDomNode and popperRef exist, use the old method of FindRefWrapper\n        popperPortal = (React.createElement(FindRefWrapper, { onFoundRef: (foundRef) => setPopperElement(foundRef) }, menuWithPopper));\n    }\n    return (React.createElement(React.Fragment, null,\n        !reference && trigger && React.isValidElement(trigger) && !removeFindDomNode && (React.createElement(FindRefWrapper, { onFoundRef: (foundRef) => setTriggerElement(foundRef) }, trigger)),\n        !reference && trigger && React.isValidElement(trigger) && removeFindDomNode && (React.createElement(\"div\", { style: { display: 'contents' }, ref: node => setTriggerElement(node === null || node === void 0 ? void 0 : node.firstElementChild) }, trigger)),\n        ready && isVisible && ReactDOM.createPortal(popperPortal, getTarget())));\n};\nPopper.displayName = 'Popper';\n//# sourceMappingURL=Popper.js.map"]},"metadata":{},"sourceType":"module"}