{"ast":null,"code":"import * as React from 'react';\nimport { TextInput } from '@patternfly/react-core/dist/esm/components/TextInput';\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport formStyles from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\nexport const EditableTextCell = ({\n  value,\n  rowIndex,\n  cellIndex,\n  props,\n  handleTextInputChange,\n  inputAriaLabel,\n  isDisabled = false\n}) => React.createElement(React.Fragment, null, React.createElement(\"div\", {\n  className: inlineStyles.inlineEditValue\n}, value), React.createElement(\"div\", {\n  className: inlineStyles.inlineEditInput\n}, React.createElement(TextInput, {\n  isDisabled: isDisabled,\n  value: props.editableValue !== undefined ? props.editableValue : value,\n  validated: props.isValid !== false ? 'default' : 'error',\n  type: \"text\",\n  onChange: (newValue, event) => {\n    handleTextInputChange(newValue, event, rowIndex, cellIndex);\n  },\n  \"aria-label\": inputAriaLabel\n}), React.createElement(\"div\", {\n  className: css(formStyles.formHelperText, formStyles.modifiers.error),\n  \"aria-live\": \"polite\"\n}, props.errorText)));\nEditableTextCell.displayName = 'EditableTextCell';","map":{"version":3,"sources":["../../../../src/components/Table/EditableTextCell.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,SAAS,QAAQ,sDAAsD;AAChF,OAAO,YAAY,MAAM,gEAAgE;AACzF,OAAO,UAAU,MAAM,mDAAmD;AAC1E,SAAS,GAAG,QAAQ,0BAA0B;AAyB9C,OAAO,MAAM,gBAAgB,GAA+C,CAAC;EAC3E,KAAK;EACL,QAAQ;EACR,SAAS;EACT,KAAK;EACL,qBAAqB;EACrB,cAAc;EACd,UAAU,GAAG;AAAK,CACA,KAClB,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAQ,EAAA,IAAA,EACb,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;EAAK,SAAS,EAAE,YAAY,CAAC;AAAe,CAAA,EAAG,KAAK,CAAO,EAC3D,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;EAAK,SAAS,EAAE,YAAY,CAAC;AAAe,CAAA,EAC1C,KAAA,CAAA,aAAA,CAAC,SAAS,EAAA;EACR,UAAU,EAAE,UAAU;EACtB,KAAK,EAAE,KAAK,CAAC,aAAa,KAAK,SAAS,GAAG,KAAK,CAAC,aAAa,GAAG,KAAK;EACtE,SAAS,EAAE,KAAK,CAAC,OAAO,KAAK,KAAK,GAAG,SAAS,GAAG,OAAO;EACxD,IAAI,EAAC,MAAM;EACX,QAAQ,EAAE,CAAC,QAAQ,EAAE,KAAK,KAAI;IAC5B,qBAAqB,CAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,CAAC;EAC7D,CAAC;EAAA,YAAA,EACW;AAAc,CAAA,CAC1B,EACF,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;EAAK,SAAS,EAAE,GAAG,CAAC,UAAU,CAAC,cAAc,EAAE,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC;EAAA,WAAA,EAAY;AAAQ,CAAA,EAC3F,KAAK,CAAC,SAAS,CACZ,CACF,CAET;AACD,gBAAgB,CAAC,WAAW,GAAG,kBAAkB","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { TextInput } from '@patternfly/react-core/dist/esm/components/TextInput';\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport formStyles from '@patternfly/react-styles/css/components/Form/form';\nimport { css } from '@patternfly/react-styles';\nexport const EditableTextCell = ({ value, rowIndex, cellIndex, props, handleTextInputChange, inputAriaLabel, isDisabled = false }) => (React.createElement(React.Fragment, null,\n    React.createElement(\"div\", { className: inlineStyles.inlineEditValue }, value),\n    React.createElement(\"div\", { className: inlineStyles.inlineEditInput },\n        React.createElement(TextInput, { isDisabled: isDisabled, value: props.editableValue !== undefined ? props.editableValue : value, validated: props.isValid !== false ? 'default' : 'error', type: \"text\", onChange: (newValue, event) => {\n                handleTextInputChange(newValue, event, rowIndex, cellIndex);\n            }, \"aria-label\": inputAriaLabel }),\n        React.createElement(\"div\", { className: css(formStyles.formHelperText, formStyles.modifiers.error), \"aria-live\": \"polite\" }, props.errorText))));\nEditableTextCell.displayName = 'EditableTextCell';\n//# sourceMappingURL=EditableTextCell.js.map"]},"metadata":{},"sourceType":"module"}