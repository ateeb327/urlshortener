{"ast":null,"code":"import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { SortColumn, SortByDirection } from '../../SortColumn';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nexport const sortableFavorites = sort => () => sortable(React.createElement(StarIcon, {\n  \"aria-hidden\": true\n}), {\n  columnIndex: sort.columnIndex,\n  className: styles.modifiers.favorite,\n  ariaLabel: 'Sort favorites',\n  column: {\n    extraParams: {\n      sortBy: sort.sortBy,\n      onSort: sort === null || sort === void 0 ? void 0 : sort.onSort\n    }\n  }\n});\nexport const sortable = (label, {\n  columnIndex,\n  column,\n  property,\n  className,\n  ariaLabel\n}) => {\n  const {\n    extraParams: {\n      sortBy,\n      onSort\n    }\n  } = column;\n  const extraData = {\n    columnIndex,\n    column,\n    property\n  };\n  const isSortedBy = sortBy && columnIndex === sortBy.index;\n  /**\n   * @param {React.MouseEvent} event - React mouse event\n   */\n  function sortClicked(event) {\n    let reversedDirection;\n    if (!isSortedBy) {\n      reversedDirection = sortBy.defaultDirection ? sortBy.defaultDirection : SortByDirection.asc;\n    } else {\n      reversedDirection = sortBy.direction === SortByDirection.asc ? SortByDirection.desc : SortByDirection.asc;\n    }\n    // tslint:disable-next-line:no-unused-expression\n    onSort && onSort(event, columnIndex, reversedDirection, extraData);\n  }\n  return {\n    className: css(styles.tableSort, isSortedBy && styles.modifiers.selected, className),\n    'aria-sort': isSortedBy ? `${sortBy.direction}ending` : 'none',\n    children: React.createElement(SortColumn, {\n      isSortedBy: isSortedBy,\n      sortDirection: isSortedBy ? sortBy.direction : '',\n      onSort: sortClicked,\n      \"aria-label\": ariaLabel\n    }, label)\n  };\n};","map":{"version":3,"sources":["../../../../../../src/components/Table/utils/decorators/sortable.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,MAAM,MAAM,qDAAqD;AAExE,SAAS,UAAU,EAAE,eAAe,QAAQ,kBAAkB;AAC9D,OAAO,QAAQ,MAAM,kDAAkD;AAEvE,OAAO,MAAM,iBAAiB,GAAI,IAAS,IAAK,MAC9C,QAAQ,CAAC,KAAA,CAAA,aAAA,CAAC,QAAQ,EAAA;EAAA,aAAA,EAAA;AAAA,CAAA,CAAe,EAAE;EACjC,WAAW,EAAE,IAAI,CAAC,WAAW;EAC7B,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,QAAQ;EACpC,SAAS,EAAE,gBAAgB;EAC3B,MAAM,EAAE;IACN,WAAW,EAAE;MACX,MAAM,EAAE,IAAI,CAAC,MAAM;MACnB,MAAM,EAAE,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE;IACf;EACF;CACF,CAAC;AAEJ,OAAO,MAAM,QAAQ,GAAe,CAClC,KAA0B,EAC1B;EAAE,WAAW;EAAE,MAAM;EAAE,QAAQ;EAAE,SAAS;EAAE;AAAS,CAAU,KAC7D;EACF,MAAM;IACJ,WAAW,EAAE;MAAE,MAAM;MAAE;IAAM;EAAE,CAChC,GAAG,MAAM;EAEV,MAAM,SAAS,GAAG;IAChB,WAAW;IACX,MAAM;IACN;GACD;EAED,MAAM,UAAU,GAAG,MAAM,IAAI,WAAW,KAAK,MAAM,CAAC,KAAK;EACzD;;AAEG;EACH,SAAS,WAAW,CAAC,KAAuB,EAAA;IAC1C,IAAI,iBAAkC;IACtC,IAAI,CAAC,UAAU,EAAE;MACf,iBAAiB,GAAG,MAAM,CAAC,gBAAgB,GAAI,MAAM,CAAC,gBAAoC,GAAG,eAAe,CAAC,GAAG;KACjH,MAAM;MACL,iBAAiB,GAAG,MAAM,CAAC,SAAS,KAAK,eAAe,CAAC,GAAG,GAAG,eAAe,CAAC,IAAI,GAAG,eAAe,CAAC,GAAG;IAC1G;IACD;IACA,MAAM,IAAI,MAAM,CAAC,KAAK,EAAE,WAAW,EAAE,iBAAiB,EAAE,SAAS,CAAC;EACpE;EAEA,OAAO;IACL,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,UAAU,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC;IACpF,WAAW,EAAE,UAAU,GAAG,GAAG,MAAM,CAAC,SAAS,QAAQ,GAAG,MAAM;IAC9D,QAAQ,EACN,KAAA,CAAA,aAAA,CAAC,UAAU,EAAA;MACT,UAAU,EAAE,UAAU;MACtB,aAAa,EAAE,UAAU,GAAG,MAAM,CAAC,SAAS,GAAG,EAAE;MACjD,MAAM,EAAE,WAAW;MAAA,YAAA,EACP;IAAS,CAAA,EAEpB,KAAwB;GAG9B;AACH,CAAC","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { SortColumn, SortByDirection } from '../../SortColumn';\nimport StarIcon from '@patternfly/react-icons/dist/esm/icons/star-icon';\nexport const sortableFavorites = (sort) => () => sortable(React.createElement(StarIcon, { \"aria-hidden\": true }), {\n    columnIndex: sort.columnIndex,\n    className: styles.modifiers.favorite,\n    ariaLabel: 'Sort favorites',\n    column: {\n        extraParams: {\n            sortBy: sort.sortBy,\n            onSort: sort === null || sort === void 0 ? void 0 : sort.onSort\n        }\n    }\n});\nexport const sortable = (label, { columnIndex, column, property, className, ariaLabel }) => {\n    const { extraParams: { sortBy, onSort } } = column;\n    const extraData = {\n        columnIndex,\n        column,\n        property\n    };\n    const isSortedBy = sortBy && columnIndex === sortBy.index;\n    /**\n     * @param {React.MouseEvent} event - React mouse event\n     */\n    function sortClicked(event) {\n        let reversedDirection;\n        if (!isSortedBy) {\n            reversedDirection = sortBy.defaultDirection ? sortBy.defaultDirection : SortByDirection.asc;\n        }\n        else {\n            reversedDirection = sortBy.direction === SortByDirection.asc ? SortByDirection.desc : SortByDirection.asc;\n        }\n        // tslint:disable-next-line:no-unused-expression\n        onSort && onSort(event, columnIndex, reversedDirection, extraData);\n    }\n    return {\n        className: css(styles.tableSort, isSortedBy && styles.modifiers.selected, className),\n        'aria-sort': isSortedBy ? `${sortBy.direction}ending` : 'none',\n        children: (React.createElement(SortColumn, { isSortedBy: isSortedBy, sortDirection: isSortedBy ? sortBy.direction : '', onSort: sortClicked, \"aria-label\": ariaLabel }, label))\n    };\n};\n//# sourceMappingURL=sortable.js.map"]},"metadata":{},"sourceType":"module"}