{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport stylesTreeView from '@patternfly/react-styles/css/components/Table/table-tree-view';\nimport { Tr } from '../TableComposable';\nexport const TreeRowWrapper = _a => {\n  var {\n      className,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      rowProps,\n      row\n    } = _a,\n    props = __rest(_a, [\"className\", \"rowProps\", \"row\"]);\n  const {\n    'aria-level': level,\n    'aria-posinset': posinset,\n    'aria-setsize': setsize,\n    isExpanded,\n    isDetailsExpanded,\n    isHidden\n  } = row.props;\n  return React.createElement(Tr, Object.assign({\n    \"aria-level\": level,\n    \"aria-posinset\": posinset,\n    \"aria-setsize\": setsize,\n    \"aria-expanded\": !!isExpanded,\n    isHidden: isHidden,\n    className: css(className, isExpanded && styles.modifiers.expanded, isDetailsExpanded && stylesTreeView.modifiers.treeViewDetailsExpanded)\n  }, props));\n};\nTreeRowWrapper.displayName = 'TreeRowWrapper';","map":{"version":3,"sources":["../../../../src/components/Table/TreeRowWrapper.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,MAAM,MAAM,qDAAqD;AACxE,OAAO,cAAc,MAAM,+DAA+D;AAE1F,SAAS,EAAE,QAAQ,oBAAoB;AAEvC,OAAO,MAAM,cAAc,GAA8C,EAMvD,IAAI;MANmD;MACvE,SAAS;MACT;MACA,QAAQ;MACR;IAAG,CAAA,GAAA,EAEa;IADb,KAAK,GAAA,MAAA,CAAA,EAAA,EAL+D,CAAA,WAAA,EAAA,UAAA,EAAA,KAAA,CAMxE,CADS;EAER,MAAM;IACJ,YAAY,EAAE,KAAK;IACnB,eAAe,EAAE,QAAQ;IACzB,cAAc,EAAE,OAAO;IACvB,UAAU;IACV,iBAAiB;IACjB;EAAQ,CACT,GAAG,GAAG,CAAC,KAAK;EACb,OACE,KAAA,CAAA,aAAA,CAAC,EAAE,EAAA,MAAA,CAAA,MAAA,CAAA;IAAA,YAAA,EACW,KAAK;IAAA,eAAA,EACF,QAAQ;IAAA,cAAA,EACT,OAAO;IAAA,eAAA,EACN,CAAC,CAAC,UAAU;IAC3B,QAAQ,EAAE,QAAQ;IAClB,SAAS,EAAE,GAAG,CACZ,SAAS,EACT,UAAU,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,EACvC,iBAAiB,IAAI,cAAc,CAAC,SAAS,CAAC,uBAAuB;EACtE,CAAA,EACG,KAAK,CAAA,CACT;AAEN,CAAC;AACD,cAAc,CAAC,WAAW,GAAG,gBAAgB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport stylesTreeView from '@patternfly/react-styles/css/components/Table/table-tree-view';\nimport { Tr } from '../TableComposable';\nexport const TreeRowWrapper = (_a) => {\n    var { className, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    rowProps, row } = _a, props = __rest(_a, [\"className\", \"rowProps\", \"row\"]);\n    const { 'aria-level': level, 'aria-posinset': posinset, 'aria-setsize': setsize, isExpanded, isDetailsExpanded, isHidden } = row.props;\n    return (React.createElement(Tr, Object.assign({ \"aria-level\": level, \"aria-posinset\": posinset, \"aria-setsize\": setsize, \"aria-expanded\": !!isExpanded, isHidden: isHidden, className: css(className, isExpanded && styles.modifiers.expanded, isDetailsExpanded && stylesTreeView.modifiers.treeViewDetailsExpanded) }, props)));\n};\nTreeRowWrapper.displayName = 'TreeRowWrapper';\n//# sourceMappingURL=TreeRowWrapper.js.map"]},"metadata":{},"sourceType":"module"}