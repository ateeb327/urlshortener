{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\nexport const BreadcrumbHeading = _a => {\n  var {\n      children = null,\n      className = '',\n      to = undefined,\n      target = undefined,\n      component = 'a',\n      showDivider\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"to\", \"target\", \"component\", \"showDivider\"]);\n  const Component = component;\n  return React.createElement(\"li\", Object.assign({}, props, {\n    className: css(styles.breadcrumbItem, className)\n  }), showDivider && React.createElement(\"span\", {\n    className: styles.breadcrumbItemDivider\n  }, React.createElement(AngleRightIcon, null)), React.createElement(\"h1\", {\n    className: styles.breadcrumbHeading\n  }, !to && component === 'button' && React.createElement(\"button\", {\n    className: css(styles.breadcrumbLink, styles.modifiers.current),\n    \"aria-current\": true,\n    type: \"button\"\n  }, children), to && React.createElement(Component, {\n    href: to,\n    target: target,\n    className: css(styles.breadcrumbLink, styles.modifiers.current),\n    \"aria-current\": \"page\"\n  }, children), !to && component !== 'button' && React.createElement(React.Fragment, null, children)));\n};\nBreadcrumbHeading.displayName = 'BreadcrumbHeading';","map":{"version":3,"sources":["../../../../src/components/Breadcrumb/BreadcrumbHeading.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,OAAO,cAAc,MAAM,yDAAyD;AACpF,OAAO,MAAM,MAAM,+DAA+D;AAClF,SAAS,GAAG,QAAQ,0BAA0B;AAiB9C,OAAO,MAAM,iBAAiB,GAAqD,EAQ1D,IAAI;MARsD;MACjF,QAAQ,GAAG,IAAI;MACf,SAAS,GAAG,EAAE;MACd,EAAE,GAAG,SAAS;MACd,MAAM,GAAG,SAAS;MAClB,SAAS,GAAG,GAAG;MACf;IAAW,CAAA,GAAA,EAEY;IADpB,KAAK,GAAA,MAAA,CAAA,EAAA,EAPyE,CAAA,UAAA,EAAA,WAAA,EAAA,IAAA,EAAA,QAAA,EAAA,WAAA,EAAA,aAAA,CAQlF,CADS;EAER,MAAM,SAAS,GAAG,SAAgB;EAClC,OACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAQ,KAAK,EAAA;IAAE,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,cAAc,EAAE,SAAS;EAAC,CAAA,CAAA,EAC5D,WAAW,IACV,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAE,MAAM,CAAC;EAAqB,CAAA,EAC3C,KAAA,CAAA,aAAA,CAAC,cAAc,EAAA,IAAA,CAAG,CAErB,EACD,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;IAAI,SAAS,EAAE,MAAM,CAAC;EAAiB,CAAA,EACpC,CAAC,EAAE,IAAI,SAAS,KAAK,QAAQ,IAC5B,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;IAAQ,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC;IAAA,cAAA,EAAA,IAAA;IAAe,IAAI,EAAC;EAAQ,CAAA,EAChG,QAAQ,CAEZ,EACA,EAAE,IACD,KAAA,CAAA,aAAA,CAAC,SAAS,EAAA;IACR,IAAI,EAAE,EAAE;IACR,MAAM,EAAE,MAAM;IACd,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC;IAAA,cAAA,EAClD;EAAM,CAAA,EAElB,QAAQ,CAEZ,EACA,CAAC,EAAE,IAAI,SAAS,KAAK,QAAQ,IAAI,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAQ,EAAA,IAAA,EAAE,QAAQ,CAAkB,CAC1E,CACF;AAET,CAAC;AACD,iBAAiB,CAAC,WAAW,GAAG,mBAAmB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\nexport const BreadcrumbHeading = (_a) => {\n    var { children = null, className = '', to = undefined, target = undefined, component = 'a', showDivider } = _a, props = __rest(_a, [\"children\", \"className\", \"to\", \"target\", \"component\", \"showDivider\"]);\n    const Component = component;\n    return (React.createElement(\"li\", Object.assign({}, props, { className: css(styles.breadcrumbItem, className) }),\n        showDivider && (React.createElement(\"span\", { className: styles.breadcrumbItemDivider },\n            React.createElement(AngleRightIcon, null))),\n        React.createElement(\"h1\", { className: styles.breadcrumbHeading },\n            !to && component === 'button' && (React.createElement(\"button\", { className: css(styles.breadcrumbLink, styles.modifiers.current), \"aria-current\": true, type: \"button\" }, children)),\n            to && (React.createElement(Component, { href: to, target: target, className: css(styles.breadcrumbLink, styles.modifiers.current), \"aria-current\": \"page\" }, children)),\n            !to && component !== 'button' && React.createElement(React.Fragment, null, children))));\n};\nBreadcrumbHeading.displayName = 'BreadcrumbHeading';\n//# sourceMappingURL=BreadcrumbHeading.js.map"]},"metadata":{},"sourceType":"module"}