{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { InternalFormFieldGroup } from './InternalFormFieldGroup';\nexport const FormFieldGroupExpandable = _a => {\n  var {\n      children,\n      className,\n      header,\n      isExpanded = false,\n      toggleAriaLabel\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"header\", \"isExpanded\", \"toggleAriaLabel\"]);\n  const [localIsExpanded, setIsExpanded] = useState(isExpanded);\n  return React.createElement(InternalFormFieldGroup, Object.assign({\n    className: className,\n    header: header,\n    isExpandable: true,\n    isExpanded: localIsExpanded,\n    toggleAriaLabel: toggleAriaLabel,\n    onToggle: () => setIsExpanded(!localIsExpanded)\n  }, props), children);\n};\nFormFieldGroupExpandable.displayName = 'FormFieldGroupExpandable';","map":{"version":3,"sources":["../../../../src/components/Form/FormFieldGroupExpandable.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,QAAQ,QAAQ,OAAO;AAChC,SAAS,sBAAsB,QAAQ,0BAA0B;AAejE,OAAO,MAAM,wBAAwB,GAA4D,EAOjE,IAAI;MAP6D;MAC/F,QAAQ;MACR,SAAS;MACT,MAAM;MACN,UAAU,GAAG,KAAK;MAClB;IAAe,CAAA,GAAA,EAEe;IAD3B,KAAK,GAAA,MAAA,CAAA,EAAA,EANuF,CAAA,UAAA,EAAA,WAAA,EAAA,QAAA,EAAA,YAAA,EAAA,iBAAA,CAOhG,CADS;EAER,MAAM,CAAC,eAAe,EAAE,aAAa,CAAC,GAAG,QAAQ,CAAC,UAAU,CAAC;EAE7D,OACE,KAAA,CAAA,aAAA,CAAC,sBAAsB,EAAA,MAAA,CAAA,MAAA,CAAA;IACrB,SAAS,EAAE,SAAS;IACpB,MAAM,EAAE,MAAM;IACd,YAAY,EAAA,IAAA;IACZ,UAAU,EAAE,eAAe;IAC3B,eAAe,EAAE,eAAe;IAChC,QAAQ,EAAE,CAAA,KAAM,aAAa,CAAC,CAAC,eAAe;EAAC,CAAA,EAC3C,KAAK,CAAA,EAER,QAAQ,CACc;AAE7B,CAAC;AACD,wBAAwB,CAAC,WAAW,GAAG,0BAA0B","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { InternalFormFieldGroup } from './InternalFormFieldGroup';\nexport const FormFieldGroupExpandable = (_a) => {\n    var { children, className, header, isExpanded = false, toggleAriaLabel } = _a, props = __rest(_a, [\"children\", \"className\", \"header\", \"isExpanded\", \"toggleAriaLabel\"]);\n    const [localIsExpanded, setIsExpanded] = useState(isExpanded);\n    return (React.createElement(InternalFormFieldGroup, Object.assign({ className: className, header: header, isExpandable: true, isExpanded: localIsExpanded, toggleAriaLabel: toggleAriaLabel, onToggle: () => setIsExpanded(!localIsExpanded) }, props), children));\n};\nFormFieldGroupExpandable.displayName = 'FormFieldGroupExpandable';\n//# sourceMappingURL=FormFieldGroupExpandable.js.map"]},"metadata":{},"sourceType":"module"}