{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AlertGroup/alert-group';\nexport const AlertGroupInline = _a => {\n  var {\n      className,\n      children,\n      isToast,\n      isLiveRegion,\n      onOverflowClick,\n      overflowMessage\n    } = _a,\n    rest = __rest(_a, [\"className\", \"children\", \"isToast\", \"isLiveRegion\", \"onOverflowClick\", \"overflowMessage\"]);\n  return React.createElement(\"ul\", Object.assign({\n    \"aria-live\": isLiveRegion ? 'polite' : null,\n    \"aria-atomic\": isLiveRegion ? false : null,\n    className: css(styles.alertGroup, className, isToast ? styles.modifiers.toast : '')\n  }, rest), React.Children.toArray(children).map((alert, index) => {\n    var _a;\n    return React.createElement(\"li\", {\n      key: ((_a = alert.props) === null || _a === void 0 ? void 0 : _a.id) || index\n    }, alert);\n  }), overflowMessage && React.createElement(\"li\", null, React.createElement(\"button\", {\n    onClick: onOverflowClick,\n    className: css(styles.alertGroupOverflowButton)\n  }, overflowMessage)));\n};\nAlertGroupInline.displayName = 'AlertGroupInline';","map":{"version":3,"sources":["../../../../src/components/AlertGroup/AlertGroupInline.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,MAAM,MAAM,gEAAgE;AAInF,OAAO,MAAM,gBAAgB,GAA8C,EAQzD,IAAI;MARqD;MACzE,SAAS;MACT,QAAQ;MACR,OAAO;MACP,YAAY;MACZ,eAAe;MACf;IAAe,CAAA,GAAA,EAEC;IADb,IAAI,GAAA,MAAA,CAAA,EAAA,EAPkE,CAAA,WAAA,EAAA,UAAA,EAAA,SAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,iBAAA,CAQ1E,CADQ;EACc,OACrB,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,MAAA,CAAA,MAAA,CAAA;IAAA,WAAA,EACa,YAAY,GAAG,QAAQ,GAAG,IAAI;IAAA,aAAA,EAC5B,YAAY,GAAG,KAAK,GAAG,IAAI;IACxC,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,SAAS,EAAE,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE;EAAC,CAAA,EAC/E,IAAI,CAAA,EAEP,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,KAAI;;IAAC,OACtD,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;MAAI,GAAG,EAAE,CAAA,CAAA,EAAA,GAAC,KAAwC,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,EAAE,KAAI;IAAK,CAAA,EAAG,KAAK,CAAM;GACpF,CAAC,EACD,eAAe,IACd,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;IAAQ,OAAO,EAAE,eAAe;IAAE,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,wBAAwB;EAAC,CAAA,EAC9E,eAAe,CACT,CAEZ,CACE;CACN;AACD,gBAAgB,CAAC,WAAW,GAAG,kBAAkB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AlertGroup/alert-group';\nexport const AlertGroupInline = (_a) => {\n    var { className, children, isToast, isLiveRegion, onOverflowClick, overflowMessage } = _a, rest = __rest(_a, [\"className\", \"children\", \"isToast\", \"isLiveRegion\", \"onOverflowClick\", \"overflowMessage\"]);\n    return (React.createElement(\"ul\", Object.assign({ \"aria-live\": isLiveRegion ? 'polite' : null, \"aria-atomic\": isLiveRegion ? false : null, className: css(styles.alertGroup, className, isToast ? styles.modifiers.toast : '') }, rest),\n        React.Children.toArray(children).map((alert, index) => {\n            var _a;\n            return (React.createElement(\"li\", { key: ((_a = alert.props) === null || _a === void 0 ? void 0 : _a.id) || index }, alert));\n        }),\n        overflowMessage && (React.createElement(\"li\", null,\n            React.createElement(\"button\", { onClick: onOverflowClick, className: css(styles.alertGroupOverflowButton) }, overflowMessage)))));\n};\nAlertGroupInline.displayName = 'AlertGroupInline';\n//# sourceMappingURL=AlertGroupInline.js.map"]},"metadata":{},"sourceType":"module"}