{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport { Toggle } from './Toggle';\nimport { Badge } from '../Badge';\nexport const BadgeToggle = _a => {\n  var {\n      id = '',\n      children = null,\n      badgeProps = {\n        isRead: true\n      },\n      className = '',\n      isOpen = false,\n      'aria-label': ariaLabel = 'Actions',\n      parentRef = null,\n      getMenuRef = null,\n      isActive = false,\n      isPlain = null,\n      isDisabled = false,\n      bubbleEvent = false,\n      onToggle = () => undefined,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      ref\n    } = _a,\n    // Types of Ref are different for React.FunctionComponent vs React.Component\n    props = __rest(_a, [\"id\", \"children\", \"badgeProps\", \"className\", \"isOpen\", 'aria-label', \"parentRef\", \"getMenuRef\", \"isActive\", \"isPlain\", \"isDisabled\", \"bubbleEvent\", \"onToggle\", \"ref\"]);\n  return React.createElement(Toggle, Object.assign({\n    id: id,\n    className: className,\n    isOpen: isOpen,\n    \"aria-label\": ariaLabel,\n    parentRef: parentRef,\n    getMenuRef: getMenuRef,\n    isActive: isActive,\n    isPlain: isPlain || true,\n    isDisabled: isDisabled,\n    onToggle: onToggle,\n    bubbleEvent: bubbleEvent\n  }, props), React.createElement(Badge, Object.assign({}, badgeProps), children, React.createElement(\"span\", {\n    className: css(styles.dropdownToggleIcon)\n  }, React.createElement(CaretDownIcon, null))));\n};\nBadgeToggle.displayName = 'BadgeToggle';","map":{"version":3,"sources":["../../../../src/components/Dropdown/BadgeToggle.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,MAAM,MAAM,2DAA2D;AAE9E,OAAO,aAAa,MAAM,wDAAwD;AAClF,SAAS,MAAM,QAAQ,UAAU;AACjC,SAAS,KAAK,QAAoB,UAAU;AAiC5C,OAAO,MAAM,WAAW,GAA+C,EAiBpD,IAAI;MAjBgD;MACrE,EAAE,GAAG,EAAE;MACP,QAAQ,GAAG,IAAI;MACf,UAAU,GAAG;QAAE,MAAM,EAAE;MAAI,CAAE;MAC7B,SAAS,GAAG,EAAE;MACd,MAAM,GAAG,KAAK;MACd,YAAY,EAAE,SAAS,GAAG,SAAS;MACnC,SAAS,GAAG,IAAI;MAChB,UAAU,GAAG,IAAI;MACjB,QAAQ,GAAG,KAAK;MAChB,OAAO,GAAG,IAAI;MACd,UAAU,GAAG,KAAK;MAClB,WAAW,GAAG,KAAK;MACnB,QAAQ,GAAG,CAAA,KAAM,SAAiB;MAClC;MACA;IAAG,CAAA,GAAA,EAEc;IAFZ;IACF,KAAK,GAAA,MAAA,CAAA,EAAA,EAhB6D,CAAA,IAAA,EAAA,UAAA,EAAA,YAAA,EAAA,WAAA,EAAA,QAAA,EAAA,YAAA,EAAA,WAAA,EAAA,YAAA,EAAA,UAAA,EAAA,SAAA,EAAA,YAAA,EAAA,aAAA,EAAA,UAAA,EAAA,KAAA,CAiBtE,CADS;EACc,OACtB,KAAA,CAAA,aAAA,CAAC,MAAM,EAAA,MAAA,CAAA,MAAA,CAAA;IACL,EAAE,EAAE,EAAE;IACN,SAAS,EAAE,SAAS;IACpB,MAAM,EAAE,MAAM;IAAA,YAAA,EACF,SAAS;IACrB,SAAS,EAAE,SAAS;IACpB,UAAU,EAAE,UAAU;IACtB,QAAQ,EAAE,QAAQ;IAClB,OAAO,EAAE,OAAO,IAAI,IAAI;IACxB,UAAU,EAAE,UAAU;IACtB,QAAQ,EAAE,QAAQ;IAClB,WAAW,EAAE;EAAW,CAAA,EACpB,KAAK,CAAA,EAET,KAAA,CAAA,aAAA,CAAC,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAK,UAAU,CAAA,EAClB,QAAQ,EACT,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,kBAAkB;EAAC,CAAA,EAC7C,KAAA,CAAA,aAAA,CAAC,aAAa,EAAA,IAAA,CAAG,CACZ,CACD,CACD;CACV;AACD,WAAW,CAAC,WAAW,GAAG,aAAa","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport { Toggle } from './Toggle';\nimport { Badge } from '../Badge';\nexport const BadgeToggle = (_a) => {\n    var { id = '', children = null, badgeProps = { isRead: true }, className = '', isOpen = false, 'aria-label': ariaLabel = 'Actions', parentRef = null, getMenuRef = null, isActive = false, isPlain = null, isDisabled = false, bubbleEvent = false, onToggle = () => undefined, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref } = _a, // Types of Ref are different for React.FunctionComponent vs React.Component\n    props = __rest(_a, [\"id\", \"children\", \"badgeProps\", \"className\", \"isOpen\", 'aria-label', \"parentRef\", \"getMenuRef\", \"isActive\", \"isPlain\", \"isDisabled\", \"bubbleEvent\", \"onToggle\", \"ref\"]);\n    return (React.createElement(Toggle, Object.assign({ id: id, className: className, isOpen: isOpen, \"aria-label\": ariaLabel, parentRef: parentRef, getMenuRef: getMenuRef, isActive: isActive, isPlain: isPlain || true, isDisabled: isDisabled, onToggle: onToggle, bubbleEvent: bubbleEvent }, props),\n        React.createElement(Badge, Object.assign({}, badgeProps),\n            children,\n            React.createElement(\"span\", { className: css(styles.dropdownToggleIcon) },\n                React.createElement(CaretDownIcon, null)))));\n};\nBadgeToggle.displayName = 'BadgeToggle';\n//# sourceMappingURL=BadgeToggle.js.map"]},"metadata":{},"sourceType":"module"}