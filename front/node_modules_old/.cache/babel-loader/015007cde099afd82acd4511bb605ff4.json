{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { ToggleTemplate } from './ToggleTemplate';\nimport styles from '@patternfly/react-styles/css/components/Pagination/pagination';\nimport { css } from '@patternfly/react-styles';\nimport { fillTemplate } from '../../helpers';\nimport { Navigation } from './Navigation';\nimport { PaginationOptionsMenu } from './PaginationOptionsMenu';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport widthChars from '@patternfly/react-tokens/dist/esm/c_pagination__nav_page_select_c_form_control_width_chars';\nexport var PaginationVariant;\n(function (PaginationVariant) {\n  PaginationVariant[\"bottom\"] = \"bottom\";\n  PaginationVariant[\"top\"] = \"top\";\n})(PaginationVariant || (PaginationVariant = {}));\nconst defaultPerPageOptions = [{\n  title: '10',\n  value: 10\n}, {\n  title: '20',\n  value: 20\n}, {\n  title: '50',\n  value: 50\n}, {\n  title: '100',\n  value: 100\n}];\nconst handleInputWidth = (lastPage, node) => {\n  if (!node) {\n    return;\n  }\n  const len = String(lastPage).length;\n  if (len >= 3) {\n    node.style.setProperty(widthChars.name, `${len}`);\n  } else {\n    node.style.setProperty(widthChars.name, '2');\n  }\n};\nexport class Pagination extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.paginationRef = React.createRef();\n    this.state = {\n      ouiaStateId: getDefaultOUIAId(Pagination.displayName, this.props.variant)\n    };\n  }\n  getLastPage() {\n    const {\n      itemCount,\n      perPage,\n      page\n    } = this.props;\n    // when itemCount is not known let's set lastPage as page+1 as we don't know the total count\n    return itemCount || itemCount === 0 ? Math.ceil(itemCount / perPage) || 0 : page + 1;\n  }\n  componentDidMount() {\n    const node = this.paginationRef.current;\n    handleInputWidth(this.getLastPage(), node);\n  }\n  componentDidUpdate(prevProps) {\n    const node = this.paginationRef.current;\n    if (prevProps.perPage !== this.props.perPage || prevProps.itemCount !== this.props.itemCount) {\n      handleInputWidth(this.getLastPage(), node);\n    }\n  }\n  render() {\n    const _a = this.props,\n      {\n        children,\n        className,\n        variant,\n        isDisabled,\n        isCompact,\n        isStatic,\n        isSticky,\n        perPage,\n        titles,\n        firstPage,\n        page: propPage,\n        offset,\n        defaultToFullPage,\n        itemCount,\n        itemsStart,\n        itemsEnd,\n        perPageOptions,\n        dropDirection: dropDirectionProp,\n        widgetId,\n        toggleTemplate,\n        onSetPage,\n        onPerPageSelect,\n        onFirstClick,\n        onPreviousClick,\n        onNextClick,\n        onPageInput,\n        onLastClick,\n        ouiaId,\n        ouiaSafe,\n        perPageComponent,\n        usePageInsets,\n        inset\n      } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"variant\", \"isDisabled\", \"isCompact\", \"isStatic\", \"isSticky\", \"perPage\", \"titles\", \"firstPage\", \"page\", \"offset\", \"defaultToFullPage\", \"itemCount\", \"itemsStart\", \"itemsEnd\", \"perPageOptions\", \"dropDirection\", \"widgetId\", \"toggleTemplate\", \"onSetPage\", \"onPerPageSelect\", \"onFirstClick\", \"onPreviousClick\", \"onNextClick\", \"onPageInput\", \"onLastClick\", \"ouiaId\", \"ouiaSafe\", \"perPageComponent\", \"usePageInsets\", \"inset\"]);\n    const dropDirection = dropDirectionProp || (variant === 'bottom' && !isStatic ? 'up' : 'down');\n    let page = propPage;\n    if (!page && offset) {\n      page = Math.ceil(offset / perPage);\n    }\n    if (page === 0 && !itemCount) {\n      page = 1;\n    }\n    const lastPage = this.getLastPage();\n    let firstIndex = (page - 1) * perPage + 1;\n    let lastIndex = page * perPage;\n    if (itemCount || itemCount === 0) {\n      firstIndex = itemCount <= 0 ? 0 : (page - 1) * perPage + 1;\n      if (page < firstPage && itemCount > 0) {\n        page = firstPage;\n      } else if (page > lastPage) {\n        page = lastPage;\n      }\n      if (itemCount >= 0) {\n        lastIndex = page === lastPage || itemCount === 0 ? itemCount : page * perPage;\n      }\n    }\n    const toggleTemplateProps = {\n      firstIndex,\n      lastIndex,\n      itemCount,\n      itemsTitle: titles.items,\n      ofWord: titles.ofWord\n    };\n    return React.createElement(\"div\", Object.assign({\n      ref: this.paginationRef,\n      className: css(styles.pagination, variant === PaginationVariant.bottom && styles.modifiers.bottom, usePageInsets && styles.modifiers.pageInsets, formatBreakpointMods(inset, styles), isCompact && styles.modifiers.compact, isStatic && styles.modifiers.static, isSticky && styles.modifiers.sticky, className)\n    }, widgetId && {\n      id: `${widgetId}-${variant}-pagination`\n    }, getOUIAProps(Pagination.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), props), variant === PaginationVariant.top && React.createElement(\"div\", {\n      className: css(styles.paginationTotalItems)\n    }, toggleTemplate && typeof toggleTemplate === 'string' && fillTemplate(toggleTemplate, toggleTemplateProps), toggleTemplate && typeof toggleTemplate !== 'string' && toggleTemplate(toggleTemplateProps), !toggleTemplate && React.createElement(ToggleTemplate, {\n      firstIndex: firstIndex,\n      lastIndex: lastIndex,\n      itemCount: itemCount,\n      itemsTitle: titles.items,\n      ofWord: titles.ofWord\n    })), React.createElement(PaginationOptionsMenu, {\n      itemsPerPageTitle: titles.itemsPerPage,\n      perPageSuffix: titles.perPageSuffix,\n      itemsTitle: isCompact ? '' : titles.items,\n      optionsToggle: titles.optionsToggle,\n      perPageOptions: perPageOptions,\n      firstIndex: itemsStart !== null ? itemsStart : firstIndex,\n      lastIndex: itemsEnd !== null ? itemsEnd : lastIndex,\n      ofWord: titles.ofWord,\n      defaultToFullPage: defaultToFullPage,\n      itemCount: itemCount,\n      page: page,\n      perPage: perPage,\n      lastPage: lastPage,\n      onPerPageSelect: onPerPageSelect,\n      dropDirection: dropDirection,\n      widgetId: `${widgetId}-${variant}`,\n      toggleTemplate: toggleTemplate,\n      isDisabled: isDisabled,\n      perPageComponent: perPageComponent\n    }), React.createElement(Navigation, {\n      pagesTitle: titles.page,\n      pagesTitlePlural: titles.pages,\n      toLastPage: titles.toLastPage,\n      toPreviousPage: titles.toPreviousPage,\n      toNextPage: titles.toNextPage,\n      toFirstPage: titles.toFirstPage,\n      currPage: titles.currPage,\n      paginationTitle: titles.paginationTitle,\n      ofWord: titles.ofWord,\n      page: itemCount && itemCount <= 0 ? 0 : page,\n      perPage: perPage,\n      itemCount: itemCount,\n      firstPage: itemsStart !== null ? itemsStart : 1,\n      lastPage: lastPage,\n      onSetPage: onSetPage,\n      onFirstClick: onFirstClick,\n      onPreviousClick: onPreviousClick,\n      onNextClick: onNextClick,\n      onLastClick: onLastClick,\n      onPageInput: onPageInput,\n      isDisabled: isDisabled,\n      isCompact: isCompact\n    }), children);\n  }\n}\nPagination.displayName = 'Pagination';\nPagination.defaultProps = {\n  children: null,\n  className: '',\n  variant: PaginationVariant.top,\n  isDisabled: false,\n  isCompact: false,\n  isSticky: false,\n  perPage: defaultPerPageOptions[0].value,\n  titles: {\n    items: '',\n    page: '',\n    pages: '',\n    itemsPerPage: 'Items per page',\n    perPageSuffix: 'per page',\n    toFirstPage: 'Go to first page',\n    toPreviousPage: 'Go to previous page',\n    toLastPage: 'Go to last page',\n    toNextPage: 'Go to next page',\n    optionsToggle: '',\n    currPage: 'Current page',\n    paginationTitle: 'Pagination',\n    ofWord: 'of'\n  },\n  firstPage: 1,\n  page: 0,\n  offset: 0,\n  defaultToFullPage: false,\n  itemsStart: null,\n  itemsEnd: null,\n  perPageOptions: defaultPerPageOptions,\n  widgetId: 'options-menu',\n  onSetPage: () => undefined,\n  onPerPageSelect: () => undefined,\n  onFirstClick: () => undefined,\n  onPreviousClick: () => undefined,\n  onNextClick: () => undefined,\n  onPageInput: () => undefined,\n  onLastClick: () => undefined,\n  ouiaSafe: true,\n  perPageComponent: 'div'\n};","map":{"version":3,"sources":["../../../../src/components/Pagination/Pagination.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { ToggleTemplate } from './ToggleTemplate';\nimport styles from '@patternfly/react-styles/css/components/Pagination/pagination';\nimport { css } from '@patternfly/react-styles';\nimport { fillTemplate } from '../../helpers';\nimport { Navigation } from './Navigation';\nimport { PaginationOptionsMenu } from './PaginationOptionsMenu';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport widthChars from '@patternfly/react-tokens/dist/esm/c_pagination__nav_page_select_c_form_control_width_chars';\nexport var PaginationVariant;\n(function (PaginationVariant) {\n    PaginationVariant[\"bottom\"] = \"bottom\";\n    PaginationVariant[\"top\"] = \"top\";\n})(PaginationVariant || (PaginationVariant = {}));\nconst defaultPerPageOptions = [\n    {\n        title: '10',\n        value: 10\n    },\n    {\n        title: '20',\n        value: 20\n    },\n    {\n        title: '50',\n        value: 50\n    },\n    {\n        title: '100',\n        value: 100\n    }\n];\nconst handleInputWidth = (lastPage, node) => {\n    if (!node) {\n        return;\n    }\n    const len = String(lastPage).length;\n    if (len >= 3) {\n        node.style.setProperty(widthChars.name, `${len}`);\n    }\n    else {\n        node.style.setProperty(widthChars.name, '2');\n    }\n};\nexport class Pagination extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.paginationRef = React.createRef();\n        this.state = {\n            ouiaStateId: getDefaultOUIAId(Pagination.displayName, this.props.variant)\n        };\n    }\n    getLastPage() {\n        const { itemCount, perPage, page } = this.props;\n        // when itemCount is not known let's set lastPage as page+1 as we don't know the total count\n        return itemCount || itemCount === 0 ? Math.ceil(itemCount / perPage) || 0 : page + 1;\n    }\n    componentDidMount() {\n        const node = this.paginationRef.current;\n        handleInputWidth(this.getLastPage(), node);\n    }\n    componentDidUpdate(prevProps) {\n        const node = this.paginationRef.current;\n        if (prevProps.perPage !== this.props.perPage || prevProps.itemCount !== this.props.itemCount) {\n            handleInputWidth(this.getLastPage(), node);\n        }\n    }\n    render() {\n        const _a = this.props, { children, className, variant, isDisabled, isCompact, isStatic, isSticky, perPage, titles, firstPage, page: propPage, offset, defaultToFullPage, itemCount, itemsStart, itemsEnd, perPageOptions, dropDirection: dropDirectionProp, widgetId, toggleTemplate, onSetPage, onPerPageSelect, onFirstClick, onPreviousClick, onNextClick, onPageInput, onLastClick, ouiaId, ouiaSafe, perPageComponent, usePageInsets, inset } = _a, props = __rest(_a, [\"children\", \"className\", \"variant\", \"isDisabled\", \"isCompact\", \"isStatic\", \"isSticky\", \"perPage\", \"titles\", \"firstPage\", \"page\", \"offset\", \"defaultToFullPage\", \"itemCount\", \"itemsStart\", \"itemsEnd\", \"perPageOptions\", \"dropDirection\", \"widgetId\", \"toggleTemplate\", \"onSetPage\", \"onPerPageSelect\", \"onFirstClick\", \"onPreviousClick\", \"onNextClick\", \"onPageInput\", \"onLastClick\", \"ouiaId\", \"ouiaSafe\", \"perPageComponent\", \"usePageInsets\", \"inset\"]);\n        const dropDirection = dropDirectionProp || (variant === 'bottom' && !isStatic ? 'up' : 'down');\n        let page = propPage;\n        if (!page && offset) {\n            page = Math.ceil(offset / perPage);\n        }\n        if (page === 0 && !itemCount) {\n            page = 1;\n        }\n        const lastPage = this.getLastPage();\n        let firstIndex = (page - 1) * perPage + 1;\n        let lastIndex = page * perPage;\n        if (itemCount || itemCount === 0) {\n            firstIndex = itemCount <= 0 ? 0 : (page - 1) * perPage + 1;\n            if (page < firstPage && itemCount > 0) {\n                page = firstPage;\n            }\n            else if (page > lastPage) {\n                page = lastPage;\n            }\n            if (itemCount >= 0) {\n                lastIndex = page === lastPage || itemCount === 0 ? itemCount : page * perPage;\n            }\n        }\n        const toggleTemplateProps = { firstIndex, lastIndex, itemCount, itemsTitle: titles.items, ofWord: titles.ofWord };\n        return (React.createElement(\"div\", Object.assign({ ref: this.paginationRef, className: css(styles.pagination, variant === PaginationVariant.bottom && styles.modifiers.bottom, usePageInsets && styles.modifiers.pageInsets, formatBreakpointMods(inset, styles), isCompact && styles.modifiers.compact, isStatic && styles.modifiers.static, isSticky && styles.modifiers.sticky, className) }, (widgetId && { id: `${widgetId}-${variant}-pagination` }), getOUIAProps(Pagination.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), props),\n            variant === PaginationVariant.top && (React.createElement(\"div\", { className: css(styles.paginationTotalItems) },\n                toggleTemplate && typeof toggleTemplate === 'string' && fillTemplate(toggleTemplate, toggleTemplateProps),\n                toggleTemplate &&\n                    typeof toggleTemplate !== 'string' &&\n                    toggleTemplate(toggleTemplateProps),\n                !toggleTemplate && (React.createElement(ToggleTemplate, { firstIndex: firstIndex, lastIndex: lastIndex, itemCount: itemCount, itemsTitle: titles.items, ofWord: titles.ofWord })))),\n            React.createElement(PaginationOptionsMenu, { itemsPerPageTitle: titles.itemsPerPage, perPageSuffix: titles.perPageSuffix, itemsTitle: isCompact ? '' : titles.items, optionsToggle: titles.optionsToggle, perPageOptions: perPageOptions, firstIndex: itemsStart !== null ? itemsStart : firstIndex, lastIndex: itemsEnd !== null ? itemsEnd : lastIndex, ofWord: titles.ofWord, defaultToFullPage: defaultToFullPage, itemCount: itemCount, page: page, perPage: perPage, lastPage: lastPage, onPerPageSelect: onPerPageSelect, dropDirection: dropDirection, widgetId: `${widgetId}-${variant}`, toggleTemplate: toggleTemplate, isDisabled: isDisabled, perPageComponent: perPageComponent }),\n            React.createElement(Navigation, { pagesTitle: titles.page, pagesTitlePlural: titles.pages, toLastPage: titles.toLastPage, toPreviousPage: titles.toPreviousPage, toNextPage: titles.toNextPage, toFirstPage: titles.toFirstPage, currPage: titles.currPage, paginationTitle: titles.paginationTitle, ofWord: titles.ofWord, page: itemCount && itemCount <= 0 ? 0 : page, perPage: perPage, itemCount: itemCount, firstPage: itemsStart !== null ? itemsStart : 1, lastPage: lastPage, onSetPage: onSetPage, onFirstClick: onFirstClick, onPreviousClick: onPreviousClick, onNextClick: onNextClick, onLastClick: onLastClick, onPageInput: onPageInput, isDisabled: isDisabled, isCompact: isCompact }),\n            children));\n    }\n}\nPagination.displayName = 'Pagination';\nPagination.defaultProps = {\n    children: null,\n    className: '',\n    variant: PaginationVariant.top,\n    isDisabled: false,\n    isCompact: false,\n    isSticky: false,\n    perPage: defaultPerPageOptions[0].value,\n    titles: {\n        items: '',\n        page: '',\n        pages: '',\n        itemsPerPage: 'Items per page',\n        perPageSuffix: 'per page',\n        toFirstPage: 'Go to first page',\n        toPreviousPage: 'Go to previous page',\n        toLastPage: 'Go to last page',\n        toNextPage: 'Go to next page',\n        optionsToggle: '',\n        currPage: 'Current page',\n        paginationTitle: 'Pagination',\n        ofWord: 'of'\n    },\n    firstPage: 1,\n    page: 0,\n    offset: 0,\n    defaultToFullPage: false,\n    itemsStart: null,\n    itemsEnd: null,\n    perPageOptions: defaultPerPageOptions,\n    widgetId: 'options-menu',\n    onSetPage: () => undefined,\n    onPerPageSelect: () => undefined,\n    onFirstClick: () => undefined,\n    onPreviousClick: () => undefined,\n    onNextClick: () => undefined,\n    onPageInput: () => undefined,\n    onLastClick: () => undefined,\n    ouiaSafe: true,\n    perPageComponent: 'div'\n};\n//# sourceMappingURL=Pagination.js.map"]},"metadata":{},"sourceType":"module"}