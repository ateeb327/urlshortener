{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { Button } from '../Button';\nimport { Tooltip } from '../Tooltip';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport styles from '@patternfly/react-styles/css/components/Chip/chip';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class Chip extends React.Component {\n  constructor(props) {\n    super(props);\n    this.span = React.createRef();\n    this.setChipStyle = () => ({\n      '--pf-c-chip__text--MaxWidth': this.props.textMaxWidth\n    });\n    this.renderOverflowChip = () => {\n      const _a = this.props,\n        {\n          children,\n          className,\n          onClick,\n          ouiaId,\n          textMaxWidth,\n          style,\n          component,\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          tooltipPosition,\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          isOverflowChip,\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          closeBtnAriaLabel,\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          isReadOnly\n        } = _a,\n        props = __rest(_a, [\"children\", \"className\", \"onClick\", \"ouiaId\", \"textMaxWidth\", \"style\", \"component\", \"tooltipPosition\", \"isOverflowChip\", \"closeBtnAriaLabel\", \"isReadOnly\"]);\n      const Component = component;\n      return React.createElement(Component, Object.assign({\n        onClick: onClick\n      }, textMaxWidth && Object.assign({\n        style: this.setChipStyle()\n      }, style), {\n        className: css(styles.chip, styles.modifiers.overflow, className)\n      }, component === 'button' ? {\n        type: 'button'\n      } : {}, getOUIAProps('OverflowChip', ouiaId !== undefined ? ouiaId : this.state.ouiaStateId), props), React.createElement(\"span\", {\n        className: css(styles.chipText)\n      }, children));\n    };\n    this.renderChip = randomId => {\n      const {\n        children,\n        tooltipPosition\n      } = this.props;\n      if (this.state.isTooltipVisible) {\n        return React.createElement(Tooltip, {\n          position: tooltipPosition,\n          content: children\n        }, this.renderInnerChip(randomId));\n      }\n      return this.renderInnerChip(randomId);\n    };\n    this.state = {\n      isTooltipVisible: false,\n      ouiaStateId: getDefaultOUIAId(Chip.displayName)\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      isTooltipVisible: Boolean(this.span.current && this.span.current.offsetWidth < this.span.current.scrollWidth)\n    });\n  }\n  renderInnerChip(id) {\n    const _a = this.props,\n      {\n        children,\n        className,\n        onClick,\n        closeBtnAriaLabel,\n        isReadOnly,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        isOverflowChip,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        tooltipPosition,\n        component,\n        ouiaId\n      } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"onClick\", \"closeBtnAriaLabel\", \"isReadOnly\", \"isOverflowChip\", \"tooltipPosition\", \"component\", \"ouiaId\"]);\n    const Component = component;\n    return React.createElement(Component, Object.assign({}, this.props.textMaxWidth && {\n      style: this.setChipStyle()\n    }, {\n      className: css(styles.chip, className)\n    }, this.state.isTooltipVisible && {\n      tabIndex: 0\n    }, getOUIAProps(Chip.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId), props), React.createElement(\"span\", {\n      ref: this.span,\n      className: css(styles.chipText),\n      id: id\n    }, children), !isReadOnly && React.createElement(Button, {\n      onClick: onClick,\n      variant: \"plain\",\n      \"aria-label\": closeBtnAriaLabel,\n      id: `remove_${id}`,\n      \"aria-labelledby\": `remove_${id} ${id}`,\n      ouiaId: ouiaId || closeBtnAriaLabel\n    }, React.createElement(TimesIcon, {\n      \"aria-hidden\": \"true\"\n    })));\n  }\n  render() {\n    const {\n      isOverflowChip\n    } = this.props;\n    return React.createElement(GenerateId, null, randomId => isOverflowChip ? this.renderOverflowChip() : this.renderChip(this.props.id || randomId));\n  }\n}\nChip.displayName = 'Chip';\nChip.defaultProps = {\n  closeBtnAriaLabel: 'close',\n  className: '',\n  isOverflowChip: false,\n  isReadOnly: false,\n  tooltipPosition: 'top',\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onClick: _e => undefined,\n  component: 'div'\n};","map":{"version":3,"sources":["../../../../src/components/Chip/Chip.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { Button } from '../Button';\nimport { Tooltip } from '../Tooltip';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport styles from '@patternfly/react-styles/css/components/Chip/chip';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class Chip extends React.Component {\n    constructor(props) {\n        super(props);\n        this.span = React.createRef();\n        this.setChipStyle = () => ({\n            '--pf-c-chip__text--MaxWidth': this.props.textMaxWidth\n        });\n        this.renderOverflowChip = () => {\n            const _a = this.props, { children, className, onClick, ouiaId, textMaxWidth, style, component, \n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            tooltipPosition, \n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            isOverflowChip, \n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            closeBtnAriaLabel, \n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            isReadOnly } = _a, props = __rest(_a, [\"children\", \"className\", \"onClick\", \"ouiaId\", \"textMaxWidth\", \"style\", \"component\", \"tooltipPosition\", \"isOverflowChip\", \"closeBtnAriaLabel\", \"isReadOnly\"]);\n            const Component = component;\n            return (React.createElement(Component, Object.assign({ onClick: onClick }, (textMaxWidth && Object.assign({ style: this.setChipStyle() }, style)), { className: css(styles.chip, styles.modifiers.overflow, className) }, (component === 'button' ? { type: 'button' } : {}), getOUIAProps('OverflowChip', ouiaId !== undefined ? ouiaId : this.state.ouiaStateId), props),\n                React.createElement(\"span\", { className: css(styles.chipText) }, children)));\n        };\n        this.renderChip = (randomId) => {\n            const { children, tooltipPosition } = this.props;\n            if (this.state.isTooltipVisible) {\n                return (React.createElement(Tooltip, { position: tooltipPosition, content: children }, this.renderInnerChip(randomId)));\n            }\n            return this.renderInnerChip(randomId);\n        };\n        this.state = {\n            isTooltipVisible: false,\n            ouiaStateId: getDefaultOUIAId(Chip.displayName)\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            isTooltipVisible: Boolean(this.span.current && this.span.current.offsetWidth < this.span.current.scrollWidth)\n        });\n    }\n    renderInnerChip(id) {\n        const _a = this.props, { children, className, onClick, closeBtnAriaLabel, isReadOnly, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        isOverflowChip, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        tooltipPosition, component, ouiaId } = _a, props = __rest(_a, [\"children\", \"className\", \"onClick\", \"closeBtnAriaLabel\", \"isReadOnly\", \"isOverflowChip\", \"tooltipPosition\", \"component\", \"ouiaId\"]);\n        const Component = component;\n        return (React.createElement(Component, Object.assign({}, (this.props.textMaxWidth && {\n            style: this.setChipStyle()\n        }), { className: css(styles.chip, className) }, (this.state.isTooltipVisible && { tabIndex: 0 }), getOUIAProps(Chip.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId), props),\n            React.createElement(\"span\", { ref: this.span, className: css(styles.chipText), id: id }, children),\n            !isReadOnly && (React.createElement(Button, { onClick: onClick, variant: \"plain\", \"aria-label\": closeBtnAriaLabel, id: `remove_${id}`, \"aria-labelledby\": `remove_${id} ${id}`, ouiaId: ouiaId || closeBtnAriaLabel },\n                React.createElement(TimesIcon, { \"aria-hidden\": \"true\" })))));\n    }\n    render() {\n        const { isOverflowChip } = this.props;\n        return (React.createElement(GenerateId, null, randomId => (isOverflowChip ? this.renderOverflowChip() : this.renderChip(this.props.id || randomId))));\n    }\n}\nChip.displayName = 'Chip';\nChip.defaultProps = {\n    closeBtnAriaLabel: 'close',\n    className: '',\n    isOverflowChip: false,\n    isReadOnly: false,\n    tooltipPosition: 'top',\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onClick: (_e) => undefined,\n    component: 'div'\n};\n//# sourceMappingURL=Chip.js.map"]},"metadata":{},"sourceType":"module"}