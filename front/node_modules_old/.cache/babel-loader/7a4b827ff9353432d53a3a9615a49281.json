{"ast":null,"code":"import { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { capitalize } from '../utils';\nexport const cellWidth = width => () => ({\n  className: css(styles.modifiers[typeof width === 'number' ? `width_${width}` : `width${capitalize(width)}`])\n});","map":{"version":3,"sources":["../../../../../../src/components/Table/utils/decorators/cellWidth.ts"],"names":[],"mappings":"AAAA,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,MAAM,MAAM,qDAAqD;AAExE,SAAS,UAAU,QAAQ,UAAU;AAkBrC,OAAO,MAAM,SAAS,GACpB,KAA2E,IAC5D,OAAO;EACtB,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,SAAS,CACd,OAAO,KAAK,KAAK,QAAQ,GAAI,SAAS,KAAK,EAAiB,GAAI,QAAQ,UAAU,CAAC,KAAK,CAAC,EAAiB,CAC3G;CAEJ,CAAC","sourceRoot":"","sourcesContent":["import { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { capitalize } from '../utils';\nexport const cellWidth = (width) => () => ({\n    className: css(styles.modifiers[typeof width === 'number' ? `width_${width}` : `width${capitalize(width)}`])\n});\n//# sourceMappingURL=cellWidth.js.map"]},"metadata":{},"sourceType":"module"}