{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport { PageContext } from './PageContext';\nexport var PageSectionVariants;\n(function (PageSectionVariants) {\n  PageSectionVariants[\"default\"] = \"default\";\n  PageSectionVariants[\"light\"] = \"light\";\n  PageSectionVariants[\"dark\"] = \"dark\";\n  PageSectionVariants[\"darker\"] = \"darker\";\n})(PageSectionVariants || (PageSectionVariants = {}));\nexport var PageSectionTypes;\n(function (PageSectionTypes) {\n  PageSectionTypes[\"default\"] = \"default\";\n  PageSectionTypes[\"nav\"] = \"nav\";\n  PageSectionTypes[\"subNav\"] = \"subnav\";\n  PageSectionTypes[\"breadcrumb\"] = \"breadcrumb\";\n  PageSectionTypes[\"tabs\"] = \"tabs\";\n  PageSectionTypes[\"wizard\"] = \"wizard\";\n})(PageSectionTypes || (PageSectionTypes = {}));\nconst variantType = {\n  [PageSectionTypes.default]: styles.pageMainSection,\n  [PageSectionTypes.nav]: styles.pageMainNav,\n  [PageSectionTypes.subNav]: styles.pageMainSubnav,\n  [PageSectionTypes.breadcrumb]: styles.pageMainBreadcrumb,\n  [PageSectionTypes.tabs]: styles.pageMainTabs,\n  [PageSectionTypes.wizard]: styles.pageMainWizard\n};\nconst variantStyle = {\n  [PageSectionVariants.default]: '',\n  [PageSectionVariants.light]: styles.modifiers.light,\n  [PageSectionVariants.dark]: styles.modifiers.dark_200,\n  [PageSectionVariants.darker]: styles.modifiers.dark_100\n};\nexport const PageSection = _a => {\n  var {\n      className = '',\n      children,\n      variant = 'default',\n      type = 'default',\n      padding,\n      isFilled,\n      isWidthLimited = false,\n      isCenterAligned = false,\n      sticky,\n      stickyOnBreakpoint,\n      hasShadowTop = false,\n      hasShadowBottom = false,\n      hasOverflowScroll = false,\n      'aria-label': ariaLabel,\n      component = 'section'\n    } = _a,\n    props = __rest(_a, [\"className\", \"children\", \"variant\", \"type\", \"padding\", \"isFilled\", \"isWidthLimited\", \"isCenterAligned\", \"sticky\", \"stickyOnBreakpoint\", \"hasShadowTop\", \"hasShadowBottom\", \"hasOverflowScroll\", 'aria-label', \"component\"]);\n  const {\n    height,\n    getVerticalBreakpoint\n  } = React.useContext(PageContext);\n  React.useEffect(() => {\n    if (hasOverflowScroll && !ariaLabel) {\n      /* eslint-disable no-console */\n      console.warn('PageSection: An accessible aria-label is required when hasOverflowScroll is set to true.');\n    }\n  }, [hasOverflowScroll, ariaLabel]);\n  const Component = component;\n  return React.createElement(Component, Object.assign({}, props, {\n    className: css(variantType[type], formatBreakpointMods(padding, styles), formatBreakpointMods(stickyOnBreakpoint, styles, 'sticky-', getVerticalBreakpoint(height), true), variantStyle[variant], isFilled === false && styles.modifiers.noFill, isFilled === true && styles.modifiers.fill, isWidthLimited && styles.modifiers.limitWidth, isWidthLimited && isCenterAligned && type !== PageSectionTypes.subNav && styles.modifiers.alignCenter, sticky === 'top' && styles.modifiers.stickyTop, sticky === 'bottom' && styles.modifiers.stickyBottom, hasShadowTop && styles.modifiers.shadowTop, hasShadowBottom && styles.modifiers.shadowBottom, hasOverflowScroll && styles.modifiers.overflowScroll, className)\n  }, hasOverflowScroll && {\n    tabIndex: 0\n  }, {\n    \"aria-label\": ariaLabel\n  }), isWidthLimited && React.createElement(\"div\", {\n    className: css(styles.pageMainBody)\n  }, children), !isWidthLimited && children);\n};\nPageSection.displayName = 'PageSection';","map":{"version":3,"sources":["../../../../src/components/Page/PageSection.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport { PageContext } from './PageContext';\nexport var PageSectionVariants;\n(function (PageSectionVariants) {\n    PageSectionVariants[\"default\"] = \"default\";\n    PageSectionVariants[\"light\"] = \"light\";\n    PageSectionVariants[\"dark\"] = \"dark\";\n    PageSectionVariants[\"darker\"] = \"darker\";\n})(PageSectionVariants || (PageSectionVariants = {}));\nexport var PageSectionTypes;\n(function (PageSectionTypes) {\n    PageSectionTypes[\"default\"] = \"default\";\n    PageSectionTypes[\"nav\"] = \"nav\";\n    PageSectionTypes[\"subNav\"] = \"subnav\";\n    PageSectionTypes[\"breadcrumb\"] = \"breadcrumb\";\n    PageSectionTypes[\"tabs\"] = \"tabs\";\n    PageSectionTypes[\"wizard\"] = \"wizard\";\n})(PageSectionTypes || (PageSectionTypes = {}));\nconst variantType = {\n    [PageSectionTypes.default]: styles.pageMainSection,\n    [PageSectionTypes.nav]: styles.pageMainNav,\n    [PageSectionTypes.subNav]: styles.pageMainSubnav,\n    [PageSectionTypes.breadcrumb]: styles.pageMainBreadcrumb,\n    [PageSectionTypes.tabs]: styles.pageMainTabs,\n    [PageSectionTypes.wizard]: styles.pageMainWizard\n};\nconst variantStyle = {\n    [PageSectionVariants.default]: '',\n    [PageSectionVariants.light]: styles.modifiers.light,\n    [PageSectionVariants.dark]: styles.modifiers.dark_200,\n    [PageSectionVariants.darker]: styles.modifiers.dark_100\n};\nexport const PageSection = (_a) => {\n    var { className = '', children, variant = 'default', type = 'default', padding, isFilled, isWidthLimited = false, isCenterAligned = false, sticky, stickyOnBreakpoint, hasShadowTop = false, hasShadowBottom = false, hasOverflowScroll = false, 'aria-label': ariaLabel, component = 'section' } = _a, props = __rest(_a, [\"className\", \"children\", \"variant\", \"type\", \"padding\", \"isFilled\", \"isWidthLimited\", \"isCenterAligned\", \"sticky\", \"stickyOnBreakpoint\", \"hasShadowTop\", \"hasShadowBottom\", \"hasOverflowScroll\", 'aria-label', \"component\"]);\n    const { height, getVerticalBreakpoint } = React.useContext(PageContext);\n    React.useEffect(() => {\n        if (hasOverflowScroll && !ariaLabel) {\n            /* eslint-disable no-console */\n            console.warn('PageSection: An accessible aria-label is required when hasOverflowScroll is set to true.');\n        }\n    }, [hasOverflowScroll, ariaLabel]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { className: css(variantType[type], formatBreakpointMods(padding, styles), formatBreakpointMods(stickyOnBreakpoint, styles, 'sticky-', getVerticalBreakpoint(height), true), variantStyle[variant], isFilled === false && styles.modifiers.noFill, isFilled === true && styles.modifiers.fill, isWidthLimited && styles.modifiers.limitWidth, isWidthLimited && isCenterAligned && type !== PageSectionTypes.subNav && styles.modifiers.alignCenter, sticky === 'top' && styles.modifiers.stickyTop, sticky === 'bottom' && styles.modifiers.stickyBottom, hasShadowTop && styles.modifiers.shadowTop, hasShadowBottom && styles.modifiers.shadowBottom, hasOverflowScroll && styles.modifiers.overflowScroll, className) }, (hasOverflowScroll && { tabIndex: 0 }), { \"aria-label\": ariaLabel }),\n        isWidthLimited && React.createElement(\"div\", { className: css(styles.pageMainBody) }, children),\n        !isWidthLimited && children));\n};\nPageSection.displayName = 'PageSection';\n//# sourceMappingURL=PageSection.js.map"]},"metadata":{},"sourceType":"module"}