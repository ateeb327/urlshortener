{"ast":null,"code":"/**\n * evaluate-transforms.ts\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport { mergeProps } from './merge-props';\n/**\n * @param {transformsType} transforms - transforms type\n * @param {string | object} value - value\n * @param {ExtraParamsType} extraParameters - extra params type\n */\nexport function evaluateTransforms(transforms = [], value, extraParameters = {}) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!transforms.every(f => typeof f === 'function')) {\n      throw new Error(\"All transforms weren't functions!\");\n    }\n  }\n  if (transforms.length === 0) {\n    return {};\n  }\n  return mergeProps(...transforms.map(transform => transform(value, extraParameters)));\n}","map":{"version":3,"sources":["../../../../../src/components/Table/base/evaluate-transforms.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;AACH,SAAS,UAAU,QAAQ,eAAe;AAG1C;;;;AAIG;AACH,OAAM,SAAU,kBAAkB,CAChC,UAAA,GAA6B,EAAE,EAC/B,KAAsB,EACtB,eAAA,GAAmC,CAAA,CAAE,EAAA;EAErC,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK,UAAU,CAAC,EAAE;MACnD,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC;IACrD;EACF;EAED,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;IAC3B,OAAO,CAAA,CAAE;EACV;EAED,OAAO,UAAU,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,SAAS,IAAI,SAAS,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC,CAAC;AACtF","sourceRoot":"","sourcesContent":["/**\n * evaluate-transforms.ts\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport { mergeProps } from './merge-props';\n/**\n * @param {transformsType} transforms - transforms type\n * @param {string | object} value - value\n * @param {ExtraParamsType} extraParameters - extra params type\n */\nexport function evaluateTransforms(transforms = [], value, extraParameters = {}) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!transforms.every(f => typeof f === 'function')) {\n            throw new Error(\"All transforms weren't functions!\");\n        }\n    }\n    if (transforms.length === 0) {\n        return {};\n    }\n    return mergeProps(...transforms.map(transform => transform(value, extraParameters)));\n}\n//# sourceMappingURL=evaluate-transforms.js.map"]},"metadata":{},"sourceType":"module"}