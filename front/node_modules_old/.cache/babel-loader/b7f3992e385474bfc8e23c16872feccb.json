{"ast":null,"code":"import getWindow from '../dom-utils/getWindow';\nconst passive = {\n  passive: true\n};\n/**\n *\n */\nfunction effect({\n  state,\n  instance,\n  options\n}) {\n  const {\n    scroll = true,\n    resize = true\n  } = options;\n  const window = getWindow(state.elements.popper);\n  const scrollParents = [...state.scrollParents.reference, ...state.scrollParents.popper];\n  if (scroll) {\n    scrollParents.forEach(scrollParent => {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n  return () => {\n    if (scroll) {\n      scrollParents.forEach(scrollParent => {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n}\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: () => {},\n  effect,\n  data: {}\n};","map":{"version":3,"sources":["../../../../../../../src/helpers/Popper/thirdparty/popper-core/modifiers/eventListeners.ts"],"names":[],"mappings":"AAEA,OAAO,SAAS,MAAM,wBAAwB;AAQ9C,MAAM,OAAO,GAAG;EAAE,OAAO,EAAE;AAAI,CAAE;AAEjC;;AAEG;AACH,SAAS,MAAM,CAAC;EAAE,KAAK;EAAE,QAAQ;EAAE;AAAO,CAA8B,EAAA;EACtE,MAAM;IAAE,MAAM,GAAG,IAAI;IAAE,MAAM,GAAG;EAAI,CAAE,GAAG,OAAO;EAEhD,MAAM,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC;EAC/C,MAAM,aAAa,GAAG,CAAC,GAAG,KAAK,CAAC,aAAa,CAAC,SAAS,EAAE,GAAG,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC;EAEvF,IAAI,MAAM,EAAE;IACV,aAAa,CAAC,OAAO,CAAC,YAAY,IAAG;MACnC,YAAY,CAAC,gBAAgB,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC;IACnE,CAAC,CAAC;EACH;EAED,IAAI,MAAM,EAAE;IACV,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC;EAC5D;EAED,OAAO,MAAK;IACV,IAAI,MAAM,EAAE;MACV,aAAa,CAAC,OAAO,CAAC,YAAY,IAAG;QACnC,YAAY,CAAC,mBAAmB,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC;MACtE,CAAC,CAAC;IACH;IAED,IAAI,MAAM,EAAE;MACV,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC;IAC/D;EACH,CAAC;AACH;AAIA,eAAe;EACb,IAAI,EAAE,gBAAgB;EACtB,OAAO,EAAE,IAAI;EACb,KAAK,EAAE,OAAO;EACd,EAAE,EAAE,CAAA,KAAK,CAAE,CAAC;EACZ,MAAM;EACN,IAAI,EAAE,CAAA;CACmB","sourceRoot":"","sourcesContent":["import getWindow from '../dom-utils/getWindow';\nconst passive = { passive: true };\n/**\n *\n */\nfunction effect({ state, instance, options }) {\n    const { scroll = true, resize = true } = options;\n    const window = getWindow(state.elements.popper);\n    const scrollParents = [...state.scrollParents.reference, ...state.scrollParents.popper];\n    if (scroll) {\n        scrollParents.forEach(scrollParent => {\n            scrollParent.addEventListener('scroll', instance.update, passive);\n        });\n    }\n    if (resize) {\n        window.addEventListener('resize', instance.update, passive);\n    }\n    return () => {\n        if (scroll) {\n            scrollParents.forEach(scrollParent => {\n                scrollParent.removeEventListener('scroll', instance.update, passive);\n            });\n        }\n        if (resize) {\n            window.removeEventListener('resize', instance.update, passive);\n        }\n    };\n}\nexport default {\n    name: 'eventListeners',\n    enabled: true,\n    phase: 'write',\n    fn: () => { },\n    effect,\n    data: {}\n};\n//# sourceMappingURL=eventListeners.js.map"]},"metadata":{},"sourceType":"module"}