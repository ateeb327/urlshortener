{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Label/label';\nimport labelGrpStyles from '@patternfly/react-styles/css/components/LabelGroup/label-group';\nimport { Button } from '../Button';\nimport { Tooltip } from '../Tooltip';\nimport { css } from '@patternfly/react-styles';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { useIsomorphicLayoutEffect } from '../../helpers';\nconst colorStyles = {\n  blue: styles.modifiers.blue,\n  cyan: styles.modifiers.cyan,\n  green: styles.modifiers.green,\n  orange: styles.modifiers.orange,\n  purple: styles.modifiers.purple,\n  red: styles.modifiers.red,\n  gold: styles.modifiers.gold,\n  grey: ''\n};\nexport const Label = _a => {\n  var {\n      children,\n      className = '',\n      color = 'grey',\n      variant = 'filled',\n      isCompact = false,\n      isEditable = false,\n      editableProps,\n      isTruncated = false,\n      tooltipPosition,\n      icon,\n      onClose,\n      onEditCancel,\n      onEditComplete,\n      closeBtn,\n      closeBtnAriaLabel,\n      closeBtnProps,\n      href,\n      isOverflowLabel,\n      render\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"color\", \"variant\", \"isCompact\", \"isEditable\", \"editableProps\", \"isTruncated\", \"tooltipPosition\", \"icon\", \"onClose\", \"onEditCancel\", \"onEditComplete\", \"closeBtn\", \"closeBtnAriaLabel\", \"closeBtnProps\", \"href\", \"isOverflowLabel\", \"render\"]);\n  const [isEditableActive, setIsEditableActive] = useState(false);\n  const [currValue, setCurrValue] = useState(children);\n  const editableButtonRef = React.useRef();\n  const editableInputRef = React.useRef();\n  React.useEffect(() => {\n    document.addEventListener('mousedown', onDocMouseDown);\n    document.addEventListener('keydown', onKeyDown);\n    return () => {\n      document.removeEventListener('mousedown', onDocMouseDown);\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  });\n  const onDocMouseDown = event => {\n    if (isEditableActive && editableInputRef && editableInputRef.current && !editableInputRef.current.contains(event.target)) {\n      if (editableInputRef.current.value) {\n        onEditComplete && onEditComplete(event, editableInputRef.current.value);\n      }\n      setIsEditableActive(false);\n    }\n  };\n  const onKeyDown = event => {\n    var _a, _b;\n    const key = event.key;\n    if (!isEditableActive && (!editableButtonRef || !editableButtonRef.current || !editableButtonRef.current.contains(event.target)) || isEditableActive && (!editableInputRef || !editableInputRef.current || !editableInputRef.current.contains(event.target))) {\n      return;\n    }\n    if (isEditableActive && (key === 'Enter' || key === 'Tab')) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n      if (editableInputRef.current.value) {\n        onEditComplete && onEditComplete(event, editableInputRef.current.value);\n      }\n      setIsEditableActive(false);\n      (_a = editableButtonRef === null || editableButtonRef === void 0 ? void 0 : editableButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    if (isEditableActive && key === 'Escape') {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n      // Reset div text to initial children prop - pre-edit\n      if (editableInputRef.current.value) {\n        editableInputRef.current.value = children;\n        onEditCancel && onEditCancel(event, children);\n      }\n      setIsEditableActive(false);\n      (_b = editableButtonRef === null || editableButtonRef === void 0 ? void 0 : editableButtonRef.current) === null || _b === void 0 ? void 0 : _b.focus();\n    }\n    if (!isEditableActive && key === 'Enter') {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n      setIsEditableActive(true);\n      // Set cursor position to end of text\n      const el = event.target;\n      const range = document.createRange();\n      const sel = window.getSelection();\n      range.selectNodeContents(el);\n      range.collapse(false);\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n  };\n  const LabelComponent = isOverflowLabel ? 'button' : 'span';\n  const button = closeBtn ? closeBtn : React.createElement(Button, Object.assign({\n    type: \"button\",\n    variant: \"plain\",\n    onClick: onClose,\n    \"aria-label\": closeBtnAriaLabel || `Close ${children}`\n  }, closeBtnProps), React.createElement(TimesIcon, null));\n  const textRef = React.createRef();\n  // ref to apply tooltip when rendered is used\n  const componentRef = React.useRef();\n  const [isTooltipVisible, setIsTooltipVisible] = React.useState(false);\n  useIsomorphicLayoutEffect(() => {\n    const currTextRef = isEditable ? editableButtonRef : textRef;\n    if (!isEditableActive) {\n      setIsTooltipVisible(currTextRef.current && currTextRef.current.offsetWidth < currTextRef.current.scrollWidth);\n    }\n  }, [isEditableActive]);\n  const content = React.createElement(React.Fragment, null, icon && React.createElement(\"span\", {\n    className: css(styles.labelIcon)\n  }, icon), isTruncated && React.createElement(\"span\", {\n    ref: textRef,\n    className: css(styles.labelText)\n  }, children), !isTruncated && children);\n  React.useEffect(() => {\n    if (isEditableActive && editableInputRef) {\n      editableInputRef.current && editableInputRef.current.focus();\n    }\n  }, [editableInputRef, isEditableActive]);\n  const updateVal = () => {\n    setCurrValue(editableInputRef.current.value);\n  };\n  let labelComponentChild = React.createElement(\"span\", {\n    className: css(styles.labelContent)\n  }, content);\n  if (href) {\n    labelComponentChild = React.createElement(\"a\", {\n      className: css(styles.labelContent),\n      href: href\n    }, content);\n  } else if (isEditable) {\n    labelComponentChild = React.createElement(\"button\", Object.assign({\n      ref: editableButtonRef,\n      className: css(styles.labelContent),\n      onClick: e => {\n        setIsEditableActive(true);\n        e.stopPropagation();\n      }\n    }, editableProps), content);\n  }\n  if (render) {\n    labelComponentChild = React.createElement(React.Fragment, null, isTooltipVisible && React.createElement(Tooltip, {\n      reference: componentRef,\n      content: children,\n      position: tooltipPosition\n    }), render({\n      className: styles.labelContent,\n      content,\n      componentRef\n    }));\n  } else if (isTooltipVisible) {\n    labelComponentChild = React.createElement(Tooltip, {\n      content: children,\n      position: tooltipPosition\n    }, labelComponentChild);\n  }\n  return React.createElement(LabelComponent, Object.assign({}, props, {\n    className: css(styles.label, colorStyles[color], variant === 'outline' && styles.modifiers.outline, isOverflowLabel && styles.modifiers.overflow, isCompact && styles.modifiers.compact, isEditable && labelGrpStyles.modifiers.editable, isEditableActive && styles.modifiers.editableActive, className)\n  }), !isEditableActive && labelComponentChild, !isEditableActive && onClose && button, isEditableActive && React.createElement(\"input\", Object.assign({\n    className: css(styles.labelContent),\n    type: \"text\",\n    id: \"editable-input\",\n    ref: editableInputRef,\n    value: currValue,\n    onChange: updateVal\n  }, editableProps)));\n};\nLabel.displayName = 'Label';","map":{"version":3,"sources":["../../../../src/components/Label/Label.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Label/label';\nimport labelGrpStyles from '@patternfly/react-styles/css/components/LabelGroup/label-group';\nimport { Button } from '../Button';\nimport { Tooltip } from '../Tooltip';\nimport { css } from '@patternfly/react-styles';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { useIsomorphicLayoutEffect } from '../../helpers';\nconst colorStyles = {\n    blue: styles.modifiers.blue,\n    cyan: styles.modifiers.cyan,\n    green: styles.modifiers.green,\n    orange: styles.modifiers.orange,\n    purple: styles.modifiers.purple,\n    red: styles.modifiers.red,\n    gold: styles.modifiers.gold,\n    grey: ''\n};\nexport const Label = (_a) => {\n    var { children, className = '', color = 'grey', variant = 'filled', isCompact = false, isEditable = false, editableProps, isTruncated = false, tooltipPosition, icon, onClose, onEditCancel, onEditComplete, closeBtn, closeBtnAriaLabel, closeBtnProps, href, isOverflowLabel, render } = _a, props = __rest(_a, [\"children\", \"className\", \"color\", \"variant\", \"isCompact\", \"isEditable\", \"editableProps\", \"isTruncated\", \"tooltipPosition\", \"icon\", \"onClose\", \"onEditCancel\", \"onEditComplete\", \"closeBtn\", \"closeBtnAriaLabel\", \"closeBtnProps\", \"href\", \"isOverflowLabel\", \"render\"]);\n    const [isEditableActive, setIsEditableActive] = useState(false);\n    const [currValue, setCurrValue] = useState(children);\n    const editableButtonRef = React.useRef();\n    const editableInputRef = React.useRef();\n    React.useEffect(() => {\n        document.addEventListener('mousedown', onDocMouseDown);\n        document.addEventListener('keydown', onKeyDown);\n        return () => {\n            document.removeEventListener('mousedown', onDocMouseDown);\n            document.removeEventListener('keydown', onKeyDown);\n        };\n    });\n    const onDocMouseDown = (event) => {\n        if (isEditableActive &&\n            editableInputRef &&\n            editableInputRef.current &&\n            !editableInputRef.current.contains(event.target)) {\n            if (editableInputRef.current.value) {\n                onEditComplete && onEditComplete(event, editableInputRef.current.value);\n            }\n            setIsEditableActive(false);\n        }\n    };\n    const onKeyDown = (event) => {\n        var _a, _b;\n        const key = event.key;\n        if ((!isEditableActive &&\n            (!editableButtonRef ||\n                !editableButtonRef.current ||\n                !editableButtonRef.current.contains(event.target))) ||\n            (isEditableActive &&\n                (!editableInputRef || !editableInputRef.current || !editableInputRef.current.contains(event.target)))) {\n            return;\n        }\n        if (isEditableActive && (key === 'Enter' || key === 'Tab')) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            if (editableInputRef.current.value) {\n                onEditComplete && onEditComplete(event, editableInputRef.current.value);\n            }\n            setIsEditableActive(false);\n            (_a = editableButtonRef === null || editableButtonRef === void 0 ? void 0 : editableButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n        if (isEditableActive && key === 'Escape') {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            // Reset div text to initial children prop - pre-edit\n            if (editableInputRef.current.value) {\n                editableInputRef.current.value = children;\n                onEditCancel && onEditCancel(event, children);\n            }\n            setIsEditableActive(false);\n            (_b = editableButtonRef === null || editableButtonRef === void 0 ? void 0 : editableButtonRef.current) === null || _b === void 0 ? void 0 : _b.focus();\n        }\n        if (!isEditableActive && key === 'Enter') {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            setIsEditableActive(true);\n            // Set cursor position to end of text\n            const el = event.target;\n            const range = document.createRange();\n            const sel = window.getSelection();\n            range.selectNodeContents(el);\n            range.collapse(false);\n            sel.removeAllRanges();\n            sel.addRange(range);\n        }\n    };\n    const LabelComponent = (isOverflowLabel ? 'button' : 'span');\n    const button = closeBtn ? (closeBtn) : (React.createElement(Button, Object.assign({ type: \"button\", variant: \"plain\", onClick: onClose, \"aria-label\": closeBtnAriaLabel || `Close ${children}` }, closeBtnProps),\n        React.createElement(TimesIcon, null)));\n    const textRef = React.createRef();\n    // ref to apply tooltip when rendered is used\n    const componentRef = React.useRef();\n    const [isTooltipVisible, setIsTooltipVisible] = React.useState(false);\n    useIsomorphicLayoutEffect(() => {\n        const currTextRef = isEditable ? editableButtonRef : textRef;\n        if (!isEditableActive) {\n            setIsTooltipVisible(currTextRef.current && currTextRef.current.offsetWidth < currTextRef.current.scrollWidth);\n        }\n    }, [isEditableActive]);\n    const content = (React.createElement(React.Fragment, null,\n        icon && React.createElement(\"span\", { className: css(styles.labelIcon) }, icon),\n        isTruncated && (React.createElement(\"span\", { ref: textRef, className: css(styles.labelText) }, children)),\n        !isTruncated && children));\n    React.useEffect(() => {\n        if (isEditableActive && editableInputRef) {\n            editableInputRef.current && editableInputRef.current.focus();\n        }\n    }, [editableInputRef, isEditableActive]);\n    const updateVal = () => {\n        setCurrValue(editableInputRef.current.value);\n    };\n    let labelComponentChild = React.createElement(\"span\", { className: css(styles.labelContent) }, content);\n    if (href) {\n        labelComponentChild = (React.createElement(\"a\", { className: css(styles.labelContent), href: href }, content));\n    }\n    else if (isEditable) {\n        labelComponentChild = (React.createElement(\"button\", Object.assign({ ref: editableButtonRef, className: css(styles.labelContent), onClick: (e) => {\n                setIsEditableActive(true);\n                e.stopPropagation();\n            } }, editableProps), content));\n    }\n    if (render) {\n        labelComponentChild = (React.createElement(React.Fragment, null,\n            isTooltipVisible && React.createElement(Tooltip, { reference: componentRef, content: children, position: tooltipPosition }),\n            render({\n                className: styles.labelContent,\n                content,\n                componentRef\n            })));\n    }\n    else if (isTooltipVisible) {\n        labelComponentChild = (React.createElement(Tooltip, { content: children, position: tooltipPosition }, labelComponentChild));\n    }\n    return (React.createElement(LabelComponent, Object.assign({}, props, { className: css(styles.label, colorStyles[color], variant === 'outline' && styles.modifiers.outline, isOverflowLabel && styles.modifiers.overflow, isCompact && styles.modifiers.compact, isEditable && labelGrpStyles.modifiers.editable, isEditableActive && styles.modifiers.editableActive, className) }),\n        !isEditableActive && labelComponentChild,\n        !isEditableActive && onClose && button,\n        isEditableActive && (React.createElement(\"input\", Object.assign({ className: css(styles.labelContent), type: \"text\", id: \"editable-input\", ref: editableInputRef, value: currValue, onChange: updateVal }, editableProps)))));\n};\nLabel.displayName = 'Label';\n//# sourceMappingURL=Label.js.map"]},"metadata":{},"sourceType":"module"}