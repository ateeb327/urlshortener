{"ast":null,"code":"// @ts-nocheck\n/* :: import type { Window } from '../types'; */\n/* :: declare function getWindow(node: Node | Window): Window; */\n/**\n * @param node\n */\nexport default function getWindow(node) {\n  if (node.toString() !== '[object Window]') {\n    const ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView : window;\n  }\n  return node;\n}","map":{"version":3,"sources":["../../../../../../../src/helpers/Popper/thirdparty/popper-core/dom-utils/getWindow.ts"],"names":[],"mappings":"AAAA;AAEA;AAEA;AAEA;;AAEG;AACH,eAAc,SAAU,SAAS,CAAC,IAAI,EAAA;EACpC,IAAI,IAAI,CAAC,QAAQ,CAAA,CAAE,KAAK,iBAAiB,EAAE;IACzC,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa;IACxC,OAAO,aAAa,GAAG,aAAa,CAAC,WAAW,GAAG,MAAM;EAC1D;EAED,OAAO,IAAI;AACb","sourceRoot":"","sourcesContent":["// @ts-nocheck\n/* :: import type { Window } from '../types'; */\n/* :: declare function getWindow(node: Node | Window): Window; */\n/**\n * @param node\n */\nexport default function getWindow(node) {\n    if (node.toString() !== '[object Window]') {\n        const ownerDocument = node.ownerDocument;\n        return ownerDocument ? ownerDocument.defaultView : window;\n    }\n    return node;\n}\n//# sourceMappingURL=getWindow.js.map"]},"metadata":{},"sourceType":"module"}