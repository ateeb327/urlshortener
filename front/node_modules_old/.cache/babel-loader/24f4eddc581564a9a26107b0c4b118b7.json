{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport { MenuContext } from './MenuContext';\nexport const MenuContent = React.forwardRef((props, ref) => {\n  const {\n      getHeight,\n      children,\n      menuHeight,\n      maxMenuHeight\n    } = props,\n    rest = __rest(props, [\"getHeight\", \"children\", \"menuHeight\", \"maxMenuHeight\"]);\n  const menuContentRef = React.createRef();\n  const refCallback = (el, menuId, onGetMenuHeight) => {\n    if (el) {\n      let clientHeight = el.clientHeight;\n      // if this menu is a submenu, we need to account for the root menu list's padding and root menu content's border.\n      let rootMenuList = null;\n      let parentEl = el.closest(`.${styles.menuList}`);\n      while (parentEl !== null && parentEl.nodeType === 1) {\n        if (parentEl.classList.contains(styles.menuList)) {\n          rootMenuList = parentEl;\n        }\n        parentEl = parentEl.parentElement;\n      }\n      if (rootMenuList) {\n        const rootMenuListStyles = getComputedStyle(rootMenuList);\n        const rootMenuListPaddingOffset = parseFloat(rootMenuListStyles.getPropertyValue('padding-top').replace(/px/g, '')) + parseFloat(rootMenuListStyles.getPropertyValue('padding-bottom').replace(/px/g, '')) + parseFloat(getComputedStyle(rootMenuList.parentElement).getPropertyValue('border-bottom-width').replace(/px/g, ''));\n        clientHeight = clientHeight + rootMenuListPaddingOffset;\n      }\n      onGetMenuHeight && onGetMenuHeight(menuId, clientHeight);\n      getHeight && getHeight(clientHeight.toString());\n    }\n    return ref || menuContentRef;\n  };\n  return React.createElement(MenuContext.Consumer, null, ({\n    menuId,\n    onGetMenuHeight\n  }) => React.createElement(\"div\", Object.assign({}, rest, {\n    className: css(styles.menuContent, props.className),\n    ref: el => refCallback(el, menuId, onGetMenuHeight),\n    style: Object.assign(Object.assign({}, menuHeight && {\n      '--pf-c-menu__content--Height': menuHeight\n    }), maxMenuHeight && {\n      '--pf-c-menu__content--MaxHeight': maxMenuHeight\n    })\n  }), children));\n});\nMenuContent.displayName = 'MenuContent';","map":{"version":3,"sources":["../../../../src/components/Menu/MenuContent.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,OAAO,MAAM,MAAM,mDAAmD;AACtE,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,SAAS,WAAW,QAAQ,eAAe;AAe3C,OAAO,MAAM,WAAW,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,KAAuB,EAAE,GAA8B,KAAI;EACtG,MAAM;MAAE,SAAS;MAAE,QAAQ;MAAE,UAAU;MAAE;IAAa,CAAA,GAAc,KAAK;IAAd,IAAI,GAAA,MAAA,CAAK,KAAK,EAAnE,CAAA,WAAA,EAAA,UAAA,EAAA,YAAA,EAAA,eAAA,CAA2D,CAAQ;EACzE,MAAM,cAAc,GAAG,KAAK,CAAC,SAAS,CAAA,CAAkB;EACxD,MAAM,WAAW,GAAG,CAAC,EAAe,EAAE,MAAc,EAAE,eAAyD,KAAI;IACjH,IAAI,EAAE,EAAE;MACN,IAAI,YAAY,GAAG,EAAE,CAAC,YAAY;MAElC;MACA,IAAI,YAAY,GAAG,IAAI;MACvB,IAAI,QAAQ,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC;MAChD,OAAO,QAAQ,KAAK,IAAI,IAAI,QAAQ,CAAC,QAAQ,KAAK,CAAC,EAAE;QACnD,IAAI,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;UAChD,YAAY,GAAG,QAAQ;QACxB;QACD,QAAQ,GAAG,QAAQ,CAAC,aAAa;MAClC;MAED,IAAI,YAAY,EAAE;QAChB,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,YAAY,CAAC;QACzD,MAAM,yBAAyB,GAC7B,UAAU,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,GACjF,UAAU,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,GACpF,UAAU,CACR,gBAAgB,CAAC,YAAY,CAAC,aAAa,CAAC,CACzC,gBAAgB,CAAC,qBAAqB,CAAC,CACvC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CACtB;QACH,YAAY,GAAG,YAAY,GAAG,yBAAyB;MACxD;MAED,eAAe,IAAI,eAAe,CAAC,MAAM,EAAE,YAAY,CAAC;MACxD,SAAS,IAAI,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAA,CAAE,CAAC;IAChD;IACD,OAAO,GAAG,IAAI,cAAc;EAC9B,CAAC;EACD,OACE,KAAA,CAAA,aAAA,CAAC,WAAW,CAAC,QAAQ,EAAA,IAAA,EAClB,CAAC;IAAE,MAAM;IAAE;EAAe,CAAE,KAC3B,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EACM,IAAI,EAAA;IACR,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,KAAK,CAAC,SAAS,CAAC;IACnD,GAAG,EAAE,EAAE,IAAI,WAAW,CAAC,EAAE,EAAE,MAAM,EAAE,eAAe,CAAC;IACnD,KAAK,EACH,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EACM,UAAU,IAAI;MAAE,8BAA8B,EAAE;IAAU,CAAG,CAAA,EAC7D,aAAa,IAAI;MAAE,iCAAiC,EAAE;IAAa,CAAG;EACpD,CAAA,CAAA,EAGzB,QAAQ,CAEZ,CACoB;AAE3B,CAAC,CAAC;AACF,WAAW,CAAC,WAAW,GAAG,aAAa","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Menu/menu';\nimport { css } from '@patternfly/react-styles';\nimport { MenuContext } from './MenuContext';\nexport const MenuContent = React.forwardRef((props, ref) => {\n    const { getHeight, children, menuHeight, maxMenuHeight } = props, rest = __rest(props, [\"getHeight\", \"children\", \"menuHeight\", \"maxMenuHeight\"]);\n    const menuContentRef = React.createRef();\n    const refCallback = (el, menuId, onGetMenuHeight) => {\n        if (el) {\n            let clientHeight = el.clientHeight;\n            // if this menu is a submenu, we need to account for the root menu list's padding and root menu content's border.\n            let rootMenuList = null;\n            let parentEl = el.closest(`.${styles.menuList}`);\n            while (parentEl !== null && parentEl.nodeType === 1) {\n                if (parentEl.classList.contains(styles.menuList)) {\n                    rootMenuList = parentEl;\n                }\n                parentEl = parentEl.parentElement;\n            }\n            if (rootMenuList) {\n                const rootMenuListStyles = getComputedStyle(rootMenuList);\n                const rootMenuListPaddingOffset = parseFloat(rootMenuListStyles.getPropertyValue('padding-top').replace(/px/g, '')) +\n                    parseFloat(rootMenuListStyles.getPropertyValue('padding-bottom').replace(/px/g, '')) +\n                    parseFloat(getComputedStyle(rootMenuList.parentElement)\n                        .getPropertyValue('border-bottom-width')\n                        .replace(/px/g, ''));\n                clientHeight = clientHeight + rootMenuListPaddingOffset;\n            }\n            onGetMenuHeight && onGetMenuHeight(menuId, clientHeight);\n            getHeight && getHeight(clientHeight.toString());\n        }\n        return ref || menuContentRef;\n    };\n    return (React.createElement(MenuContext.Consumer, null, ({ menuId, onGetMenuHeight }) => (React.createElement(\"div\", Object.assign({}, rest, { className: css(styles.menuContent, props.className), ref: el => refCallback(el, menuId, onGetMenuHeight), style: Object.assign(Object.assign({}, (menuHeight && { '--pf-c-menu__content--Height': menuHeight })), (maxMenuHeight && { '--pf-c-menu__content--MaxHeight': maxMenuHeight })) }), children))));\n});\nMenuContent.displayName = 'MenuContent';\n//# sourceMappingURL=MenuContent.js.map"]},"metadata":{},"sourceType":"module"}