{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DescriptionList/description-list';\nimport { formatBreakpointMods } from '../../helpers';\nconst setBreakpointModifiers = (prefix, modifiers) => {\n  const mods = modifiers;\n  return Object.keys(mods || {}).reduce((acc, curr) => curr === 'default' ? Object.assign(Object.assign({}, acc), {\n    [prefix]: mods[curr]\n  }) : Object.assign(Object.assign({}, acc), {\n    [`${prefix}-on-${curr}`]: mods[curr]\n  }), {});\n};\nexport const DescriptionList = _a => {\n  var {\n      className = '',\n      children = null,\n      isHorizontal = false,\n      isAutoColumnWidths,\n      isAutoFit,\n      isInlineGrid,\n      isCompact,\n      isFluid,\n      isFillColumns,\n      displaySize,\n      columnModifier,\n      autoFitMinModifier,\n      termWidth,\n      horizontalTermWidthModifier,\n      orientation,\n      style\n    } = _a,\n    props = __rest(_a, [\"className\", \"children\", \"isHorizontal\", \"isAutoColumnWidths\", \"isAutoFit\", \"isInlineGrid\", \"isCompact\", \"isFluid\", \"isFillColumns\", \"displaySize\", \"columnModifier\", \"autoFitMinModifier\", \"termWidth\", \"horizontalTermWidthModifier\", \"orientation\", \"style\"]);\n  if (isAutoFit && autoFitMinModifier) {\n    style = Object.assign(Object.assign({}, style), setBreakpointModifiers('--pf-c-description-list--GridTemplateColumns--min', autoFitMinModifier));\n  }\n  if (termWidth) {\n    style = Object.assign(Object.assign({}, style), {\n      '--pf-c-description-list__term--width': termWidth\n    });\n  }\n  if (isHorizontal && horizontalTermWidthModifier) {\n    style = Object.assign(Object.assign({}, style), setBreakpointModifiers('--pf-c-description-list--m-horizontal__term--width', horizontalTermWidthModifier));\n  }\n  return React.createElement(\"dl\", Object.assign({\n    className: css(styles.descriptionList, (isHorizontal || isFluid) && styles.modifiers.horizontal, isAutoColumnWidths && styles.modifiers.autoColumnWidths, isAutoFit && styles.modifiers.autoFit, formatBreakpointMods(columnModifier, styles), formatBreakpointMods(orientation, styles), isInlineGrid && styles.modifiers.inlineGrid, isCompact && styles.modifiers.compact, isFluid && styles.modifiers.fluid, isFillColumns && styles.modifiers.fillColumns, displaySize === 'lg' && styles.modifiers.displayLg, displaySize === '2xl' && styles.modifiers.display_2xl, className),\n    style: style\n  }, props), children);\n};\nDescriptionList.displayName = 'DescriptionList';","map":{"version":3,"sources":["../../../../src/components/DescriptionList/DescriptionList.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DescriptionList/description-list';\nimport { formatBreakpointMods } from '../../helpers';\nconst setBreakpointModifiers = (prefix, modifiers) => {\n    const mods = modifiers;\n    return Object.keys(mods || {}).reduce((acc, curr) => curr === 'default' ? Object.assign(Object.assign({}, acc), { [prefix]: mods[curr] }) : Object.assign(Object.assign({}, acc), { [`${prefix}-on-${curr}`]: mods[curr] }), {});\n};\nexport const DescriptionList = (_a) => {\n    var { className = '', children = null, isHorizontal = false, isAutoColumnWidths, isAutoFit, isInlineGrid, isCompact, isFluid, isFillColumns, displaySize, columnModifier, autoFitMinModifier, termWidth, horizontalTermWidthModifier, orientation, style } = _a, props = __rest(_a, [\"className\", \"children\", \"isHorizontal\", \"isAutoColumnWidths\", \"isAutoFit\", \"isInlineGrid\", \"isCompact\", \"isFluid\", \"isFillColumns\", \"displaySize\", \"columnModifier\", \"autoFitMinModifier\", \"termWidth\", \"horizontalTermWidthModifier\", \"orientation\", \"style\"]);\n    if (isAutoFit && autoFitMinModifier) {\n        style = Object.assign(Object.assign({}, style), setBreakpointModifiers('--pf-c-description-list--GridTemplateColumns--min', autoFitMinModifier));\n    }\n    if (termWidth) {\n        style = Object.assign(Object.assign({}, style), { '--pf-c-description-list__term--width': termWidth });\n    }\n    if (isHorizontal && horizontalTermWidthModifier) {\n        style = Object.assign(Object.assign({}, style), setBreakpointModifiers('--pf-c-description-list--m-horizontal__term--width', horizontalTermWidthModifier));\n    }\n    return (React.createElement(\"dl\", Object.assign({ className: css(styles.descriptionList, (isHorizontal || isFluid) && styles.modifiers.horizontal, isAutoColumnWidths && styles.modifiers.autoColumnWidths, isAutoFit && styles.modifiers.autoFit, formatBreakpointMods(columnModifier, styles), formatBreakpointMods(orientation, styles), isInlineGrid && styles.modifiers.inlineGrid, isCompact && styles.modifiers.compact, isFluid && styles.modifiers.fluid, isFillColumns && styles.modifiers.fillColumns, displaySize === 'lg' && styles.modifiers.displayLg, displaySize === '2xl' && styles.modifiers.display_2xl, className), style: style }, props), children));\n};\nDescriptionList.displayName = 'DescriptionList';\n//# sourceMappingURL=DescriptionList.js.map"]},"metadata":{},"sourceType":"module"}