{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { CardContext } from './Card';\nimport { Button } from '../Button';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nexport const CardHeader = _a => {\n  var {\n      children = null,\n      className = '',\n      id,\n      onExpand,\n      toggleButtonProps,\n      isToggleRightAligned\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"id\", \"onExpand\", \"toggleButtonProps\", \"isToggleRightAligned\"]);\n  return React.createElement(CardContext.Consumer, null, ({\n    cardId\n  }) => {\n    const cardHeaderToggle = React.createElement(\"div\", {\n      className: css(styles.cardHeaderToggle)\n    }, React.createElement(Button, Object.assign({\n      variant: \"plain\",\n      type: \"button\",\n      onClick: evt => {\n        onExpand(evt, cardId);\n      }\n    }, toggleButtonProps), React.createElement(\"span\", {\n      className: css(styles.cardHeaderToggleIcon)\n    }, React.createElement(AngleRightIcon, {\n      \"aria-hidden\": \"true\"\n    }))));\n    return React.createElement(\"div\", Object.assign({\n      className: css(styles.cardHeader, isToggleRightAligned && styles.modifiers.toggleRight, className),\n      id: id\n    }, props), onExpand && !isToggleRightAligned && cardHeaderToggle, children, onExpand && isToggleRightAligned && cardHeaderToggle);\n  });\n};\nCardHeader.displayName = 'CardHeader';","map":{"version":3,"sources":["../../../../src/components/Card/CardHeader.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,MAAM,MAAM,mDAAmD;AACtE,SAAS,WAAW,QAAQ,QAAQ;AACpC,SAAS,MAAM,QAAQ,WAAW;AAClC,OAAO,cAAc,MAAM,yDAAyD;AAiBpF,OAAO,MAAM,UAAU,GAA8C,EAQnD,IAAI;MAR+C;MACnE,QAAQ,GAAG,IAAI;MACf,SAAS,GAAG,EAAE;MACd,EAAE;MACF,QAAQ;MACR,iBAAiB;MACjB;IAAoB,CAAA,GAAA,EAEJ;IADb,KAAK,GAAA,MAAA,CAAA,EAAA,EAP2D,CAAA,UAAA,EAAA,WAAA,EAAA,IAAA,EAAA,UAAA,EAAA,mBAAA,EAAA,sBAAA,CAQpE,CADS;EACa,OACrB,KAAA,CAAA,aAAA,CAAC,WAAW,CAAC,QAAQ,EAAA,IAAA,EAClB,CAAC;IAAE;EAAM,CAAE,KAAI;IACd,MAAM,gBAAgB,GACpB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,gBAAgB;IAAC,CAAA,EAC1C,KAAA,CAAA,aAAA,CAAC,MAAM,EAAA,MAAA,CAAA,MAAA,CAAA;MACL,OAAO,EAAC,OAAO;MACf,IAAI,EAAC,QAAQ;MACb,OAAO,EAAE,GAAG,IAAG;QACb,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC;MACvB;IAAC,CAAA,EACG,iBAAiB,CAAA,EAErB,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;MAAM,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,oBAAoB;IAAC,CAAA,EAC/C,KAAA,CAAA,aAAA,CAAC,cAAc,EAAA;MAAA,aAAA,EAAa;IAAM,CAAA,CAAG,CAChC,CACA,CAEZ;IAED,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;MACE,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,oBAAoB,IAAI,MAAM,CAAC,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC;MAClG,EAAE,EAAE;IAAE,CAAA,EACF,KAAK,CAAA,EAER,QAAQ,IAAI,CAAC,oBAAoB,IAAI,gBAAgB,EACrD,QAAQ,EACR,QAAQ,IAAI,oBAAoB,IAAI,gBAAgB,CACjD;EAEV,CAAC,CACoB;CACxB;AACD,UAAU,CAAC,WAAW,GAAG,YAAY","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { CardContext } from './Card';\nimport { Button } from '../Button';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nexport const CardHeader = (_a) => {\n    var { children = null, className = '', id, onExpand, toggleButtonProps, isToggleRightAligned } = _a, props = __rest(_a, [\"children\", \"className\", \"id\", \"onExpand\", \"toggleButtonProps\", \"isToggleRightAligned\"]);\n    return (React.createElement(CardContext.Consumer, null, ({ cardId }) => {\n        const cardHeaderToggle = (React.createElement(\"div\", { className: css(styles.cardHeaderToggle) },\n            React.createElement(Button, Object.assign({ variant: \"plain\", type: \"button\", onClick: evt => {\n                    onExpand(evt, cardId);\n                } }, toggleButtonProps),\n                React.createElement(\"span\", { className: css(styles.cardHeaderToggleIcon) },\n                    React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" })))));\n        return (React.createElement(\"div\", Object.assign({ className: css(styles.cardHeader, isToggleRightAligned && styles.modifiers.toggleRight, className), id: id }, props),\n            onExpand && !isToggleRightAligned && cardHeaderToggle,\n            children,\n            onExpand && isToggleRightAligned && cardHeaderToggle));\n    }));\n};\nCardHeader.displayName = 'CardHeader';\n//# sourceMappingURL=CardHeader.js.map"]},"metadata":{},"sourceType":"module"}