{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button';\nimport PencilAltIcon from '@patternfly/react-icons/dist/esm/icons/pencil-alt-icon';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport { css } from '@patternfly/react-styles';\nexport const EditColumn = _a => {\n  var {\n      onClick = null,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      className = '',\n      editing,\n      valid,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      saveAriaLabel,\n      cancelAriaLabel,\n      editAriaLabel\n    } = _a,\n    props = __rest(_a, [\"onClick\", \"className\", \"editing\", \"valid\", \"saveAriaLabel\", \"cancelAriaLabel\", \"editAriaLabel\"]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: css(inlineStyles.inlineEditGroup, inlineStyles.modifiers.iconGroup, 'pf-m-action-group')\n  }, React.createElement(\"div\", {\n    className: css(inlineStyles.inlineEditAction)\n  }, React.createElement(Button, Object.assign({\n    \"aria-label\": saveAriaLabel\n  }, props, {\n    onClick: e => onClick(e, 'save'),\n    variant: \"plain\"\n  }), React.createElement(CheckIcon, null))), React.createElement(\"div\", {\n    className: css(inlineStyles.inlineEditAction)\n  }, React.createElement(Button, Object.assign({\n    \"aria-label\": cancelAriaLabel\n  }, props, {\n    onClick: e => onClick(e, 'cancel'),\n    variant: \"plain\"\n  }), React.createElement(TimesIcon, null)))), React.createElement(\"div\", {\n    className: css(inlineStyles.inlineEditAction, inlineStyles.modifiers.enableEditable)\n  }, React.createElement(Button, Object.assign({\n    \"aria-label\": editAriaLabel\n  }, props, {\n    onClick: e => onClick(e, 'edit'),\n    variant: \"plain\"\n  }), React.createElement(PencilAltIcon, null))));\n};\nEditColumn.displayName = 'EditColumn';","map":{"version":3,"sources":["../../../../src/components/Table/EditColumn.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,MAAM,QAAQ,mDAAmD;AAC1E,OAAO,aAAa,MAAM,wDAAwD;AAClF,OAAO,SAAS,MAAM,mDAAmD;AACzE,OAAO,SAAS,MAAM,mDAAmD;AAEzE,OAAO,YAAY,MAAM,gEAAgE;AACzF,SAAS,GAAG,QAAQ,0BAA0B;AAa9C,OAAO,MAAM,UAAU,GAA8C,EAWnD,IAAI;MAX+C;MACnE,OAAO,GAAG,IAAI;MACd;MACA,SAAS,GAAG,EAAE;MACd,OAAO;MACP,KAAK;MACL;MACA,aAAa;MACb,eAAe;MACf;IAAa,CAAA,GAAA,EAEG;IADb,KAAK,GAAA,MAAA,CAAA,EAAA,EAV2D,CAAA,SAAA,EAAA,WAAA,EAAA,SAAA,EAAA,OAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,eAAA,CAWpE,CADS;EACa,OACrB,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAQ,EAAA,IAAA,EACb,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAE,GAAG,CAAC,YAAY,CAAC,eAAe,EAAE,YAAY,CAAC,SAAS,CAAC,SAAS,EAAE,mBAAmB;EAAC,CAAA,EACtG,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAE,GAAG,CAAC,YAAY,CAAC,gBAAgB;EAAC,CAAA,EAChD,KAAA,CAAA,aAAA,CAAC,MAAM,EAAA,MAAA,CAAA,MAAA,CAAA;IAAA,YAAA,EAAa;EAAa,CAAA,EAAM,KAAK,EAAA;IAAE,OAAO,EAAE,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC;IAAE,OAAO,EAAC;EAAO,CAAA,CAAA,EAC7F,KAAA,CAAA,aAAA,CAAC,SAAS,EAAA,IAAA,CAAG,CACN,CACL,EACN,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAE,GAAG,CAAC,YAAY,CAAC,gBAAgB;EAAC,CAAA,EAChD,KAAA,CAAA,aAAA,CAAC,MAAM,EAAA,MAAA,CAAA,MAAA,CAAA;IAAA,YAAA,EAAa;EAAe,CAAA,EAAM,KAAK,EAAA;IAAE,OAAO,EAAE,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,QAAQ,CAAC;IAAE,OAAO,EAAC;EAAO,CAAA,CAAA,EACjG,KAAA,CAAA,aAAA,CAAC,SAAS,EAAA,IAAA,CAAG,CACN,CACL,CACF,EACN,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAE,GAAG,CAAC,YAAY,CAAC,gBAAgB,EAAE,YAAY,CAAC,SAAS,CAAC,cAAc;EAAC,CAAA,EACvF,KAAA,CAAA,aAAA,CAAC,MAAM,EAAA,MAAA,CAAA,MAAA,CAAA;IAAA,YAAA,EAAa;EAAa,CAAA,EAAM,KAAK,EAAA;IAAE,OAAO,EAAE,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC;IAAE,OAAO,EAAC;EAAO,CAAA,CAAA,EAC7F,KAAA,CAAA,aAAA,CAAC,aAAa,EAAA,IAAA,CAAG,CACV,CACL,CACS;CAClB;AACD,UAAU,CAAC,WAAW,GAAG,YAAY","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button';\nimport PencilAltIcon from '@patternfly/react-icons/dist/esm/icons/pencil-alt-icon';\nimport CheckIcon from '@patternfly/react-icons/dist/esm/icons/check-icon';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport inlineStyles from '@patternfly/react-styles/css/components/InlineEdit/inline-edit';\nimport { css } from '@patternfly/react-styles';\nexport const EditColumn = (_a) => {\n    var { onClick = null, \n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    className = '', editing, valid, \n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    saveAriaLabel, cancelAriaLabel, editAriaLabel } = _a, props = __rest(_a, [\"onClick\", \"className\", \"editing\", \"valid\", \"saveAriaLabel\", \"cancelAriaLabel\", \"editAriaLabel\"]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: css(inlineStyles.inlineEditGroup, inlineStyles.modifiers.iconGroup, 'pf-m-action-group') },\n            React.createElement(\"div\", { className: css(inlineStyles.inlineEditAction) },\n                React.createElement(Button, Object.assign({ \"aria-label\": saveAriaLabel }, props, { onClick: e => onClick(e, 'save'), variant: \"plain\" }),\n                    React.createElement(CheckIcon, null))),\n            React.createElement(\"div\", { className: css(inlineStyles.inlineEditAction) },\n                React.createElement(Button, Object.assign({ \"aria-label\": cancelAriaLabel }, props, { onClick: e => onClick(e, 'cancel'), variant: \"plain\" }),\n                    React.createElement(TimesIcon, null)))),\n        React.createElement(\"div\", { className: css(inlineStyles.inlineEditAction, inlineStyles.modifiers.enableEditable) },\n            React.createElement(Button, Object.assign({ \"aria-label\": editAriaLabel }, props, { onClick: e => onClick(e, 'edit'), variant: \"plain\" }),\n                React.createElement(PencilAltIcon, null)))));\n};\nEditColumn.displayName = 'EditColumn';\n//# sourceMappingURL=EditColumn.js.map"]},"metadata":{},"sourceType":"module"}