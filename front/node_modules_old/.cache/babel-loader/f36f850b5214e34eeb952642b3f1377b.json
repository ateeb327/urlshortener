{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport Dropzone from 'react-dropzone';\nimport styles from '@patternfly/react-styles/css/components/MultipleFileUpload/multiple-file-upload';\nimport { css } from '@patternfly/react-styles';\nexport const MultipleFileUploadContext = React.createContext({\n  open: () => {}\n});\nexport const MultipleFileUpload = _a => {\n  var {\n      className,\n      children,\n      dropzoneProps = {},\n      isHorizontal,\n      onFileDrop = () => {}\n    } = _a,\n    props = __rest(_a, [\"className\", \"children\", \"dropzoneProps\", \"isHorizontal\", \"onFileDrop\"]);\n  const onDropAccepted = (acceptedFiles, event) => {\n    onFileDrop(acceptedFiles);\n    // allow users to set a custom drop accepted handler rather than using on data change\n    dropzoneProps.onDropAccepted && dropzoneProps.onDropAccepted(acceptedFiles, event);\n  };\n  const onDropRejected = (rejectedFiles, event) => {\n    dropzoneProps.onDropRejected && (dropzoneProps === null || dropzoneProps === void 0 ? void 0 : dropzoneProps.onDropRejected(rejectedFiles, event));\n  };\n  return React.createElement(Dropzone, Object.assign({\n    multiple: true\n  }, dropzoneProps, {\n    onDropAccepted: onDropAccepted,\n    onDropRejected: onDropRejected\n  }), ({\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    open\n  }) => {\n    const rootProps = getRootProps(Object.assign(Object.assign({}, props), {\n      onClick: event => event.preventDefault() // Prevents clicking TextArea from opening file dialog\n    }));\n    const inputProps = getInputProps();\n    return React.createElement(MultipleFileUploadContext.Provider, {\n      value: {\n        open\n      }\n    }, React.createElement(\"div\", Object.assign({\n      className: css(styles.multipleFileUpload, isDragActive && styles.modifiers.dragOver, isHorizontal && styles.modifiers.horizontal, className)\n    }, rootProps, props), React.createElement(\"input\", Object.assign({}, inputProps)), children));\n  });\n};\nMultipleFileUpload.displayName = 'MultipleFileUpload';","map":{"version":3,"sources":["../../../../src/components/MultipleFileUpload/MultipleFileUpload.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,OAAO,QAAiD,MAAM,gBAAgB;AAC9E,OAAO,MAAM,MAAM,iFAAiF;AACpG,SAAS,GAAG,QAAQ,0BAA0B;AAoB9C,OAAO,MAAM,yBAAyB,GAAG,KAAK,CAAC,aAAa,CAAC;EAC3D,IAAI,EAAE,CAAA,KAAK,CAAE;CACd,CAAC;AAEF,OAAO,MAAM,kBAAkB,GAAsD,EAO3D,IAAI;MAPuD;MACnF,SAAS;MACT,QAAQ;MACR,aAAa,GAAG,CAAA,CAAE;MAClB,YAAY;MACZ,UAAU,GAAG,CAAA,KAAK,CAAE;IAAC,CAAA,GAAA,EAEG;IADrB,KAAK,GAAA,MAAA,CAAA,EAAA,EAN2E,CAAA,WAAA,EAAA,UAAA,EAAA,eAAA,EAAA,cAAA,EAAA,YAAA,CAOpF,CADS;EAER,MAAM,cAAc,GAAyB,CAAC,aAAqB,EAAE,KAAK,KAAI;IAC5E,UAAU,CAAC,aAAa,CAAC;IACzB;IACA,aAAa,CAAC,cAAc,IAAI,aAAa,CAAC,cAAc,CAAC,aAAa,EAAE,KAAK,CAAC;EACpF,CAAC;EAED,MAAM,cAAc,GAAyB,CAAC,aAAa,EAAE,KAAK,KAAI;IACpE,aAAa,CAAC,cAAc,KAAI,aAAa,KAAA,IAAA,IAAb,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAb,aAAa,CAAE,cAAc,CAAC,aAAa,EAAE,KAAK,CAAC,CAAA;EACrF,CAAC;EAED,OACE,KAAA,CAAA,aAAA,CAAC,QAAQ,EAAA,MAAA,CAAA,MAAA,CAAA;IAAC,QAAQ,EAAE;EAAI,CAAA,EAAM,aAAa,EAAA;IAAE,cAAc,EAAE,cAAc;IAAE,cAAc,EAAE;EAAc,CAAA,CAAA,EACxG,CAAC;IAAE,YAAY;IAAE,aAAa;IAAE,YAAY;IAAE;EAAI,CAAE,KAAI;IACvD,MAAM,SAAS,GAAG,YAAY,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EACzB,KAAK,CAAA,EAAA;MACR,OAAO,EAAE,KAAK,IAAI,KAAK,CAAC,cAAc,CAAA,CAAE,CAAC;OACzC;IACF,MAAM,UAAU,GAAG,aAAa,CAAA,CAAE;IAElC,OACE,KAAA,CAAA,aAAA,CAAC,yBAAyB,CAAC,QAAQ,EAAA;MAAC,KAAK,EAAE;QAAE;MAAI;IAAE,CAAA,EACjD,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;MACE,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,kBAAkB,EACzB,YAAY,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,EACzC,YAAY,IAAI,MAAM,CAAC,SAAS,CAAC,UAAU,EAC3C,SAAS;IACV,CAAA,EACG,SAAS,EACT,KAAK,CAAA,EAET,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAEM,UAAU,CAAA,CACd,EACD,QAAQ,CACL,CAC6B;EAEzC,CAAC,CACQ;AAEf,CAAC;AAED,kBAAkB,CAAC,WAAW,GAAG,oBAAoB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport Dropzone from 'react-dropzone';\nimport styles from '@patternfly/react-styles/css/components/MultipleFileUpload/multiple-file-upload';\nimport { css } from '@patternfly/react-styles';\nexport const MultipleFileUploadContext = React.createContext({\n    open: () => { }\n});\nexport const MultipleFileUpload = (_a) => {\n    var { className, children, dropzoneProps = {}, isHorizontal, onFileDrop = () => { } } = _a, props = __rest(_a, [\"className\", \"children\", \"dropzoneProps\", \"isHorizontal\", \"onFileDrop\"]);\n    const onDropAccepted = (acceptedFiles, event) => {\n        onFileDrop(acceptedFiles);\n        // allow users to set a custom drop accepted handler rather than using on data change\n        dropzoneProps.onDropAccepted && dropzoneProps.onDropAccepted(acceptedFiles, event);\n    };\n    const onDropRejected = (rejectedFiles, event) => {\n        dropzoneProps.onDropRejected && (dropzoneProps === null || dropzoneProps === void 0 ? void 0 : dropzoneProps.onDropRejected(rejectedFiles, event));\n    };\n    return (React.createElement(Dropzone, Object.assign({ multiple: true }, dropzoneProps, { onDropAccepted: onDropAccepted, onDropRejected: onDropRejected }), ({ getRootProps, getInputProps, isDragActive, open }) => {\n        const rootProps = getRootProps(Object.assign(Object.assign({}, props), { onClick: event => event.preventDefault() // Prevents clicking TextArea from opening file dialog\n         }));\n        const inputProps = getInputProps();\n        return (React.createElement(MultipleFileUploadContext.Provider, { value: { open } },\n            React.createElement(\"div\", Object.assign({ className: css(styles.multipleFileUpload, isDragActive && styles.modifiers.dragOver, isHorizontal && styles.modifiers.horizontal, className) }, rootProps, props),\n                React.createElement(\"input\", Object.assign({}, inputProps)),\n                children)));\n    }));\n};\nMultipleFileUpload.displayName = 'MultipleFileUpload';\n//# sourceMappingURL=MultipleFileUpload.js.map"]},"metadata":{},"sourceType":"module"}