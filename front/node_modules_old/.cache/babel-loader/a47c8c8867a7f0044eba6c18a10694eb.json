{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/SimpleList/simple-list';\nimport { SimpleListContext } from './SimpleList';\nexport class SimpleListItem extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.ref = React.createRef();\n  }\n  render() {\n    const _a = this.props,\n      {\n        children,\n        isCurrent,\n        isActive,\n        className,\n        component: Component,\n        componentClassName,\n        componentProps,\n        onClick,\n        type,\n        href,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        itemId\n      } = _a,\n      props = __rest(_a, [\"children\", \"isCurrent\", \"isActive\", \"className\", \"component\", \"componentClassName\", \"componentProps\", \"onClick\", \"type\", \"href\", \"itemId\"]);\n    return React.createElement(SimpleListContext.Consumer, null, ({\n      currentRef,\n      updateCurrentRef,\n      isControlled\n    }) => {\n      const isButton = Component === 'button';\n      const isCurrentItem = this.ref && currentRef && isControlled ? currentRef.current === this.ref.current : isActive || isCurrent;\n      const additionalComponentProps = isButton ? {\n        type\n      } : {\n        tabIndex: 0,\n        href\n      };\n      return React.createElement(\"li\", Object.assign({\n        className: css(className)\n      }, props), React.createElement(Component, Object.assign({\n        className: css(styles.simpleListItemLink, isCurrentItem && styles.modifiers.current, componentClassName),\n        onClick: evt => {\n          onClick(evt);\n          updateCurrentRef(this.ref, this.props);\n        },\n        ref: this.ref\n      }, componentProps, additionalComponentProps), children));\n    });\n  }\n}\nSimpleListItem.displayName = 'SimpleListItem';\nSimpleListItem.defaultProps = {\n  children: null,\n  className: '',\n  isActive: false,\n  isCurrent: false,\n  component: 'button',\n  componentClassName: '',\n  type: 'button',\n  href: '',\n  onClick: () => {}\n};","map":{"version":3,"sources":["../../../../src/components/SimpleList/SimpleListItem.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,MAAM,MAAM,gEAAgE;AACnF,SAAS,iBAAiB,QAAQ,cAAc;AA2BhD,OAAM,MAAO,cAAe,SAAQ,KAAK,CAAC,SAA8B,CAAA;EAAxE,WAAA,CAAA,EAAA;;IAEE,IAAA,CAAA,GAAG,GAAG,KAAK,CAAC,SAAS,CAAA,CAAO;EAqE9B;EAxDE,MAAM,CAAA,EAAA;IACJ,MAAM,EAAA,GAcF,IAAI,CAAC,KAAK;MAdR;QACJ,QAAQ;QACR,SAAS;QACT,QAAQ;QACR,SAAS;QACT,SAAS,EAAE,SAAS;QACpB,kBAAkB;QAClB,cAAc;QACd,OAAO;QACP,IAAI;QACJ,IAAI;QACJ;QACA;MAAM,CAAA,GAAA,EAEM;MADT,KAAK,GAAA,MAAA,CAAA,EAAA,EAbJ,CAAA,UAAA,EAAA,WAAA,EAAA,UAAA,EAAA,WAAA,EAAA,WAAA,EAAA,oBAAA,EAAA,gBAAA,EAAA,SAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,CAcL,CAAa;IACd,OACE,KAAA,CAAA,aAAA,CAAC,iBAAiB,CAAC,QAAQ,EAAA,IAAA,EACxB,CAAC;MAAE,UAAU;MAAE,gBAAgB;MAAE;IAAY,CAAE,KAAI;MAClD,MAAM,QAAQ,GAAG,SAAS,KAAK,QAAQ;MACvC,MAAM,aAAa,GACjB,IAAI,CAAC,GAAG,IAAI,UAAU,IAAI,YAAY,GAAG,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,QAAQ,IAAI,SAAS;MAE1G,MAAM,wBAAwB,GAAG,QAAQ,GACrC;QACE;OACD,GACD;QACE,QAAQ,EAAE,CAAC;QACX;OACD;MAEL,OACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,MAAA,CAAA,MAAA,CAAA;QAAI,SAAS,EAAE,GAAG,CAAC,SAAS;MAAC,CAAA,EAAM,KAAK,CAAA,EACtC,KAAA,CAAA,aAAA,CAAC,SAAS,EAAA,MAAA,CAAA,MAAA,CAAA;QACR,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,kBAAkB,EACzB,aAAa,IAAI,MAAM,CAAC,SAAS,CAAC,OAAO,EACzC,kBAAkB,CACnB;QACD,OAAO,EAAG,GAAqB,IAAI;UACjC,OAAO,CAAC,GAAG,CAAC;UACZ,gBAAgB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC;QACxC,CAAC;QACD,GAAG,EAAE,IAAI,CAAC;MAAG,CAAA,EACT,cAAc,EACd,wBAAwB,CAAA,EAE3B,QAAQ,CACC,CACT;IAET,CAAC,CAC0B;EAEjC;;AArEO,cAAA,CAAA,WAAW,GAAG,gBAAgB;AAE9B,cAAA,CAAA,YAAY,GAAwB;EACzC,QAAQ,EAAE,IAAI;EACd,SAAS,EAAE,EAAE;EACb,QAAQ,EAAE,KAAK;EACf,SAAS,EAAE,KAAK;EAChB,SAAS,EAAE,QAAQ;EACnB,kBAAkB,EAAE,EAAE;EACtB,IAAI,EAAE,QAAQ;EACd,IAAI,EAAE,EAAE;EACR,OAAO,EAAE,CAAA,KAAK,CAAE;CACjB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/SimpleList/simple-list';\nimport { SimpleListContext } from './SimpleList';\nexport class SimpleListItem extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.ref = React.createRef();\n    }\n    render() {\n        const _a = this.props, { children, isCurrent, isActive, className, component: Component, componentClassName, componentProps, onClick, type, href, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        itemId } = _a, props = __rest(_a, [\"children\", \"isCurrent\", \"isActive\", \"className\", \"component\", \"componentClassName\", \"componentProps\", \"onClick\", \"type\", \"href\", \"itemId\"]);\n        return (React.createElement(SimpleListContext.Consumer, null, ({ currentRef, updateCurrentRef, isControlled }) => {\n            const isButton = Component === 'button';\n            const isCurrentItem = this.ref && currentRef && isControlled ? currentRef.current === this.ref.current : isActive || isCurrent;\n            const additionalComponentProps = isButton\n                ? {\n                    type\n                }\n                : {\n                    tabIndex: 0,\n                    href\n                };\n            return (React.createElement(\"li\", Object.assign({ className: css(className) }, props),\n                React.createElement(Component, Object.assign({ className: css(styles.simpleListItemLink, isCurrentItem && styles.modifiers.current, componentClassName), onClick: (evt) => {\n                        onClick(evt);\n                        updateCurrentRef(this.ref, this.props);\n                    }, ref: this.ref }, componentProps, additionalComponentProps), children)));\n        }));\n    }\n}\nSimpleListItem.displayName = 'SimpleListItem';\nSimpleListItem.defaultProps = {\n    children: null,\n    className: '',\n    isActive: false,\n    isCurrent: false,\n    component: 'button',\n    componentClassName: '',\n    type: 'button',\n    href: '',\n    onClick: () => { }\n};\n//# sourceMappingURL=SimpleListItem.js.map"]},"metadata":{},"sourceType":"module"}