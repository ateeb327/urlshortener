{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Banner/banner';\nimport { css } from '@patternfly/react-styles';\nexport const Banner = _a => {\n  var {\n      children,\n      className,\n      variant = 'default',\n      screenReaderText,\n      isSticky = false\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"variant\", \"screenReaderText\", \"isSticky\"]);\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.banner, styles.modifiers[variant], isSticky && styles.modifiers.sticky, className)\n  }, props), screenReaderText && React.createElement(\"span\", {\n    className: \"pf-u-screen-reader\"\n  }, screenReaderText), children);\n};\nBanner.displayName = 'Banner';","map":{"version":3,"sources":["../../../../src/components/Banner/Banner.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,OAAO,MAAM,MAAM,uDAAuD;AAC1E,SAAS,GAAG,QAAQ,0BAA0B;AAiB9C,OAAO,MAAM,MAAM,GAA0C,EAO/C,IAAI;MAP2C;MAC3D,QAAQ;MACR,SAAS;MACT,OAAO,GAAG,SAAS;MACnB,gBAAgB;MAChB,QAAQ,GAAG;IAAK,CAAA,GAAA,EAEJ;IADT,KAAK,GAAA,MAAA,CAAA,EAAA,EANmD,CAAA,UAAA,EAAA,WAAA,EAAA,SAAA,EAAA,kBAAA,EAAA,UAAA,CAO5D,CADS;EACS,OACjB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;IACE,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,MAAM,EACb,MAAM,CAAC,SAAS,CAAC,OAAoD,CAAC,EACtE,QAAQ,IAAI,MAAM,CAAC,SAAS,CAAC,MAAM,EACnC,SAAS;EACV,CAAA,EACG,KAAK,CAAA,EAER,gBAAgB,IAAI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAC;EAAoB,CAAA,EAAE,gBAAgB,CAAQ,EAClF,QAAQ,CACL;CACP;AACD,MAAM,CAAC,WAAW,GAAG,QAAQ","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Banner/banner';\nimport { css } from '@patternfly/react-styles';\nexport const Banner = (_a) => {\n    var { children, className, variant = 'default', screenReaderText, isSticky = false } = _a, props = __rest(_a, [\"children\", \"className\", \"variant\", \"screenReaderText\", \"isSticky\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.banner, styles.modifiers[variant], isSticky && styles.modifiers.sticky, className) }, props),\n        screenReaderText && React.createElement(\"span\", { className: \"pf-u-screen-reader\" }, screenReaderText),\n        children));\n};\nBanner.displayName = 'Banner';\n//# sourceMappingURL=Banner.js.map"]},"metadata":{},"sourceType":"module"}