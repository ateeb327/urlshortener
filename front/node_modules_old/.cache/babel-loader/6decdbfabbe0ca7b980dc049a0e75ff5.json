{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownMenu } from './DropdownMenu';\nimport { DropdownContext, DropdownDirection, DropdownPosition } from './dropdownConstants';\nimport { getOUIAProps } from '../../helpers';\nimport { Popper } from '../../helpers/Popper/Popper';\nexport class DropdownWithContext extends React.Component {\n  constructor(props) {\n    super(props);\n    this.openedOnEnter = false;\n    this.baseComponentRef = React.createRef();\n    this.menuComponentRef = React.createRef();\n    this.onEnter = () => {\n      this.openedOnEnter = true;\n    };\n    this.setMenuComponentRef = element => {\n      this.menuComponentRef = element;\n    };\n    this.getMenuComponentRef = () => this.menuComponentRef;\n    if (props.dropdownItems && props.dropdownItems.length > 0 && props.children) {\n      // eslint-disable-next-line no-console\n      console.error('Children and dropdownItems props have been provided. Only the dropdownItems prop items will be rendered');\n    }\n  }\n  componentDidUpdate() {\n    if (!this.props.isOpen) {\n      this.openedOnEnter = false;\n    }\n  }\n  render() {\n    const _a = this.props,\n      {\n        children,\n        className,\n        direction,\n        dropdownItems,\n        isOpen,\n        isPlain,\n        isText,\n        isGrouped,\n        isFullHeight,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onSelect,\n        position,\n        toggle,\n        autoFocus,\n        menuAppendTo,\n        isFlipEnabled,\n        removeFindDomNode,\n        zIndex\n      } = _a,\n      props = __rest(_a, [\"children\", \"className\", \"direction\", \"dropdownItems\", \"isOpen\", \"isPlain\", \"isText\", \"isGrouped\", \"isFullHeight\", \"onSelect\", \"position\", \"toggle\", \"autoFocus\", \"menuAppendTo\", \"isFlipEnabled\", \"removeFindDomNode\", \"zIndex\"]);\n    const id = toggle.props.id || `pf-dropdown-toggle-id-${DropdownWithContext.currentId++}`;\n    let component;\n    let renderedContent;\n    let ariaHasPopup = false;\n    if (dropdownItems && dropdownItems.length > 0) {\n      component = 'ul';\n      renderedContent = dropdownItems;\n      ariaHasPopup = true;\n    } else {\n      component = 'div';\n      renderedContent = React.Children.toArray(children);\n    }\n    const openedOnEnter = this.openedOnEnter;\n    const isStatic = isFlipEnabled && menuAppendTo !== 'inline';\n    return React.createElement(DropdownContext.Consumer, null, ({\n      baseClass,\n      baseComponent,\n      id: contextId,\n      ouiaId,\n      ouiaComponentType,\n      ouiaSafe,\n      alignments\n    }) => {\n      const BaseComponent = baseComponent;\n      const menuContainer = React.createElement(DropdownMenu, {\n        className: css(isStatic && styles.modifiers.static),\n        setMenuComponentRef: this.setMenuComponentRef,\n        component: component,\n        isOpen: isOpen,\n        position: position,\n        \"aria-labelledby\": contextId ? `${contextId}-toggle` : id,\n        isGrouped: isGrouped,\n        autoFocus: openedOnEnter && autoFocus,\n        alignments: alignments\n      }, renderedContent);\n      const popperContainer = React.createElement(\"div\", {\n        className: css(baseClass, direction === DropdownDirection.up && styles.modifiers.top, position === DropdownPosition.right && styles.modifiers.alignRight, isOpen && styles.modifiers.expanded, className)\n      }, isOpen && menuContainer);\n      const mainContainer = React.createElement(BaseComponent, Object.assign({}, props, {\n        className: css(baseClass, direction === DropdownDirection.up && styles.modifiers.top, position === DropdownPosition.right && styles.modifiers.alignRight, isOpen && styles.modifiers.expanded, isFullHeight && styles.modifiers.fullHeight, className),\n        ref: this.baseComponentRef\n      }, getOUIAProps(ouiaComponentType, ouiaId, ouiaSafe)), React.Children.map(toggle, oneToggle => React.cloneElement(oneToggle, {\n        parentRef: this.baseComponentRef,\n        getMenuRef: this.getMenuComponentRef,\n        isOpen,\n        id,\n        isPlain,\n        isText,\n        'aria-haspopup': ariaHasPopup,\n        onEnter: () => {\n          this.onEnter();\n          oneToggle.props.onEnter && oneToggle.props.onEnter();\n        }\n      })), menuAppendTo === 'inline' && isOpen && menuContainer);\n      const getParentElement = () => {\n        if (this.baseComponentRef && this.baseComponentRef.current) {\n          return this.baseComponentRef.current.parentElement;\n        }\n        return null;\n      };\n      return menuAppendTo === 'inline' ? mainContainer : React.createElement(Popper, {\n        trigger: mainContainer,\n        popper: popperContainer,\n        direction: direction,\n        position: position,\n        appendTo: menuAppendTo === 'parent' ? getParentElement() : menuAppendTo,\n        isVisible: isOpen,\n        removeFindDomNode: removeFindDomNode,\n        zIndex: zIndex,\n        popperMatchesTriggerWidth: false\n      });\n    });\n  }\n}\nDropdownWithContext.displayName = 'DropdownWithContext';\n// seed for the aria-labelledby ID\nDropdownWithContext.currentId = 0;\nDropdownWithContext.defaultProps = {\n  className: '',\n  dropdownItems: [],\n  isOpen: false,\n  isPlain: false,\n  isText: false,\n  isGrouped: false,\n  position: DropdownPosition.left,\n  direction: DropdownDirection.down,\n  onSelect: () => undefined,\n  autoFocus: true,\n  menuAppendTo: 'inline',\n  isFlipEnabled: true\n};","map":{"version":3,"sources":["../../../../src/components/Dropdown/DropdownWithContext.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownMenu } from './DropdownMenu';\nimport { DropdownContext, DropdownDirection, DropdownPosition } from './dropdownConstants';\nimport { getOUIAProps } from '../../helpers';\nimport { Popper } from '../../helpers/Popper/Popper';\nexport class DropdownWithContext extends React.Component {\n    constructor(props) {\n        super(props);\n        this.openedOnEnter = false;\n        this.baseComponentRef = React.createRef();\n        this.menuComponentRef = React.createRef();\n        this.onEnter = () => {\n            this.openedOnEnter = true;\n        };\n        this.setMenuComponentRef = (element) => {\n            this.menuComponentRef = element;\n        };\n        this.getMenuComponentRef = () => this.menuComponentRef;\n        if (props.dropdownItems && props.dropdownItems.length > 0 && props.children) {\n            // eslint-disable-next-line no-console\n            console.error('Children and dropdownItems props have been provided. Only the dropdownItems prop items will be rendered');\n        }\n    }\n    componentDidUpdate() {\n        if (!this.props.isOpen) {\n            this.openedOnEnter = false;\n        }\n    }\n    render() {\n        const _a = this.props, { children, className, direction, dropdownItems, isOpen, isPlain, isText, isGrouped, isFullHeight, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onSelect, position, toggle, autoFocus, menuAppendTo, isFlipEnabled, removeFindDomNode, zIndex } = _a, props = __rest(_a, [\"children\", \"className\", \"direction\", \"dropdownItems\", \"isOpen\", \"isPlain\", \"isText\", \"isGrouped\", \"isFullHeight\", \"onSelect\", \"position\", \"toggle\", \"autoFocus\", \"menuAppendTo\", \"isFlipEnabled\", \"removeFindDomNode\", \"zIndex\"]);\n        const id = toggle.props.id || `pf-dropdown-toggle-id-${DropdownWithContext.currentId++}`;\n        let component;\n        let renderedContent;\n        let ariaHasPopup = false;\n        if (dropdownItems && dropdownItems.length > 0) {\n            component = 'ul';\n            renderedContent = dropdownItems;\n            ariaHasPopup = true;\n        }\n        else {\n            component = 'div';\n            renderedContent = React.Children.toArray(children);\n        }\n        const openedOnEnter = this.openedOnEnter;\n        const isStatic = isFlipEnabled && menuAppendTo !== 'inline';\n        return (React.createElement(DropdownContext.Consumer, null, ({ baseClass, baseComponent, id: contextId, ouiaId, ouiaComponentType, ouiaSafe, alignments }) => {\n            const BaseComponent = baseComponent;\n            const menuContainer = (React.createElement(DropdownMenu, { className: css(isStatic && styles.modifiers.static), setMenuComponentRef: this.setMenuComponentRef, component: component, isOpen: isOpen, position: position, \"aria-labelledby\": contextId ? `${contextId}-toggle` : id, isGrouped: isGrouped, autoFocus: openedOnEnter && autoFocus, alignments: alignments }, renderedContent));\n            const popperContainer = (React.createElement(\"div\", { className: css(baseClass, direction === DropdownDirection.up && styles.modifiers.top, position === DropdownPosition.right && styles.modifiers.alignRight, isOpen && styles.modifiers.expanded, className) }, isOpen && menuContainer));\n            const mainContainer = (React.createElement(BaseComponent, Object.assign({}, props, { className: css(baseClass, direction === DropdownDirection.up && styles.modifiers.top, position === DropdownPosition.right && styles.modifiers.alignRight, isOpen && styles.modifiers.expanded, isFullHeight && styles.modifiers.fullHeight, className), ref: this.baseComponentRef }, getOUIAProps(ouiaComponentType, ouiaId, ouiaSafe)),\n                React.Children.map(toggle, oneToggle => React.cloneElement(oneToggle, {\n                    parentRef: this.baseComponentRef,\n                    getMenuRef: this.getMenuComponentRef,\n                    isOpen,\n                    id,\n                    isPlain,\n                    isText,\n                    'aria-haspopup': ariaHasPopup,\n                    onEnter: () => {\n                        this.onEnter();\n                        oneToggle.props.onEnter && oneToggle.props.onEnter();\n                    }\n                })),\n                menuAppendTo === 'inline' && isOpen && menuContainer));\n            const getParentElement = () => {\n                if (this.baseComponentRef && this.baseComponentRef.current) {\n                    return this.baseComponentRef.current.parentElement;\n                }\n                return null;\n            };\n            return menuAppendTo === 'inline' ? (mainContainer) : (React.createElement(Popper, { trigger: mainContainer, popper: popperContainer, direction: direction, position: position, appendTo: menuAppendTo === 'parent' ? getParentElement() : menuAppendTo, isVisible: isOpen, removeFindDomNode: removeFindDomNode, zIndex: zIndex, popperMatchesTriggerWidth: false }));\n        }));\n    }\n}\nDropdownWithContext.displayName = 'DropdownWithContext';\n// seed for the aria-labelledby ID\nDropdownWithContext.currentId = 0;\nDropdownWithContext.defaultProps = {\n    className: '',\n    dropdownItems: [],\n    isOpen: false,\n    isPlain: false,\n    isText: false,\n    isGrouped: false,\n    position: DropdownPosition.left,\n    direction: DropdownDirection.down,\n    onSelect: () => undefined,\n    autoFocus: true,\n    menuAppendTo: 'inline',\n    isFlipEnabled: true\n};\n//# sourceMappingURL=DropdownWithContext.js.map"]},"metadata":{},"sourceType":"module"}