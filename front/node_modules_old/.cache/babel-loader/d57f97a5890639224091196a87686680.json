{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/EmptyState/empty-state';\nexport const EmptyStateIcon = _a => {\n  var {\n      className = '',\n      icon: IconComponent,\n      component: AnyComponent,\n      variant = 'icon'\n    } = _a,\n    props = __rest(_a, [\"className\", \"icon\", \"component\", \"variant\"]);\n  const classNames = css(styles.emptyStateIcon, className);\n  return variant === 'icon' ? React.createElement(IconComponent, Object.assign({\n    className: classNames\n  }, props, {\n    \"aria-hidden\": \"true\"\n  })) : React.createElement(\"div\", {\n    className: classNames\n  }, React.createElement(AnyComponent, null));\n};\nEmptyStateIcon.displayName = 'EmptyStateIcon';","map":{"version":3,"sources":["../../../../src/components/EmptyState/EmptyStateIcon.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,MAAM,MAAM,gEAAgE;AAoBnF,OAAO,MAAM,cAAc,GAAkD,EAMvD,IAAI;MANmD;MAC3E,SAAS,GAAG,EAAE;MACd,IAAI,EAAE,aAAa;MACnB,SAAS,EAAE,YAAY;MACvB,OAAO,GAAG;IAAM,CAAA,GAAA,EAEI;IADjB,KAAK,GAAA,MAAA,CAAA,EAAA,EALmE,CAAA,WAAA,EAAA,MAAA,EAAA,WAAA,EAAA,SAAA,CAM5E,CADS;EAER,MAAM,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC,cAAc,EAAE,SAAS,CAAC;EACxD,OAAO,OAAO,KAAK,MAAM,GACvB,KAAA,CAAA,aAAA,CAAC,aAAa,EAAA,MAAA,CAAA,MAAA,CAAA;IAAC,SAAS,EAAE;EAAU,CAAA,EAAM,KAAK,EAAA;IAAA,aAAA,EAAc;EAAM,CAAA,CAAA,CAAG,GAEtE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAE;EAAU,CAAA,EACxB,KAAA,CAAA,aAAA,CAAC,YAAY,EAAA,IAAA,CAAG,CAEnB;AACH,CAAC;AACD,cAAc,CAAC,WAAW,GAAG,gBAAgB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/EmptyState/empty-state';\nexport const EmptyStateIcon = (_a) => {\n    var { className = '', icon: IconComponent, component: AnyComponent, variant = 'icon' } = _a, props = __rest(_a, [\"className\", \"icon\", \"component\", \"variant\"]);\n    const classNames = css(styles.emptyStateIcon, className);\n    return variant === 'icon' ? (React.createElement(IconComponent, Object.assign({ className: classNames }, props, { \"aria-hidden\": \"true\" }))) : (React.createElement(\"div\", { className: classNames },\n        React.createElement(AnyComponent, null)));\n};\nEmptyStateIcon.displayName = 'EmptyStateIcon';\n//# sourceMappingURL=EmptyStateIcon.js.map"]},"metadata":{},"sourceType":"module"}