{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Divider/divider';\nimport { formatBreakpointMods } from '../../helpers/util';\nexport var DividerVariant;\n(function (DividerVariant) {\n  DividerVariant[\"hr\"] = \"hr\";\n  DividerVariant[\"li\"] = \"li\";\n  DividerVariant[\"div\"] = \"div\";\n})(DividerVariant || (DividerVariant = {}));\nexport const Divider = _a => {\n  var {\n      className,\n      component = DividerVariant.hr,\n      isVertical = false,\n      inset,\n      orientation\n    } = _a,\n    props = __rest(_a, [\"className\", \"component\", \"isVertical\", \"inset\", \"orientation\"]);\n  const Component = component;\n  return React.createElement(Component, Object.assign({\n    className: css(styles.divider, isVertical && styles.modifiers.vertical, formatBreakpointMods(inset, styles), formatBreakpointMods(orientation, styles), className)\n  }, component !== 'hr' && {\n    role: 'separator'\n  }, props));\n};\nDivider.displayName = 'Divider';","map":{"version":3,"sources":["../../../../src/components/Divider/Divider.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,MAAM,MAAM,yDAAyD;AAC5E,SAAS,oBAAoB,QAAQ,oBAAoB;AAEzD,OAAA,IAAY,cAIX;AAJD,CAAA,UAAY,cAAc,EAAA;EACxB,cAAA,CAAA,IAAA,CAAA,GAAA,IAAS;EACT,cAAA,CAAA,IAAA,CAAA,GAAA,IAAS;EACT,cAAA,CAAA,KAAA,CAAA,GAAA,KAAW;AACb,CAAC,EAJW,cAAc,KAAd,cAAc,GAAA,CAAA,CAAA,CAAA,CAAA;AAiC1B,OAAO,MAAM,OAAO,GAA2C,EAOhD,IAAI;MAP4C;MAC7D,SAAS;MACT,SAAS,GAAG,cAAc,CAAC,EAAE;MAC7B,UAAU,GAAG,KAAK;MAClB,KAAK;MACL;IAAW,CAAA,GAAA,EAEE;IADV,KAAK,GAAA,MAAA,CAAA,EAAA,EANqD,CAAA,WAAA,EAAA,WAAA,EAAA,YAAA,EAAA,OAAA,EAAA,aAAA,CAO9D,CADS;EAER,MAAM,SAAS,GAAQ,SAAS;EAEhC,OACE,KAAA,CAAA,aAAA,CAAC,SAAS,EAAA,MAAA,CAAA,MAAA,CAAA;IACR,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,OAAO,EACd,UAAU,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,EACvC,oBAAoB,CAAC,KAAK,EAAE,MAAM,CAAC,EACnC,oBAAoB,CAAC,WAAW,EAAE,MAAM,CAAC,EACzC,SAAS;EACV,CAAA,EACI,SAAS,KAAK,IAAI,IAAI;IAAE,IAAI,EAAE;EAAW,CAAE,EAC5C,KAAK,CAAA,CACT;AAEN,CAAC;AACD,OAAO,CAAC,WAAW,GAAG,SAAS","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Divider/divider';\nimport { formatBreakpointMods } from '../../helpers/util';\nexport var DividerVariant;\n(function (DividerVariant) {\n    DividerVariant[\"hr\"] = \"hr\";\n    DividerVariant[\"li\"] = \"li\";\n    DividerVariant[\"div\"] = \"div\";\n})(DividerVariant || (DividerVariant = {}));\nexport const Divider = (_a) => {\n    var { className, component = DividerVariant.hr, isVertical = false, inset, orientation } = _a, props = __rest(_a, [\"className\", \"component\", \"isVertical\", \"inset\", \"orientation\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.divider, isVertical && styles.modifiers.vertical, formatBreakpointMods(inset, styles), formatBreakpointMods(orientation, styles), className) }, (component !== 'hr' && { role: 'separator' }), props)));\n};\nDivider.displayName = 'Divider';\n//# sourceMappingURL=Divider.js.map"]},"metadata":{},"sourceType":"module"}