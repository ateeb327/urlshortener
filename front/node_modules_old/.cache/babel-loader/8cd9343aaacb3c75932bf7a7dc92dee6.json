{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport { PageContext } from './PageContext';\nexport const PageBreadcrumb = _a => {\n  var {\n      className = '',\n      children,\n      isWidthLimited,\n      sticky,\n      stickyOnBreakpoint,\n      hasShadowTop = false,\n      hasShadowBottom = false,\n      hasOverflowScroll = false,\n      'aria-label': ariaLabel\n    } = _a,\n    props = __rest(_a, [\"className\", \"children\", \"isWidthLimited\", \"sticky\", \"stickyOnBreakpoint\", \"hasShadowTop\", \"hasShadowBottom\", \"hasOverflowScroll\", 'aria-label']);\n  const {\n    height,\n    getVerticalBreakpoint\n  } = React.useContext(PageContext);\n  React.useEffect(() => {\n    if (hasOverflowScroll && !ariaLabel) {\n      /* eslint-disable no-console */\n      console.warn('PageBreadcrumb: An accessible aria-label is required when hasOverflowScroll is set to true.');\n    }\n  }, [hasOverflowScroll, ariaLabel]);\n  return React.createElement(\"section\", Object.assign({\n    className: css(styles.pageMainBreadcrumb, formatBreakpointMods(stickyOnBreakpoint, styles, 'sticky-', getVerticalBreakpoint(height), true), isWidthLimited && styles.modifiers.limitWidth, sticky === 'top' && styles.modifiers.stickyTop, sticky === 'bottom' && styles.modifiers.stickyBottom, hasShadowTop && styles.modifiers.shadowTop, hasShadowBottom && styles.modifiers.shadowBottom, hasOverflowScroll && styles.modifiers.overflowScroll, className)\n  }, hasOverflowScroll && {\n    tabIndex: 0\n  }, {\n    \"aria-label\": ariaLabel\n  }, props), isWidthLimited && React.createElement(\"div\", {\n    className: css(styles.pageMainBody)\n  }, children), !isWidthLimited && children);\n};\nPageBreadcrumb.displayName = 'PageBreadcrumb';","map":{"version":3,"sources":["../../../../src/components/Page/PageBreadcrumb.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,MAAM,MAAM,mDAAmD;AACtE,SAAS,oBAAoB,QAAQ,oBAAoB;AACzD,SAAS,WAAW,QAAQ,eAAe;AA8B3C,OAAO,MAAM,cAAc,GAAI,EAWT,IAAI;MAXK;MAC7B,SAAS,GAAG,EAAE;MACd,QAAQ;MACR,cAAc;MACd,MAAM;MACN,kBAAkB;MAClB,YAAY,GAAG,KAAK;MACpB,eAAe,GAAG,KAAK;MACvB,iBAAiB,GAAG,KAAK;MACzB,YAAY,EAAE;IAAS,CAAA,GAAA,EAEH;IADjB,KAAK,GAAA,MAAA,CAAA,EAAA,EAVqB,CAAA,WAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,YAAA,CAW9B,CADS;EAER,MAAM;IAAE,MAAM;IAAE;EAAqB,CAAE,GAAG,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC;EAEvE,KAAK,CAAC,SAAS,CAAC,MAAK;IACnB,IAAI,iBAAiB,IAAI,CAAC,SAAS,EAAE;MACnC;MACA,OAAO,CAAC,IAAI,CAAC,6FAA6F,CAAC;IAC5G;EACH,CAAC,EAAE,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC;EAElC,OACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,MAAA,CAAA,MAAA,CAAA;IACE,SAAS,EAAE,GAAG,CACZ,MAAM,CAAC,kBAAkB,EACzB,oBAAoB,CAAC,kBAAkB,EAAE,MAAM,EAAE,SAAS,EAAE,qBAAqB,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,EAChG,cAAc,IAAI,MAAM,CAAC,SAAS,CAAC,UAAU,EAC7C,MAAM,KAAK,KAAK,IAAI,MAAM,CAAC,SAAS,CAAC,SAAS,EAC9C,MAAM,KAAK,QAAQ,IAAI,MAAM,CAAC,SAAS,CAAC,YAAY,EACpD,YAAY,IAAI,MAAM,CAAC,SAAS,CAAC,SAAS,EAC1C,eAAe,IAAI,MAAM,CAAC,SAAS,CAAC,YAAY,EAChD,iBAAiB,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,EACpD,SAAS;EACV,CAAA,EACI,iBAAiB,IAAI;IAAE,QAAQ,EAAE;EAAC,CAAE,EAAC;IAAA,YAAA,EAC9B;EAAS,CAAA,EACjB,KAAK,CAAA,EAER,cAAc,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,YAAY;EAAC,CAAA,EAAG,QAAQ,CAAO,EAC5E,CAAC,cAAc,IAAI,QAAQ,CACpB;AAEd,CAAC;AACD,cAAc,CAAC,WAAW,GAAG,gBAAgB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport { PageContext } from './PageContext';\nexport const PageBreadcrumb = (_a) => {\n    var { className = '', children, isWidthLimited, sticky, stickyOnBreakpoint, hasShadowTop = false, hasShadowBottom = false, hasOverflowScroll = false, 'aria-label': ariaLabel } = _a, props = __rest(_a, [\"className\", \"children\", \"isWidthLimited\", \"sticky\", \"stickyOnBreakpoint\", \"hasShadowTop\", \"hasShadowBottom\", \"hasOverflowScroll\", 'aria-label']);\n    const { height, getVerticalBreakpoint } = React.useContext(PageContext);\n    React.useEffect(() => {\n        if (hasOverflowScroll && !ariaLabel) {\n            /* eslint-disable no-console */\n            console.warn('PageBreadcrumb: An accessible aria-label is required when hasOverflowScroll is set to true.');\n        }\n    }, [hasOverflowScroll, ariaLabel]);\n    return (React.createElement(\"section\", Object.assign({ className: css(styles.pageMainBreadcrumb, formatBreakpointMods(stickyOnBreakpoint, styles, 'sticky-', getVerticalBreakpoint(height), true), isWidthLimited && styles.modifiers.limitWidth, sticky === 'top' && styles.modifiers.stickyTop, sticky === 'bottom' && styles.modifiers.stickyBottom, hasShadowTop && styles.modifiers.shadowTop, hasShadowBottom && styles.modifiers.shadowBottom, hasOverflowScroll && styles.modifiers.overflowScroll, className) }, (hasOverflowScroll && { tabIndex: 0 }), { \"aria-label\": ariaLabel }, props),\n        isWidthLimited && React.createElement(\"div\", { className: css(styles.pageMainBody) }, children),\n        !isWidthLimited && children));\n};\nPageBreadcrumb.displayName = 'PageBreadcrumb';\n//# sourceMappingURL=PageBreadcrumb.js.map"]},"metadata":{},"sourceType":"module"}