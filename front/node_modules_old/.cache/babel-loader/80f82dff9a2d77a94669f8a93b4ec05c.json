{"ast":null,"code":"import { __rest } from \"tslib\";\n/**\n * provider.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport * as React from 'react';\nimport { TableDefaults } from './types';\nexport const ProviderContext = React.createContext({\n  columns: null,\n  renderers: null\n});\nexport class Provider extends React.Component {\n  render() {\n    const _a = this.props,\n      {\n        columns,\n        renderers,\n        components,\n        children\n      } = _a,\n      props = __rest(_a, [\"columns\", \"renderers\", \"components\", \"children\"]);\n    let finalRenderers = renderers;\n    if (components) {\n      // eslint-disable-next-line no-console\n      console.warn('`components` have been deprecated in favor of `renderers` and will be removed in the next major version, please rename!');\n      finalRenderers = components;\n    }\n    const provider = React.createElement(renderers.table || TableDefaults.renderers.table, props, children);\n    return React.createElement(ProviderContext.Provider, {\n      value: {\n        columns,\n        renderers: {\n          table: finalRenderers.table || TableDefaults.renderers.table,\n          header: Object.assign(Object.assign({}, TableDefaults.renderers.header), finalRenderers.header),\n          body: Object.assign(Object.assign({}, TableDefaults.renderers.body), finalRenderers.body)\n        }\n      }\n    }, provider);\n  }\n}\nProvider.displayName = 'Provider';\nProvider.defaultProps = {\n  renderers: TableDefaults.renderers\n};","map":{"version":3,"sources":["../../../../../src/components/Table/base/provider.tsx"],"names":[],"mappings":";AAAA;;;;;AAKG;AACH,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAyB,aAAa,QAAqB,SAAS;AAUpE,OAAO,MAAM,eAAe,GAAG,KAAK,CAAC,aAAa,CAAC;EACjD,OAAO,EAAE,IAAmB;EAC5B,SAAS,EAAE;CACZ,CAAC;AAEF,OAAM,MAAO,QAAS,SAAQ,KAAK,CAAC,SAA4B,CAAA;EAK9D,MAAM,CAAA,EAAA;IACJ,MAAM,EAAA,GAAyD,IAAI,CAAC,KAAK;MAAnE;QAAE,OAAO;QAAE,SAAS;QAAE,UAAU;QAAE;MAAQ,CAAA,GAAA,EAAyB;MAApB,KAAK,GAAA,MAAA,CAAA,EAAA,EAApD,CAAA,SAAA,EAAA,WAAA,EAAA,YAAA,EAAA,UAAA,CAAsD,CAAa;IAEzE,IAAI,cAAc,GAAG,SAAS;IAE9B,IAAI,UAAU,EAAE;MACd;MACA,OAAO,CAAC,IAAI,CACV,yHAAyH,CAC1H;MACD,cAAc,GAAG,UAAU;IAC5B;IAED,MAAM,QAAQ,GAAG,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,IAAI,aAAa,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC;IACvG,OACE,KAAA,CAAA,aAAA,CAAC,eAAe,CAAC,QAAQ,EAAA;MACvB,KAAK,EAAE;QACL,OAAO;QACP,SAAS,EAAE;UACT,KAAK,EAAE,cAAc,CAAC,KAAK,IAAI,aAAa,CAAC,SAAS,CAAC,KAAK;UAC5D,MAAM,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAO,aAAa,CAAC,SAAS,CAAC,MAAM,CAAA,EAAK,cAAc,CAAC,MAAM,CAAE;UACvE,IAAI,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAO,aAAa,CAAC,SAAS,CAAC,IAAI,CAAA,EAAK,cAAc,CAAC,IAAI;QAChE;MACF;IAAA,CAAA,EAEA,QAAQ,CACgB;EAE/B;;AAhCO,QAAA,CAAA,WAAW,GAAG,UAAU;AACxB,QAAA,CAAA,YAAY,GAAG;EACpB,SAAS,EAAE,aAAa,CAAC;CAC1B","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\n/**\n * provider.tsx\n *\n * Forked from reactabular-table version 8.14.0\n * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src\n */\nimport * as React from 'react';\nimport { TableDefaults } from './types';\nexport const ProviderContext = React.createContext({\n    columns: null,\n    renderers: null\n});\nexport class Provider extends React.Component {\n    render() {\n        const _a = this.props, { columns, renderers, components, children } = _a, props = __rest(_a, [\"columns\", \"renderers\", \"components\", \"children\"]);\n        let finalRenderers = renderers;\n        if (components) {\n            // eslint-disable-next-line no-console\n            console.warn('`components` have been deprecated in favor of `renderers` and will be removed in the next major version, please rename!');\n            finalRenderers = components;\n        }\n        const provider = React.createElement(renderers.table || TableDefaults.renderers.table, props, children);\n        return (React.createElement(ProviderContext.Provider, { value: {\n                columns,\n                renderers: {\n                    table: finalRenderers.table || TableDefaults.renderers.table,\n                    header: Object.assign(Object.assign({}, TableDefaults.renderers.header), finalRenderers.header),\n                    body: Object.assign(Object.assign({}, TableDefaults.renderers.body), finalRenderers.body)\n                }\n            } }, provider));\n    }\n}\nProvider.displayName = 'Provider';\nProvider.defaultProps = {\n    renderers: TableDefaults.renderers\n};\n//# sourceMappingURL=provider.js.map"]},"metadata":{},"sourceType":"module"}