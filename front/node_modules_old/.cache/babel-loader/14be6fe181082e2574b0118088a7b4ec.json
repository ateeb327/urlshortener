{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport a11yStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { getUniqueId } from '../../helpers/util';\nimport { NavContext } from './Nav';\nimport { PageSidebarContext } from '../Page/PageSidebar';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class NavExpandable extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.id = this.props.id || getUniqueId();\n    this.state = {\n      expandedState: this.props.isExpanded,\n      ouiaStateId: getDefaultOUIAId(NavExpandable.displayName)\n    };\n    this.onExpand = (e, onToggle) => {\n      const {\n        expandedState\n      } = this.state;\n      if (this.props.onExpand) {\n        this.props.onExpand(e, !expandedState);\n      } else {\n        this.setState(prevState => ({\n          expandedState: !prevState.expandedState\n        }));\n        const {\n          groupId\n        } = this.props;\n        onToggle(e, groupId, !expandedState);\n      }\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      expandedState: this.props.isExpanded\n    });\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.isExpanded !== prevProps.isExpanded) {\n      this.setState({\n        expandedState: this.props.isExpanded\n      });\n    }\n  }\n  render() {\n    const _a = this.props,\n      {\n        title,\n        srText,\n        children,\n        className,\n        isActive,\n        ouiaId,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        groupId,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        id,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        isExpanded,\n        buttonProps,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onExpand\n      } = _a,\n      props = __rest(_a, [\"title\", \"srText\", \"children\", \"className\", \"isActive\", \"ouiaId\", \"groupId\", \"id\", \"isExpanded\", \"buttonProps\", \"onExpand\"]);\n    const {\n      expandedState,\n      ouiaStateId\n    } = this.state;\n    return React.createElement(NavContext.Consumer, null, context => React.createElement(\"li\", Object.assign({\n      className: css(styles.navItem, styles.modifiers.expandable, expandedState && styles.modifiers.expanded, isActive && styles.modifiers.current, className)\n    }, getOUIAProps(NavExpandable.displayName, ouiaId !== undefined ? ouiaId : ouiaStateId), props), React.createElement(PageSidebarContext.Consumer, null, ({\n      isNavOpen\n    }) => React.createElement(\"button\", Object.assign({\n      className: styles.navLink,\n      id: srText ? null : this.id,\n      onClick: e => this.onExpand(e, context.onToggle),\n      \"aria-expanded\": expandedState,\n      tabIndex: isNavOpen ? null : -1\n    }, buttonProps), title, React.createElement(\"span\", {\n      className: css(styles.navToggle)\n    }, React.createElement(\"span\", {\n      className: css(styles.navToggleIcon)\n    }, React.createElement(AngleRightIcon, {\n      \"aria-hidden\": \"true\"\n    }))))), React.createElement(\"section\", {\n      className: css(styles.navSubnav),\n      \"aria-labelledby\": this.id,\n      hidden: expandedState ? null : true\n    }, srText && React.createElement(\"h2\", {\n      className: css(a11yStyles.screenReader),\n      id: this.id\n    }, srText), React.createElement(\"ul\", {\n      className: css(styles.navList)\n    }, children))));\n  }\n}\nNavExpandable.displayName = 'NavExpandable';\nNavExpandable.defaultProps = {\n  srText: '',\n  isExpanded: false,\n  children: '',\n  className: '',\n  groupId: null,\n  isActive: false,\n  id: ''\n};","map":{"version":3,"sources":["../../../../src/components/Nav/NavExpandable.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport a11yStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { getUniqueId } from '../../helpers/util';\nimport { NavContext } from './Nav';\nimport { PageSidebarContext } from '../Page/PageSidebar';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class NavExpandable extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.id = this.props.id || getUniqueId();\n        this.state = {\n            expandedState: this.props.isExpanded,\n            ouiaStateId: getDefaultOUIAId(NavExpandable.displayName)\n        };\n        this.onExpand = (e, onToggle) => {\n            const { expandedState } = this.state;\n            if (this.props.onExpand) {\n                this.props.onExpand(e, !expandedState);\n            }\n            else {\n                this.setState(prevState => ({ expandedState: !prevState.expandedState }));\n                const { groupId } = this.props;\n                onToggle(e, groupId, !expandedState);\n            }\n        };\n    }\n    componentDidMount() {\n        this.setState({ expandedState: this.props.isExpanded });\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.isExpanded !== prevProps.isExpanded) {\n            this.setState({ expandedState: this.props.isExpanded });\n        }\n    }\n    render() {\n        const _a = this.props, { title, srText, children, className, isActive, ouiaId, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        groupId, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        id, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        isExpanded, buttonProps, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onExpand } = _a, props = __rest(_a, [\"title\", \"srText\", \"children\", \"className\", \"isActive\", \"ouiaId\", \"groupId\", \"id\", \"isExpanded\", \"buttonProps\", \"onExpand\"]);\n        const { expandedState, ouiaStateId } = this.state;\n        return (React.createElement(NavContext.Consumer, null, context => (React.createElement(\"li\", Object.assign({ className: css(styles.navItem, styles.modifiers.expandable, expandedState && styles.modifiers.expanded, isActive && styles.modifiers.current, className) }, getOUIAProps(NavExpandable.displayName, ouiaId !== undefined ? ouiaId : ouiaStateId), props),\n            React.createElement(PageSidebarContext.Consumer, null, ({ isNavOpen }) => (React.createElement(\"button\", Object.assign({ className: styles.navLink, id: srText ? null : this.id, onClick: e => this.onExpand(e, context.onToggle), \"aria-expanded\": expandedState, tabIndex: isNavOpen ? null : -1 }, buttonProps),\n                title,\n                React.createElement(\"span\", { className: css(styles.navToggle) },\n                    React.createElement(\"span\", { className: css(styles.navToggleIcon) },\n                        React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" })))))),\n            React.createElement(\"section\", { className: css(styles.navSubnav), \"aria-labelledby\": this.id, hidden: expandedState ? null : true },\n                srText && (React.createElement(\"h2\", { className: css(a11yStyles.screenReader), id: this.id }, srText)),\n                React.createElement(\"ul\", { className: css(styles.navList) }, children))))));\n    }\n}\nNavExpandable.displayName = 'NavExpandable';\nNavExpandable.defaultProps = {\n    srText: '',\n    isExpanded: false,\n    children: '',\n    className: '',\n    groupId: null,\n    isActive: false,\n    id: ''\n};\n//# sourceMappingURL=NavExpandable.js.map"]},"metadata":{},"sourceType":"module"}