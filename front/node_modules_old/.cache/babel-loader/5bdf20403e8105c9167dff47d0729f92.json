{"ast":null,"code":"import * as React from 'react';\nimport progressStyle from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip } from '../Tooltip';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport { ProgressBar } from './ProgressBar';\nimport { ProgressHelperText } from './ProgressHelperText';\nexport var ProgressMeasureLocation;\n(function (ProgressMeasureLocation) {\n  ProgressMeasureLocation[\"outside\"] = \"outside\";\n  ProgressMeasureLocation[\"inside\"] = \"inside\";\n  ProgressMeasureLocation[\"top\"] = \"top\";\n  ProgressMeasureLocation[\"none\"] = \"none\";\n})(ProgressMeasureLocation || (ProgressMeasureLocation = {}));\nexport var ProgressVariant;\n(function (ProgressVariant) {\n  ProgressVariant[\"danger\"] = \"danger\";\n  ProgressVariant[\"success\"] = \"success\";\n  ProgressVariant[\"warning\"] = \"warning\";\n})(ProgressVariant || (ProgressVariant = {}));\nconst variantToIcon = {\n  danger: TimesCircleIcon,\n  success: CheckCircleIcon,\n  warning: ExclamationTriangleIcon\n};\nexport const ProgressContainer = ({\n  progressBarAriaProps,\n  value,\n  title = '',\n  parentId,\n  label = null,\n  variant = null,\n  measureLocation = ProgressMeasureLocation.top,\n  isTitleTruncated = false,\n  tooltipPosition,\n  helperText\n}) => {\n  const StatusIcon = variantToIcon.hasOwnProperty(variant) && variantToIcon[variant];\n  const [tooltip, setTooltip] = React.useState('');\n  const onMouseEnter = event => {\n    if (event.target.offsetWidth < event.target.scrollWidth) {\n      setTooltip(title || event.target.innerHTML);\n    } else {\n      setTooltip('');\n    }\n  };\n  const Title = React.createElement(\"div\", {\n    className: css(progressStyle.progressDescription, isTitleTruncated && typeof title === 'string' && progressStyle.modifiers.truncate),\n    id: `${parentId}-description`,\n    \"aria-hidden\": \"true\",\n    onMouseEnter: isTitleTruncated && typeof title === 'string' ? onMouseEnter : null\n  }, title);\n  return React.createElement(React.Fragment, null, tooltip ? React.createElement(Tooltip, {\n    position: tooltipPosition,\n    content: tooltip,\n    isVisible: true\n  }, Title) : Title, React.createElement(\"div\", {\n    className: css(progressStyle.progressStatus),\n    \"aria-hidden\": \"true\"\n  }, (measureLocation === ProgressMeasureLocation.top || measureLocation === ProgressMeasureLocation.outside) && React.createElement(\"span\", {\n    className: css(progressStyle.progressMeasure)\n  }, label || `${value}%`), variantToIcon.hasOwnProperty(variant) && React.createElement(\"span\", {\n    className: css(progressStyle.progressStatusIcon)\n  }, React.createElement(StatusIcon, null))), React.createElement(ProgressBar, {\n    role: \"progressbar\",\n    progressBarAriaProps: progressBarAriaProps,\n    value: value\n  }, measureLocation === ProgressMeasureLocation.inside && `${value}%`), helperText && React.createElement(ProgressHelperText, null, helperText));\n};\nProgressContainer.displayName = 'ProgressContainer';","map":{"version":3,"sources":["../../../../src/components/Progress/ProgressContainer.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport progressStyle from '@patternfly/react-styles/css/components/Progress/progress';\nimport { css } from '@patternfly/react-styles';\nimport { Tooltip } from '../Tooltip';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport { ProgressBar } from './ProgressBar';\nimport { ProgressHelperText } from './ProgressHelperText';\nexport var ProgressMeasureLocation;\n(function (ProgressMeasureLocation) {\n    ProgressMeasureLocation[\"outside\"] = \"outside\";\n    ProgressMeasureLocation[\"inside\"] = \"inside\";\n    ProgressMeasureLocation[\"top\"] = \"top\";\n    ProgressMeasureLocation[\"none\"] = \"none\";\n})(ProgressMeasureLocation || (ProgressMeasureLocation = {}));\nexport var ProgressVariant;\n(function (ProgressVariant) {\n    ProgressVariant[\"danger\"] = \"danger\";\n    ProgressVariant[\"success\"] = \"success\";\n    ProgressVariant[\"warning\"] = \"warning\";\n})(ProgressVariant || (ProgressVariant = {}));\nconst variantToIcon = {\n    danger: TimesCircleIcon,\n    success: CheckCircleIcon,\n    warning: ExclamationTriangleIcon\n};\nexport const ProgressContainer = ({ progressBarAriaProps, value, title = '', parentId, label = null, variant = null, measureLocation = ProgressMeasureLocation.top, isTitleTruncated = false, tooltipPosition, helperText }) => {\n    const StatusIcon = variantToIcon.hasOwnProperty(variant) && variantToIcon[variant];\n    const [tooltip, setTooltip] = React.useState('');\n    const onMouseEnter = (event) => {\n        if (event.target.offsetWidth < event.target.scrollWidth) {\n            setTooltip(title || event.target.innerHTML);\n        }\n        else {\n            setTooltip('');\n        }\n    };\n    const Title = (React.createElement(\"div\", { className: css(progressStyle.progressDescription, isTitleTruncated && typeof title === 'string' && progressStyle.modifiers.truncate), id: `${parentId}-description`, \"aria-hidden\": \"true\", onMouseEnter: isTitleTruncated && typeof title === 'string' ? onMouseEnter : null }, title));\n    return (React.createElement(React.Fragment, null,\n        tooltip ? (React.createElement(Tooltip, { position: tooltipPosition, content: tooltip, isVisible: true }, Title)) : (Title),\n        React.createElement(\"div\", { className: css(progressStyle.progressStatus), \"aria-hidden\": \"true\" },\n            (measureLocation === ProgressMeasureLocation.top || measureLocation === ProgressMeasureLocation.outside) && (React.createElement(\"span\", { className: css(progressStyle.progressMeasure) }, label || `${value}%`)),\n            variantToIcon.hasOwnProperty(variant) && (React.createElement(\"span\", { className: css(progressStyle.progressStatusIcon) },\n                React.createElement(StatusIcon, null)))),\n        React.createElement(ProgressBar, { role: \"progressbar\", progressBarAriaProps: progressBarAriaProps, value: value }, measureLocation === ProgressMeasureLocation.inside && `${value}%`),\n        helperText && React.createElement(ProgressHelperText, null, helperText)));\n};\nProgressContainer.displayName = 'ProgressContainer';\n//# sourceMappingURL=ProgressContainer.js.map"]},"metadata":{},"sourceType":"module"}