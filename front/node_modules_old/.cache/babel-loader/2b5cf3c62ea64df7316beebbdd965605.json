{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Brand/brand';\nimport { setBreakpointCssVars } from '../../helpers';\nexport const Brand = _a => {\n  var {\n      className = '',\n      src = '',\n      alt,\n      children,\n      widths,\n      heights,\n      style\n    } = _a,\n    props = __rest(_a, [\"className\", \"src\", \"alt\", \"children\", \"widths\", \"heights\", \"style\"]);\n  if (children !== undefined && widths !== undefined) {\n    style = Object.assign(Object.assign({}, style), setBreakpointCssVars(widths, '--pf-c-brand--Width'));\n  }\n  if (children !== undefined && heights !== undefined) {\n    style = Object.assign(Object.assign({}, style), setBreakpointCssVars(heights, '--pf-c-brand--Height'));\n  }\n  return /** the brand component currently contains no styling the 'pf-c-brand' string will be used for the className */(\n    children !== undefined ? React.createElement(\"picture\", Object.assign({\n      className: css(styles.brand, styles.modifiers.picture, className),\n      style: style\n    }, props), children, React.createElement(\"img\", {\n      src: src,\n      alt: alt\n    })) : React.createElement(\"img\", Object.assign({}, props, {\n      className: css(styles.brand, className),\n      src: src,\n      alt: alt\n    }))\n  );\n};\nBrand.displayName = 'Brand';","map":{"version":3,"sources":["../../../../src/components/Brand/Brand.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,MAAM,MAAM,qDAAqD;AACxE,SAAS,oBAAoB,QAAQ,eAAe;AA+BpD,OAAO,MAAM,KAAK,GAAyC,EAS9C,IAAI;MAT0C;MACzD,SAAS,GAAG,EAAE;MACd,GAAG,GAAG,EAAE;MACR,GAAG;MACH,QAAQ;MACR,MAAM;MACN,OAAO;MACP;IAAK,CAAA,GAAA,EAEM;IADR,KAAK,GAAA,MAAA,CAAA,EAAA,EARiD,CAAA,WAAA,EAAA,KAAA,EAAA,KAAA,EAAA,UAAA,EAAA,QAAA,EAAA,SAAA,EAAA,OAAA,CAS1D,CADS;EAER,IAAI,QAAQ,KAAK,SAAS,IAAI,MAAM,KAAK,SAAS,EAAE;IAClD,KAAK,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EACA,KAAK,CAAA,EACL,oBAAoB,CAAC,MAAM,EAAE,qBAAqB,CAAC,CACvD;EACF;EAED,IAAI,QAAQ,KAAK,SAAS,IAAI,OAAO,KAAK,SAAS,EAAE;IACnD,KAAK,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EACA,KAAK,CAAA,EACL,oBAAoB,CAAC,OAAO,EAAE,sBAAsB,CAAC,CACzD;EACF;EAED,OACE;IACA,QAAQ,KAAK,SAAS,GACpB,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,MAAA,CAAA,MAAA,CAAA;MAAS,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC;MAAE,KAAK,EAAE;IAAK,CAAA,EAAM,KAAK,CAAA,EAChG,QAAQ,EACT,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE;IAAG,CAAA,CAAI,CACnB,GAEV,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAS,KAAK,EAAA;MAAE,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,SAAS,CAAC;MAAE,GAAG,EAAE,GAAG;MAAE,GAAG,EAAE;IAAG,CAAA,CAAA;EAC5E;AAEL,CAAC;AACD,KAAK,CAAC,WAAW,GAAG,OAAO","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Brand/brand';\nimport { setBreakpointCssVars } from '../../helpers';\nexport const Brand = (_a) => {\n    var { className = '', src = '', alt, children, widths, heights, style } = _a, props = __rest(_a, [\"className\", \"src\", \"alt\", \"children\", \"widths\", \"heights\", \"style\"]);\n    if (children !== undefined && widths !== undefined) {\n        style = Object.assign(Object.assign({}, style), setBreakpointCssVars(widths, '--pf-c-brand--Width'));\n    }\n    if (children !== undefined && heights !== undefined) {\n        style = Object.assign(Object.assign({}, style), setBreakpointCssVars(heights, '--pf-c-brand--Height'));\n    }\n    return (\n    /** the brand component currently contains no styling the 'pf-c-brand' string will be used for the className */\n    children !== undefined ? (React.createElement(\"picture\", Object.assign({ className: css(styles.brand, styles.modifiers.picture, className), style: style }, props),\n        children,\n        React.createElement(\"img\", { src: src, alt: alt }))) : (React.createElement(\"img\", Object.assign({}, props, { className: css(styles.brand, className), src: src, alt: alt }))));\n};\nBrand.displayName = 'Brand';\n//# sourceMappingURL=Brand.js.map"]},"metadata":{},"sourceType":"module"}