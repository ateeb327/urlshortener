{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport LongArrowAltUpIcon from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-up-icon';\nimport LongArrowAltDownIcon from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-down-icon';\nimport ArrowsAltVIcon from '@patternfly/react-icons/dist/esm/icons/arrows-alt-v-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { TableText } from './TableText';\nexport var SortByDirection;\n(function (SortByDirection) {\n  SortByDirection[\"asc\"] = \"asc\";\n  SortByDirection[\"desc\"] = \"desc\";\n})(SortByDirection || (SortByDirection = {}));\nexport const SortColumn = _a => {\n  var {\n      children = null,\n      className = '',\n      isSortedBy = false,\n      onSort = null,\n      sortDirection = '',\n      type = 'button'\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"isSortedBy\", \"onSort\", \"sortDirection\", \"type\"]);\n  let SortedByIcon;\n  if (isSortedBy) {\n    SortedByIcon = sortDirection === SortByDirection.asc ? LongArrowAltUpIcon : LongArrowAltDownIcon;\n  } else {\n    SortedByIcon = ArrowsAltVIcon;\n  }\n  return React.createElement(\"button\", Object.assign({}, props, {\n    type: type,\n    className: css(className, styles.tableButton),\n    onClick: event => onSort && onSort(event)\n  }), React.createElement(\"div\", {\n    className: css(className, styles.tableButtonContent)\n  }, React.createElement(TableText, null, children), React.createElement(\"span\", {\n    className: css(styles.tableSortIndicator)\n  }, React.createElement(SortedByIcon, null))));\n};\nSortColumn.displayName = 'SortColumn';","map":{"version":3,"sources":["../../../../src/components/Table/SortColumn.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,OAAO,kBAAkB,MAAM,+DAA+D;AAC9F,OAAO,oBAAoB,MAAM,iEAAiE;AAClG,OAAO,cAAc,MAAM,0DAA0D;AACrF,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,MAAM,MAAM,qDAAqD;AACxE,SAAS,SAAS,QAAQ,aAAa;AAEvC,OAAA,IAAY,eAGX;AAHD,CAAA,UAAY,eAAe,EAAA;EACzB,eAAA,CAAA,KAAA,CAAA,GAAA,KAAW;EACX,eAAA,CAAA,MAAA,CAAA,GAAA,MAAa;AACf,CAAC,EAHW,eAAe,KAAf,eAAe,GAAA,CAAA,CAAA,CAAA,CAAA;AAa3B,OAAO,MAAM,UAAU,GAA8C,EAQnD,IAAI;MAR+C;MACnE,QAAQ,GAAG,IAAI;MACf,SAAS,GAAG,EAAE;MACd,UAAU,GAAG,KAAK;MAClB,MAAM,GAAG,IAAI;MACb,aAAa,GAAG,EAAE;MAClB,IAAI,GAAG;IAAQ,CAAA,GAAA,EAEC;IADb,KAAK,GAAA,MAAA,CAAA,EAAA,EAP2D,CAAA,UAAA,EAAA,WAAA,EAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,CAQpE,CADS;EAER,IAAI,YAAY;EAChB,IAAI,UAAU,EAAE;IACd,YAAY,GAAG,aAAa,KAAK,eAAe,CAAC,GAAG,GAAG,kBAAkB,GAAG,oBAAoB;GACjG,MAAM;IACL,YAAY,GAAG,cAAc;EAC9B;EACD,OACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EACM,KAAK,EAAA;IACT,IAAI,EAAE,IAAI;IACV,SAAS,EAAE,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,WAAW,CAAC;IAC7C,OAAO,EAAE,KAAK,IAAI,MAAM,IAAI,MAAM,CAAC,KAAK;EAAC,CAAA,CAAA,EAEzC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAE,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,kBAAkB;EAAC,CAAA,EACvD,KAAA,CAAA,aAAA,CAAC,SAAS,EAAA,IAAA,EAAE,QAAQ,CAAa,EACjC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,kBAAkB;EAAC,CAAA,EAC7C,KAAA,CAAA,aAAA,CAAC,YAAY,EAAA,IAAA,CAAG,CACX,CACH,CACC;AAEb,CAAC;AACD,UAAU,CAAC,WAAW,GAAG,YAAY","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport LongArrowAltUpIcon from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-up-icon';\nimport LongArrowAltDownIcon from '@patternfly/react-icons/dist/esm/icons/long-arrow-alt-down-icon';\nimport ArrowsAltVIcon from '@patternfly/react-icons/dist/esm/icons/arrows-alt-v-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { TableText } from './TableText';\nexport var SortByDirection;\n(function (SortByDirection) {\n    SortByDirection[\"asc\"] = \"asc\";\n    SortByDirection[\"desc\"] = \"desc\";\n})(SortByDirection || (SortByDirection = {}));\nexport const SortColumn = (_a) => {\n    var { children = null, className = '', isSortedBy = false, onSort = null, sortDirection = '', type = 'button' } = _a, props = __rest(_a, [\"children\", \"className\", \"isSortedBy\", \"onSort\", \"sortDirection\", \"type\"]);\n    let SortedByIcon;\n    if (isSortedBy) {\n        SortedByIcon = sortDirection === SortByDirection.asc ? LongArrowAltUpIcon : LongArrowAltDownIcon;\n    }\n    else {\n        SortedByIcon = ArrowsAltVIcon;\n    }\n    return (React.createElement(\"button\", Object.assign({}, props, { type: type, className: css(className, styles.tableButton), onClick: event => onSort && onSort(event) }),\n        React.createElement(\"div\", { className: css(className, styles.tableButtonContent) },\n            React.createElement(TableText, null, children),\n            React.createElement(\"span\", { className: css(styles.tableSortIndicator) },\n                React.createElement(SortedByIcon, null)))));\n};\nSortColumn.displayName = 'SortColumn';\n//# sourceMappingURL=SortColumn.js.map"]},"metadata":{},"sourceType":"module"}