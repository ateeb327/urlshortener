{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button, ButtonVariant } from '../Button';\nimport { AlertContext } from './AlertContext';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\nexport const AlertToggleExpandButton = _a => {\n  var {\n      'aria-label': ariaLabel = '',\n      variantLabel,\n      onToggleExpand,\n      isExpanded = false\n    } = _a,\n    props = __rest(_a, ['aria-label', \"variantLabel\", \"onToggleExpand\", \"isExpanded\"]);\n  const {\n    title,\n    variantLabel: alertVariantLabel\n  } = React.useContext(AlertContext);\n  return React.createElement(Button, Object.assign({\n    variant: ButtonVariant.plain,\n    onClick: onToggleExpand,\n    \"aria-expanded\": isExpanded,\n    \"aria-label\": ariaLabel === '' ? `Toggle ${variantLabel || alertVariantLabel} alert: ${title}` : ariaLabel\n  }, props), React.createElement(\"span\", {\n    className: css(styles.alertToggleIcon)\n  }, React.createElement(AngleRightIcon, {\n    \"aria-hidden\": \"true\"\n  })));\n};\nAlertToggleExpandButton.displayName = 'AlertToggleExpandButton';","map":{"version":3,"sources":["../../../../src/components/Alert/AlertToggleExpandButton.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,MAAM,EAAe,aAAa,QAAQ,WAAW;AAC9D,SAAS,YAAY,QAAQ,gBAAgB;AAC7C,OAAO,cAAc,MAAM,yDAAyD;AACpF,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,MAAM,MAAM,qDAAqD;AAaxE,OAAO,MAAM,uBAAuB,GAA2D,EAMhE,IAAI;MAN4D;MAC7F,YAAY,EAAE,SAAS,GAAG,EAAE;MAC5B,YAAY;MACZ,cAAc;MACd,UAAU,GAAG;IAAK,CAAA,GAAA,EAEW;IAD1B,KAAK,GAAA,MAAA,CAAA,EAAA,EALqF,CAAA,YAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,YAAA,CAM9F,CADS;EAER,MAAM;IAAE,KAAK;IAAE,YAAY,EAAE;EAAiB,CAAE,GAAG,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC;EACjF,OACE,KAAA,CAAA,aAAA,CAAC,MAAM,EAAA,MAAA,CAAA,MAAA,CAAA;IACL,OAAO,EAAE,aAAa,CAAC,KAAK;IAC5B,OAAO,EAAE,cAAc;IAAA,eAAA,EACR,UAAU;IAAA,YAAA,EACb,SAAS,KAAK,EAAE,GAAG,UAAU,YAAY,IAAI,iBAAiB,WAAW,KAAK,EAAE,GAAG;EAAS,CAAA,EACpG,KAAK,CAAA,EAET,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,eAAe;EAAC,CAAA,EAC1C,KAAA,CAAA,aAAA,CAAC,cAAc,EAAA;IAAA,aAAA,EAAa;EAAM,CAAA,CAAG,CAChC,CACA;AAEb,CAAC;AACD,uBAAuB,CAAC,WAAW,GAAG,yBAAyB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button, ButtonVariant } from '../Button';\nimport { AlertContext } from './AlertContext';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Alert/alert';\nexport const AlertToggleExpandButton = (_a) => {\n    var { 'aria-label': ariaLabel = '', variantLabel, onToggleExpand, isExpanded = false } = _a, props = __rest(_a, ['aria-label', \"variantLabel\", \"onToggleExpand\", \"isExpanded\"]);\n    const { title, variantLabel: alertVariantLabel } = React.useContext(AlertContext);\n    return (React.createElement(Button, Object.assign({ variant: ButtonVariant.plain, onClick: onToggleExpand, \"aria-expanded\": isExpanded, \"aria-label\": ariaLabel === '' ? `Toggle ${variantLabel || alertVariantLabel} alert: ${title}` : ariaLabel }, props),\n        React.createElement(\"span\", { className: css(styles.alertToggleIcon) },\n            React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" }))));\n};\nAlertToggleExpandButton.displayName = 'AlertToggleExpandButton';\n//# sourceMappingURL=AlertToggleExpandButton.js.map"]},"metadata":{},"sourceType":"module"}