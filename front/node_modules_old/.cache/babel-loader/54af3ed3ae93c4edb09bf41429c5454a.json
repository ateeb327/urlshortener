{"ast":null,"code":"import getDocumentElement from './getDocumentElement';\nimport getComputedStyle from './getComputedStyle';\nimport getWindowScrollBarX from './getWindowScrollBarX';\nimport getWindowScroll from './getWindowScroll';\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n/**\n * @param element\n */\nexport default function getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const winScroll = getWindowScroll(element);\n  const body = element.ownerDocument.body;\n  const width = Math.max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = Math.max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -winScroll.scrollTop;\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += Math.max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}","map":{"version":3,"sources":["../../../../../../../src/helpers/Popper/thirdparty/popper-core/dom-utils/getDocumentRect.ts"],"names":[],"mappings":"AAEA,OAAO,kBAAkB,MAAM,sBAAsB;AACrD,OAAO,gBAAgB,MAAM,oBAAoB;AACjD,OAAO,mBAAmB,MAAM,uBAAuB;AACvD,OAAO,eAAe,MAAM,mBAAmB;AAE/C;AACA;AACA;;AAEG;AACH,eAAc,SAAU,eAAe,CAAC,OAAoB,EAAA;EAC1D,MAAM,IAAI,GAAG,kBAAkB,CAAC,OAAO,CAAC;EACxC,MAAM,SAAS,GAAG,eAAe,CAAC,OAAO,CAAC;EAC1C,MAAM,IAAI,GAAG,OAAO,CAAC,aAAa,CAAC,IAAI;EAEvC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;EACpH,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CACrB,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,YAAY,EACjB,IAAI,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,EAC5B,IAAI,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAC7B;EAED,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,UAAU,GAAG,mBAAmB,CAAC,OAAO,CAAC;EAC5D,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS;EAE9B,IAAI,gBAAgB,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,SAAS,KAAK,KAAK,EAAE;IACtD,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,KAAK;EACrE;EAED,OAAO;IAAE,KAAK;IAAE,MAAM;IAAE,CAAC;IAAE;EAAC,CAAE;AAChC","sourceRoot":"","sourcesContent":["import getDocumentElement from './getDocumentElement';\nimport getComputedStyle from './getComputedStyle';\nimport getWindowScrollBarX from './getWindowScrollBarX';\nimport getWindowScroll from './getWindowScroll';\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n/**\n * @param element\n */\nexport default function getDocumentRect(element) {\n    const html = getDocumentElement(element);\n    const winScroll = getWindowScroll(element);\n    const body = element.ownerDocument.body;\n    const width = Math.max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n    const height = Math.max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n    let x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n    const y = -winScroll.scrollTop;\n    if (getComputedStyle(body || html).direction === 'rtl') {\n        x += Math.max(html.clientWidth, body ? body.clientWidth : 0) - width;\n    }\n    return { width, height, x, y };\n}\n//# sourceMappingURL=getDocumentRect.js.map"]},"metadata":{},"sourceType":"module"}