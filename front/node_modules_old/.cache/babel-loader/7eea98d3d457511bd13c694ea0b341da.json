{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { mapOpenedRows } from './utils/headerUtils';\nimport { Tbody } from '../TableComposable/Tbody';\nexport const BodyWrapper = _a => {\n  var {\n      mappedRows,\n      tbodyRef,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      rows = [],\n      onCollapse,\n      headerRows\n    } = _a,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    props = __rest(_a, [\"mappedRows\", \"tbodyRef\", \"rows\", \"onCollapse\", \"headerRows\"]);\n  if (mappedRows && mappedRows.some(row => row.hasOwnProperty('parent'))) {\n    return React.createElement(React.Fragment, null, mapOpenedRows(mappedRows, props.children).map((oneRow, key) => React.createElement(Tbody, Object.assign({}, props, {\n      isExpanded: oneRow.isOpen,\n      key: `tbody-${key}`,\n      ref: tbodyRef\n    }), oneRow.rows)));\n  }\n  return React.createElement(Tbody, Object.assign({}, props, {\n    ref: tbodyRef\n  }));\n};\nBodyWrapper.displayName = 'BodyWrapper';","map":{"version":3,"sources":["../../../../src/components/Table/BodyWrapper.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAE9B,SAAS,aAAa,QAAQ,qBAAqB;AACnD,SAAS,KAAK,QAAQ,0BAA0B;AAiBhD,OAAO,MAAM,WAAW,GAA+C,EASpD,IAAI;MATgD;MACrE,UAAU;MACV,QAAQ;MACR;MACA,IAAI,GAAG,EAAY;MACnB,UAAU;MACV;IAAU,CAAA,GAAA,EAGO;IAFjB;IACG,KAAK,GAAA,MAAA,CAAA,EAAA,EAR6D,CAAA,YAAA,EAAA,UAAA,EAAA,MAAA,EAAA,YAAA,EAAA,YAAA,CAStE,CADS;EAER,IAAI,UAAU,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAE;IACtE,OACE,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAQ,EAAA,IAAA,EACZ,aAAa,CAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,KACzD,KAAA,CAAA,aAAA,CAAC,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAK,KAAK,EAAA;MAAE,UAAU,EAAE,MAAM,CAAC,MAAM;MAAE,GAAG,EAAE,SAAS,GAAG,EAAE;MAAE,GAAG,EAAE;IAA0B,CAAA,CAAA,EAC9F,MAAM,CAAC,IAAI,CAEf,CAAC,CACa;EAEpB;EACD,OAAO,KAAA,CAAA,aAAA,CAAC,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAK,KAAK,EAAA;IAAE,GAAG,EAAE;EAA0B,CAAA,CAAA,CAAI;AAC9D,CAAC;AACD,WAAW,CAAC,WAAW,GAAG,aAAa","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { mapOpenedRows } from './utils/headerUtils';\nimport { Tbody } from '../TableComposable/Tbody';\nexport const BodyWrapper = (_a) => {\n    var { mappedRows, tbodyRef, \n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    rows = [], onCollapse, headerRows } = _a, \n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    props = __rest(_a, [\"mappedRows\", \"tbodyRef\", \"rows\", \"onCollapse\", \"headerRows\"]);\n    if (mappedRows && mappedRows.some(row => row.hasOwnProperty('parent'))) {\n        return (React.createElement(React.Fragment, null, mapOpenedRows(mappedRows, props.children).map((oneRow, key) => (React.createElement(Tbody, Object.assign({}, props, { isExpanded: oneRow.isOpen, key: `tbody-${key}`, ref: tbodyRef }), oneRow.rows)))));\n    }\n    return React.createElement(Tbody, Object.assign({}, props, { ref: tbodyRef }));\n};\nBodyWrapper.displayName = 'BodyWrapper';\n//# sourceMappingURL=BodyWrapper.js.map"]},"metadata":{},"sourceType":"module"}