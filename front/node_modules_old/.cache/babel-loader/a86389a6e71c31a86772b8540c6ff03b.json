{"ast":null,"code":"import { __rest } from \"tslib\";\nimport React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { Popper } from '../../helpers';\nimport { Menu, MenuContent, MenuList, MenuItem } from '../Menu';\nimport { TabsContext } from './TabsContext';\nimport { TabTitleText } from './TabTitleText';\nexport const OverflowTab = _a => {\n  var {\n      className,\n      overflowingTabs = [],\n      showTabCount,\n      defaultTitleText = 'More',\n      toggleAriaLabel,\n      removeFindDomNode = false,\n      zIndex = 9999\n    } = _a,\n    props = __rest(_a, [\"className\", \"overflowingTabs\", \"showTabCount\", \"defaultTitleText\", \"toggleAriaLabel\", \"removeFindDomNode\", \"zIndex\"]);\n  const menuRef = React.useRef();\n  const overflowTabRef = React.useRef();\n  const overflowLIRef = React.useRef();\n  const [isExpanded, setIsExpanded] = React.useState(false);\n  const {\n    localActiveKey,\n    handleTabClick\n  } = React.useContext(TabsContext);\n  const closeMenu = () => {\n    setIsExpanded(false);\n    overflowTabRef.current.focus();\n  };\n  const handleMenuKeys = ev => {\n    var _a;\n    const menuContainsEventTarget = (_a = menuRef === null || menuRef === void 0 ? void 0 : menuRef.current) === null || _a === void 0 ? void 0 : _a.contains(ev.target);\n    if (isExpanded && menuContainsEventTarget && ev.key === 'Escape') {\n      closeMenu();\n    }\n  };\n  const handleClick = ev => {\n    var _a, _b;\n    const clickIsOutsideMenu = !((_a = menuRef === null || menuRef === void 0 ? void 0 : menuRef.current) === null || _a === void 0 ? void 0 : _a.contains(ev.target));\n    const clickIsOutsideOverflowTab = !((_b = overflowTabRef === null || overflowTabRef === void 0 ? void 0 : overflowTabRef.current) === null || _b === void 0 ? void 0 : _b.contains(ev.target));\n    if (isExpanded && clickIsOutsideMenu && clickIsOutsideOverflowTab) {\n      closeMenu();\n    }\n  };\n  React.useEffect(() => {\n    window.addEventListener('click', handleClick);\n    window.addEventListener('keydown', handleMenuKeys);\n    return () => {\n      window.removeEventListener('click', handleClick);\n      window.removeEventListener('keydown', handleMenuKeys);\n    };\n  }, [isExpanded, menuRef, overflowTabRef]);\n  const selectedTab = overflowingTabs.find(tab => tab.eventKey === localActiveKey);\n  const tabTitle = (selectedTab === null || selectedTab === void 0 ? void 0 : selectedTab.title) ? selectedTab.title : defaultTitleText;\n  const toggleMenu = () => {\n    setIsExpanded(prevIsExpanded => !prevIsExpanded);\n    setTimeout(() => {\n      if (menuRef === null || menuRef === void 0 ? void 0 : menuRef.current) {\n        const firstElement = menuRef.current.querySelector('li > button,input:not(:disabled)');\n        firstElement && firstElement.focus();\n      }\n    }, 0);\n  };\n  const overflowTab = React.createElement(\"li\", Object.assign({\n    className: css(styles.tabsItem, 'pf-m-overflow', selectedTab && styles.modifiers.current, className),\n    role: \"presentation\",\n    ref: overflowLIRef\n  }, props), React.createElement(\"button\", {\n    type: \"button\",\n    className: css(styles.tabsLink, isExpanded && styles.modifiers.expanded),\n    onClick: () => toggleMenu(),\n    \"aria-label\": toggleAriaLabel,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": isExpanded,\n    role: \"tab\",\n    ref: overflowTabRef\n  }, React.createElement(TabTitleText, null, tabTitle, showTabCount && tabTitle === defaultTitleText && ` (${overflowingTabs.length})`), React.createElement(\"span\", {\n    className: styles.tabsLinkToggleIcon\n  }, React.createElement(AngleRightIcon, null))));\n  const tabs = overflowingTabs.map(tab => React.createElement(MenuItem, {\n    key: tab.eventKey,\n    itemId: tab.eventKey,\n    isSelected: localActiveKey === tab.eventKey\n  }, tab.title));\n  const onTabSelect = (event, key) => {\n    closeMenu();\n    const selectedTabRef = overflowingTabs.find(tab => tab.eventKey === key).tabContentRef;\n    handleTabClick(event, key, selectedTabRef);\n  };\n  const overflowMenu = React.createElement(Menu, {\n    ref: menuRef,\n    onSelect: (ev, itemId) => onTabSelect(ev, itemId)\n  }, React.createElement(MenuContent, null, React.createElement(MenuList, null, tabs)));\n  return React.createElement(Popper, {\n    trigger: overflowTab,\n    popper: overflowMenu,\n    isVisible: isExpanded,\n    popperMatchesTriggerWidth: false,\n    appendTo: overflowLIRef.current,\n    removeFindDomNode: removeFindDomNode,\n    zIndex: zIndex\n  });\n};\nOverflowTab.displayName = 'OverflowTab';","map":{"version":3,"sources":["../../../../src/components/Tabs/OverflowTab.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { Popper } from '../../helpers';\nimport { Menu, MenuContent, MenuList, MenuItem } from '../Menu';\nimport { TabsContext } from './TabsContext';\nimport { TabTitleText } from './TabTitleText';\nexport const OverflowTab = (_a) => {\n    var { className, overflowingTabs = [], showTabCount, defaultTitleText = 'More', toggleAriaLabel, removeFindDomNode = false, zIndex = 9999 } = _a, props = __rest(_a, [\"className\", \"overflowingTabs\", \"showTabCount\", \"defaultTitleText\", \"toggleAriaLabel\", \"removeFindDomNode\", \"zIndex\"]);\n    const menuRef = React.useRef();\n    const overflowTabRef = React.useRef();\n    const overflowLIRef = React.useRef();\n    const [isExpanded, setIsExpanded] = React.useState(false);\n    const { localActiveKey, handleTabClick } = React.useContext(TabsContext);\n    const closeMenu = () => {\n        setIsExpanded(false);\n        overflowTabRef.current.focus();\n    };\n    const handleMenuKeys = (ev) => {\n        var _a;\n        const menuContainsEventTarget = (_a = menuRef === null || menuRef === void 0 ? void 0 : menuRef.current) === null || _a === void 0 ? void 0 : _a.contains(ev.target);\n        if (isExpanded && menuContainsEventTarget && ev.key === 'Escape') {\n            closeMenu();\n        }\n    };\n    const handleClick = (ev) => {\n        var _a, _b;\n        const clickIsOutsideMenu = !((_a = menuRef === null || menuRef === void 0 ? void 0 : menuRef.current) === null || _a === void 0 ? void 0 : _a.contains(ev.target));\n        const clickIsOutsideOverflowTab = !((_b = overflowTabRef === null || overflowTabRef === void 0 ? void 0 : overflowTabRef.current) === null || _b === void 0 ? void 0 : _b.contains(ev.target));\n        if (isExpanded && clickIsOutsideMenu && clickIsOutsideOverflowTab) {\n            closeMenu();\n        }\n    };\n    React.useEffect(() => {\n        window.addEventListener('click', handleClick);\n        window.addEventListener('keydown', handleMenuKeys);\n        return () => {\n            window.removeEventListener('click', handleClick);\n            window.removeEventListener('keydown', handleMenuKeys);\n        };\n    }, [isExpanded, menuRef, overflowTabRef]);\n    const selectedTab = overflowingTabs.find(tab => tab.eventKey === localActiveKey);\n    const tabTitle = (selectedTab === null || selectedTab === void 0 ? void 0 : selectedTab.title) ? selectedTab.title : defaultTitleText;\n    const toggleMenu = () => {\n        setIsExpanded(prevIsExpanded => !prevIsExpanded);\n        setTimeout(() => {\n            if (menuRef === null || menuRef === void 0 ? void 0 : menuRef.current) {\n                const firstElement = menuRef.current.querySelector('li > button,input:not(:disabled)');\n                firstElement && firstElement.focus();\n            }\n        }, 0);\n    };\n    const overflowTab = (React.createElement(\"li\", Object.assign({ className: css(styles.tabsItem, 'pf-m-overflow', selectedTab && styles.modifiers.current, className), role: \"presentation\", ref: overflowLIRef }, props),\n        React.createElement(\"button\", { type: \"button\", className: css(styles.tabsLink, isExpanded && styles.modifiers.expanded), onClick: () => toggleMenu(), \"aria-label\": toggleAriaLabel, \"aria-haspopup\": \"menu\", \"aria-expanded\": isExpanded, role: \"tab\", ref: overflowTabRef },\n            React.createElement(TabTitleText, null,\n                tabTitle,\n                showTabCount && tabTitle === defaultTitleText && ` (${overflowingTabs.length})`),\n            React.createElement(\"span\", { className: styles.tabsLinkToggleIcon },\n                React.createElement(AngleRightIcon, null)))));\n    const tabs = overflowingTabs.map(tab => (React.createElement(MenuItem, { key: tab.eventKey, itemId: tab.eventKey, isSelected: localActiveKey === tab.eventKey }, tab.title)));\n    const onTabSelect = (event, key) => {\n        closeMenu();\n        const selectedTabRef = overflowingTabs.find(tab => tab.eventKey === key).tabContentRef;\n        handleTabClick(event, key, selectedTabRef);\n    };\n    const overflowMenu = (React.createElement(Menu, { ref: menuRef, onSelect: (ev, itemId) => onTabSelect(ev, itemId) },\n        React.createElement(MenuContent, null,\n            React.createElement(MenuList, null, tabs))));\n    return (React.createElement(Popper, { trigger: overflowTab, popper: overflowMenu, isVisible: isExpanded, popperMatchesTriggerWidth: false, appendTo: overflowLIRef.current, removeFindDomNode: removeFindDomNode, zIndex: zIndex }));\n};\nOverflowTab.displayName = 'OverflowTab';\n//# sourceMappingURL=OverflowTab.js.map"]},"metadata":{},"sourceType":"module"}