{"ast":null,"code":"import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { ActionsColumn } from '../../ActionsColumn';\nconst resolveOrDefault = (resolver, defaultValue, rowData, extraData) => typeof resolver === 'function' ? resolver(rowData, extraData) : defaultValue;\nexport const cellActions = (actions, actionResolver, areActionsDisabled) => (label, {\n  rowData,\n  column,\n  rowIndex,\n  columnIndex,\n  column: {\n    extraParams: {\n      dropdownPosition,\n      dropdownDirection,\n      actionsToggle,\n      menuAppendTo\n    }\n  },\n  property\n}) => {\n  const extraData = {\n    rowIndex,\n    columnIndex,\n    column,\n    property\n  };\n  const resolvedActions = resolveOrDefault(actionResolver, actions, rowData, extraData);\n  const resolvedIsDisabled = resolveOrDefault(areActionsDisabled, rowData && rowData.disableActions, rowData, extraData);\n  const renderProps = resolvedActions && resolvedActions.length > 0 ? {\n    children: React.createElement(ActionsColumn, {\n      items: resolvedActions,\n      dropdownPosition: dropdownPosition,\n      dropdownDirection: dropdownDirection,\n      menuAppendTo: menuAppendTo,\n      isDisabled: resolvedIsDisabled,\n      rowData: rowData,\n      extraData: extraData,\n      actionsToggle: actionsToggle\n    }, label)\n  } : {};\n  return Object.assign({\n    className: css(styles.tableAction),\n    style: {\n      paddingRight: 0\n    },\n    isVisible: true\n  }, renderProps);\n};","map":{"version":3,"sources":["../../../../../../src/components/Table/utils/decorators/cellActions.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,OAAO,MAAM,MAAM,qDAAqD;AACxE,SAAS,aAAa,QAAQ,qBAAqB;AAanD,MAAM,gBAAgB,GAAG,CACvB,QAAgD,EAChD,YAAgC,EAChC,OAAiB,EACjB,SAAqB,KACjB,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,OAAO,EAAE,SAAS,CAAC,GAAG,YAAa;AAEnF,OAAO,MAAM,WAAW,GAAG,CACzB,OAAiB,EACjB,cAAgC,EAChC,kBAAuC,KACxB,CACf,KAA0B,EAC1B;EACE,OAAO;EACP,MAAM;EACN,QAAQ;EACR,WAAW;EACX,MAAM,EAAE;IACN,WAAW,EAAE;MAAE,gBAAgB;MAAE,iBAAiB;MAAE,aAAa;MAAE;IAAY;EAAE,CAClF;EACD;AAAQ,CACD,KACP;EACF,MAAM,SAAS,GAAG;IAChB,QAAQ;IACR,WAAW;IACX,MAAM;IACN;GACD;EACD,MAAM,eAAe,GAAG,gBAAgB,CAAC,cAAc,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,CAAc;EAClG,MAAM,kBAAkB,GAAG,gBAAgB,CACzC,kBAAkB,EAClB,OAAO,IAAI,OAAO,CAAC,cAAc,EACjC,OAAO,EACP,SAAS,CACC;EAEZ,MAAM,WAAW,GACf,eAAe,IAAK,eAAsB,CAAC,MAAM,GAAG,CAAC,GACjD;IACE,QAAQ,EACN,KAAA,CAAA,aAAA,CAAC,aAAa,EAAA;MACZ,KAAK,EAAE,eAAe;MACtB,gBAAgB,EAAE,gBAAgB;MAClC,iBAAiB,EAAE,iBAAiB;MACpC,YAAY,EAAE,YAAY;MAC1B,UAAU,EAAE,kBAAkB;MAC9B,OAAO,EAAE,OAAO;MAChB,SAAS,EAAE,SAAS;MACpB,aAAa,EAAE;IAAa,CAAA,EAE3B,KAAwB;GAG9B,GACD,CAAA,CAAE;EAER,OAAA,MAAA,CAAA,MAAA,CAAA;IACE,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;IAClC,KAAK,EAAE;MAAE,YAAY,EAAE;IAAC,CAAE;IAC1B,SAAS,EAAE;EAAI,CAAA,EACZ,WAAW,CAAA;AAElB,CAAC","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Table/table';\nimport { ActionsColumn } from '../../ActionsColumn';\nconst resolveOrDefault = (resolver, defaultValue, rowData, extraData) => (typeof resolver === 'function' ? resolver(rowData, extraData) : defaultValue);\nexport const cellActions = (actions, actionResolver, areActionsDisabled) => (label, { rowData, column, rowIndex, columnIndex, column: { extraParams: { dropdownPosition, dropdownDirection, actionsToggle, menuAppendTo } }, property }) => {\n    const extraData = {\n        rowIndex,\n        columnIndex,\n        column,\n        property\n    };\n    const resolvedActions = resolveOrDefault(actionResolver, actions, rowData, extraData);\n    const resolvedIsDisabled = resolveOrDefault(areActionsDisabled, rowData && rowData.disableActions, rowData, extraData);\n    const renderProps = resolvedActions && resolvedActions.length > 0\n        ? {\n            children: (React.createElement(ActionsColumn, { items: resolvedActions, dropdownPosition: dropdownPosition, dropdownDirection: dropdownDirection, menuAppendTo: menuAppendTo, isDisabled: resolvedIsDisabled, rowData: rowData, extraData: extraData, actionsToggle: actionsToggle }, label))\n        }\n        : {};\n    return Object.assign({ className: css(styles.tableAction), style: { paddingRight: 0 }, isVisible: true }, renderProps);\n};\n//# sourceMappingURL=cellActions.js.map"]},"metadata":{},"sourceType":"module"}