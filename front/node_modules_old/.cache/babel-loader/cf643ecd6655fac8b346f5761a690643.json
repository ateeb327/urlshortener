{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/DualListSelector/dual-list-selector';\nimport { css } from '@patternfly/react-styles';\nimport { getUniqueId } from '../../helpers';\nimport GripVerticalIcon from '@patternfly/react-icons/dist/esm/icons/grip-vertical-icon';\nimport { Button, ButtonVariant } from '../Button';\nimport { DualListSelectorListContext } from './DualListSelectorContext';\nexport const DualListSelectorListItemBase = _a => {\n  var {\n      onOptionSelect,\n      orderIndex,\n      children,\n      className,\n      id = getUniqueId('dual-list-selector-list-item'),\n      isSelected,\n      innerRef,\n      isDraggable = false,\n      isDisabled,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      draggableButtonAriaLabel = 'Reorder option'\n    } = _a,\n    props = __rest(_a, [\"onOptionSelect\", \"orderIndex\", \"children\", \"className\", \"id\", \"isSelected\", \"innerRef\", \"isDraggable\", \"isDisabled\", \"draggableButtonAriaLabel\"]);\n  const privateRef = React.useRef(null);\n  const ref = innerRef || privateRef;\n  const {\n    setFocusedOption\n  } = React.useContext(DualListSelectorListContext);\n  return React.createElement(\"li\", Object.assign({\n    className: css(styles.dualListSelectorListItem, className, isDisabled && styles.modifiers.disabled),\n    key: orderIndex,\n    onClick: isDisabled ? undefined : e => {\n      setFocusedOption(id);\n      onOptionSelect(e, id);\n    },\n    onKeyDown: e => {\n      if (e.key === ' ' || e.key === 'Enter') {\n        document.activeElement.click();\n        e.preventDefault();\n      }\n    },\n    \"aria-selected\": isSelected,\n    id: id,\n    ref: ref,\n    role: \"option\",\n    tabIndex: -1\n  }, props), React.createElement(\"div\", {\n    className: css(styles.dualListSelectorListItemRow, isSelected && styles.modifiers.selected)\n  }, isDraggable && !isDisabled && React.createElement(\"div\", {\n    className: css(styles.dualListSelectorDraggable)\n  }, React.createElement(Button, {\n    variant: ButtonVariant.plain,\n    component: \"span\"\n  }, React.createElement(GripVerticalIcon, {\n    style: {\n      verticalAlign: '-0.3em'\n    }\n  }))), React.createElement(\"span\", {\n    className: css(styles.dualListSelectorItem)\n  }, React.createElement(\"span\", {\n    className: css(styles.dualListSelectorItemMain)\n  }, React.createElement(\"span\", {\n    className: css(styles.dualListSelectorItemText)\n  }, children)))));\n};\nDualListSelectorListItemBase.displayName = 'DualListSelectorListItemBase';\nexport const DualListSelectorListItem = React.forwardRef((props, ref) => React.createElement(DualListSelectorListItemBase, Object.assign({\n  innerRef: ref\n}, props)));\nDualListSelectorListItem.displayName = 'DualListSelectorListItem';","map":{"version":3,"sources":["../../../../src/components/DualListSelector/DualListSelectorListItem.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/DualListSelector/dual-list-selector';\nimport { css } from '@patternfly/react-styles';\nimport { getUniqueId } from '../../helpers';\nimport GripVerticalIcon from '@patternfly/react-icons/dist/esm/icons/grip-vertical-icon';\nimport { Button, ButtonVariant } from '../Button';\nimport { DualListSelectorListContext } from './DualListSelectorContext';\nexport const DualListSelectorListItemBase = (_a) => {\n    var { onOptionSelect, orderIndex, children, className, id = getUniqueId('dual-list-selector-list-item'), isSelected, innerRef, isDraggable = false, isDisabled, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    draggableButtonAriaLabel = 'Reorder option' } = _a, props = __rest(_a, [\"onOptionSelect\", \"orderIndex\", \"children\", \"className\", \"id\", \"isSelected\", \"innerRef\", \"isDraggable\", \"isDisabled\", \"draggableButtonAriaLabel\"]);\n    const privateRef = React.useRef(null);\n    const ref = innerRef || privateRef;\n    const { setFocusedOption } = React.useContext(DualListSelectorListContext);\n    return (React.createElement(\"li\", Object.assign({ className: css(styles.dualListSelectorListItem, className, isDisabled && styles.modifiers.disabled), key: orderIndex, onClick: isDisabled\n            ? undefined\n            : (e) => {\n                setFocusedOption(id);\n                onOptionSelect(e, id);\n            }, onKeyDown: (e) => {\n            if (e.key === ' ' || e.key === 'Enter') {\n                document.activeElement.click();\n                e.preventDefault();\n            }\n        }, \"aria-selected\": isSelected, id: id, ref: ref, role: \"option\", tabIndex: -1 }, props),\n        React.createElement(\"div\", { className: css(styles.dualListSelectorListItemRow, isSelected && styles.modifiers.selected) },\n            isDraggable && !isDisabled && (React.createElement(\"div\", { className: css(styles.dualListSelectorDraggable) },\n                React.createElement(Button, { variant: ButtonVariant.plain, component: \"span\" },\n                    React.createElement(GripVerticalIcon, { style: { verticalAlign: '-0.3em' } })))),\n            React.createElement(\"span\", { className: css(styles.dualListSelectorItem) },\n                React.createElement(\"span\", { className: css(styles.dualListSelectorItemMain) },\n                    React.createElement(\"span\", { className: css(styles.dualListSelectorItemText) }, children))))));\n};\nDualListSelectorListItemBase.displayName = 'DualListSelectorListItemBase';\nexport const DualListSelectorListItem = React.forwardRef((props, ref) => (React.createElement(DualListSelectorListItemBase, Object.assign({ innerRef: ref }, props))));\nDualListSelectorListItem.displayName = 'DualListSelectorListItem';\n//# sourceMappingURL=DualListSelectorListItem.js.map"]},"metadata":{},"sourceType":"module"}