{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/TextInputGroup/text-input-group';\nimport { css } from '@patternfly/react-styles';\nimport { TextInputGroupContext } from './TextInputGroup';\nexport const TextInputGroupMain = _a => {\n  var {\n      children,\n      className,\n      icon,\n      type = 'text',\n      hint,\n      onChange = () => undefined,\n      onFocus,\n      onBlur,\n      'aria-label': ariaLabel = 'Type to filter',\n      value: inputValue,\n      placeholder: inputPlaceHolder,\n      innerRef,\n      name\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"icon\", \"type\", \"hint\", \"onChange\", \"onFocus\", \"onBlur\", 'aria-label', \"value\", \"placeholder\", \"innerRef\", \"name\"]);\n  const {\n    isDisabled\n  } = React.useContext(TextInputGroupContext);\n  const ref = React.useRef(null);\n  const textInputGroupInputInputRef = innerRef || ref;\n  const handleChange = event => {\n    onChange(event, event.currentTarget.value);\n  };\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.textInputGroupMain, icon && styles.modifiers.icon, className)\n  }, props), children, React.createElement(\"span\", {\n    className: css(styles.textInputGroupText)\n  }, hint && React.createElement(\"input\", {\n    className: css(styles.textInputGroupTextInput, styles.modifiers.hint),\n    type: \"text\",\n    disabled: true,\n    \"aria-hidden\": \"true\",\n    value: hint\n  }), icon && React.createElement(\"span\", {\n    className: css(styles.textInputGroupIcon)\n  }, icon), React.createElement(\"input\", {\n    ref: textInputGroupInputInputRef,\n    type: type,\n    className: css(styles.textInputGroupTextInput),\n    \"aria-label\": ariaLabel,\n    disabled: isDisabled,\n    onChange: handleChange,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    value: inputValue || '',\n    placeholder: inputPlaceHolder,\n    name: name\n  })));\n};\nTextInputGroupMain.displayName = 'TextInputGroupMain';","map":{"version":3,"sources":["../../../../src/components/TextInputGroup/TextInputGroupMain.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAC9B,OAAO,MAAM,MAAM,yEAAyE;AAC5F,SAAS,GAAG,QAAQ,0BAA0B;AAC9C,SAAS,qBAAqB,QAAQ,kBAAkB;AA0CxD,OAAO,MAAM,kBAAkB,GAAsD,EAe3D,IAAI;MAfuD;MACnF,QAAQ;MACR,SAAS;MACT,IAAI;MACJ,IAAI,GAAG,MAAM;MACb,IAAI;MACJ,QAAQ,GAAG,CAAA,KAAW,SAAS;MAC/B,OAAO;MACP,MAAM;MACN,YAAY,EAAE,SAAS,GAAG,gBAAgB;MAC1C,KAAK,EAAE,UAAU;MACjB,WAAW,EAAE,gBAAgB;MAC7B,QAAQ;MACR;IAAI,CAAA,GAAA,EAEoB;IADrB,KAAK,GAAA,MAAA,CAAA,EAAA,EAd2E,CAAA,UAAA,EAAA,WAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,OAAA,EAAA,aAAA,EAAA,UAAA,EAAA,MAAA,CAepF,CADS;EAER,MAAM;IAAE;EAAU,CAAE,GAAG,KAAK,CAAC,UAAU,CAAC,qBAAqB,CAAC;EAC9D,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,2BAA2B,GAAG,QAAQ,IAAI,GAAG;EAEnD,MAAM,YAAY,GAAI,KAAwC,IAAI;IAChE,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC;EAC5C,CAAC;EAED,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;IAAK,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS;EAAC,CAAA,EAAM,KAAK,CAAA,EAChG,QAAQ,EACT,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,kBAAkB;EAAC,CAAA,EAC5C,IAAI,IACH,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;IACE,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,uBAAuB,EAAE,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC;IACrE,IAAI,EAAC,MAAM;IACX,QAAQ,EAAA,IAAA;IAAA,aAAA,EACI,MAAM;IAClB,KAAK,EAAE;EAAI,CAAA,CAEd,EACA,IAAI,IAAI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,kBAAkB;EAAC,CAAA,EAAG,IAAI,CAAQ,EACvE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;IACE,GAAG,EAAE,2BAA2B;IAChC,IAAI,EAAE,IAAI;IACV,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,uBAAuB,CAAC;IAAA,YAAA,EAClC,SAAS;IACrB,QAAQ,EAAE,UAAU;IACpB,QAAQ,EAAE,YAAY;IACtB,OAAO,EAAE,OAAO;IAChB,MAAM,EAAE,MAAM;IACd,KAAK,EAAE,UAAU,IAAI,EAAE;IACvB,WAAW,EAAE,gBAAgB;IAC7B,IAAI,EAAE;EAAI,CAAA,CACV,CACG,CACH;AAEV,CAAC;AAED,kBAAkB,CAAC,WAAW,GAAG,oBAAoB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/TextInputGroup/text-input-group';\nimport { css } from '@patternfly/react-styles';\nimport { TextInputGroupContext } from './TextInputGroup';\nexport const TextInputGroupMain = (_a) => {\n    var { children, className, icon, type = 'text', hint, onChange = () => undefined, onFocus, onBlur, 'aria-label': ariaLabel = 'Type to filter', value: inputValue, placeholder: inputPlaceHolder, innerRef, name } = _a, props = __rest(_a, [\"children\", \"className\", \"icon\", \"type\", \"hint\", \"onChange\", \"onFocus\", \"onBlur\", 'aria-label', \"value\", \"placeholder\", \"innerRef\", \"name\"]);\n    const { isDisabled } = React.useContext(TextInputGroupContext);\n    const ref = React.useRef(null);\n    const textInputGroupInputInputRef = innerRef || ref;\n    const handleChange = (event) => {\n        onChange(event, event.currentTarget.value);\n    };\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.textInputGroupMain, icon && styles.modifiers.icon, className) }, props),\n        children,\n        React.createElement(\"span\", { className: css(styles.textInputGroupText) },\n            hint && (React.createElement(\"input\", { className: css(styles.textInputGroupTextInput, styles.modifiers.hint), type: \"text\", disabled: true, \"aria-hidden\": \"true\", value: hint })),\n            icon && React.createElement(\"span\", { className: css(styles.textInputGroupIcon) }, icon),\n            React.createElement(\"input\", { ref: textInputGroupInputInputRef, type: type, className: css(styles.textInputGroupTextInput), \"aria-label\": ariaLabel, disabled: isDisabled, onChange: handleChange, onFocus: onFocus, onBlur: onBlur, value: inputValue || '', placeholder: inputPlaceHolder, name: name }))));\n};\nTextInputGroupMain.displayName = 'TextInputGroupMain';\n//# sourceMappingURL=TextInputGroupMain.js.map"]},"metadata":{},"sourceType":"module"}