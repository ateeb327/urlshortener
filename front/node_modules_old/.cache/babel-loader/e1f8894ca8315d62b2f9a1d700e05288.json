{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport PlusIcon from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { getUniqueId, isElementInView, formatBreakpointMods } from '../../helpers/util';\nimport { TabContent } from './TabContent';\nimport { TabsContextProvider } from './TabsContext';\nimport { OverflowTab } from './OverflowTab';\nimport { Button } from '../Button';\nimport { getOUIAProps, getDefaultOUIAId, canUseDOM } from '../../helpers';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nexport var TabsComponent;\n(function (TabsComponent) {\n  TabsComponent[\"div\"] = \"div\";\n  TabsComponent[\"nav\"] = \"nav\";\n})(TabsComponent || (TabsComponent = {}));\nconst variantStyle = {\n  default: '',\n  light300: styles.modifiers.colorSchemeLight_300\n};\nexport class Tabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tabList = React.createRef();\n    this.leftScrollButtonRef = React.createRef();\n    this.scrollTimeout = null;\n    this.countOverflowingElements = container => {\n      const elements = Array.from(container.children);\n      return elements.filter(element => !isElementInView(container, element, false)).length;\n    };\n    this.handleScrollButtons = () => {\n      const {\n        isOverflowHorizontal: isOverflowHorizontal\n      } = this.props;\n      // add debounce to the scroll event\n      clearTimeout(this.scrollTimeout);\n      this.scrollTimeout = setTimeout(() => {\n        const container = this.tabList.current;\n        let disableLeftScrollButton = true;\n        let disableRightScrollButton = true;\n        let enableScrollButtons = false;\n        let overflowingTabCount = 0;\n        if (container && !this.props.isVertical && !isOverflowHorizontal) {\n          // get first element and check if it is in view\n          const overflowOnLeft = !isElementInView(container, container.firstChild, false);\n          // get last element and check if it is in view\n          const overflowOnRight = !isElementInView(container, container.lastChild, false);\n          enableScrollButtons = overflowOnLeft || overflowOnRight;\n          disableLeftScrollButton = !overflowOnLeft;\n          disableRightScrollButton = !overflowOnRight;\n        }\n        if (isOverflowHorizontal) {\n          overflowingTabCount = this.countOverflowingElements(container);\n        }\n        this.setState({\n          enableScrollButtons,\n          disableLeftScrollButton,\n          disableRightScrollButton,\n          overflowingTabCount\n        });\n      }, 100);\n    };\n    this.scrollLeft = () => {\n      // find first Element that is fully in view on the left, then scroll to the element before it\n      if (this.tabList.current) {\n        const container = this.tabList.current;\n        const childrenArr = Array.from(container.children);\n        let firstElementInView;\n        let lastElementOutOfView;\n        let i;\n        for (i = 0; i < childrenArr.length && !firstElementInView; i++) {\n          if (isElementInView(container, childrenArr[i], false)) {\n            firstElementInView = childrenArr[i];\n            lastElementOutOfView = childrenArr[i - 1];\n          }\n        }\n        if (lastElementOutOfView) {\n          container.scrollLeft -= lastElementOutOfView.scrollWidth;\n        }\n      }\n    };\n    this.scrollRight = () => {\n      // find last Element that is fully in view on the right, then scroll to the element after it\n      if (this.tabList.current) {\n        const container = this.tabList.current;\n        const childrenArr = Array.from(container.children);\n        let lastElementInView;\n        let firstElementOutOfView;\n        for (let i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {\n          if (isElementInView(container, childrenArr[i], false)) {\n            lastElementInView = childrenArr[i];\n            firstElementOutOfView = childrenArr[i + 1];\n          }\n        }\n        if (firstElementOutOfView) {\n          container.scrollLeft += firstElementOutOfView.scrollWidth;\n        }\n      }\n    };\n    this.hideScrollButtons = () => {\n      const {\n        enableScrollButtons,\n        renderScrollButtons,\n        showScrollButtons\n      } = this.state;\n      if (!enableScrollButtons && !showScrollButtons && renderScrollButtons) {\n        this.setState({\n          renderScrollButtons: false\n        });\n      }\n    };\n    this.state = {\n      enableScrollButtons: false,\n      showScrollButtons: false,\n      renderScrollButtons: false,\n      disableLeftScrollButton: true,\n      disableRightScrollButton: true,\n      shownKeys: this.props.defaultActiveKey !== undefined ? [this.props.defaultActiveKey] : [this.props.activeKey],\n      uncontrolledActiveKey: this.props.defaultActiveKey,\n      uncontrolledIsExpandedLocal: this.props.defaultIsExpanded,\n      ouiaStateId: getDefaultOUIAId(Tabs.displayName),\n      overflowingTabCount: 0\n    };\n    if (this.props.isVertical && this.props.expandable !== undefined) {\n      if (!this.props.toggleAriaLabel && !this.props.toggleText) {\n        // eslint-disable-next-line no-console\n        console.error('Tabs:', 'toggleAriaLabel or the toggleText prop is required to make the toggle button accessible');\n      }\n    }\n  }\n  handleTabClick(event, eventKey, tabContentRef) {\n    const {\n      shownKeys\n    } = this.state;\n    const {\n      onSelect,\n      defaultActiveKey\n    } = this.props;\n    // if defaultActiveKey Tabs are uncontrolled, set new active key internally\n    if (defaultActiveKey !== undefined) {\n      this.setState({\n        uncontrolledActiveKey: eventKey\n      });\n    } else {\n      onSelect(event, eventKey);\n    }\n    // process any tab content sections outside of the component\n    if (tabContentRef) {\n      React.Children.toArray(this.props.children).map(child => child).filter(child => child.props && child.props.tabContentRef && child.props.tabContentRef.current).forEach(child => child.props.tabContentRef.current.hidden = true);\n      // most recently selected tabContent\n      if (tabContentRef.current) {\n        tabContentRef.current.hidden = false;\n      }\n    }\n    if (this.props.mountOnEnter) {\n      this.setState({\n        shownKeys: shownKeys.concat(eventKey)\n      });\n    }\n  }\n  componentDidMount() {\n    if (!this.props.isVertical) {\n      if (canUseDOM) {\n        window.addEventListener('resize', this.handleScrollButtons, false);\n      }\n      // call the handle resize function to check if scroll buttons should be shown\n      this.handleScrollButtons();\n    }\n  }\n  componentWillUnmount() {\n    var _a;\n    if (!this.props.isVertical) {\n      if (canUseDOM) {\n        window.removeEventListener('resize', this.handleScrollButtons, false);\n      }\n    }\n    clearTimeout(this.scrollTimeout);\n    (_a = this.leftScrollButtonRef.current) === null || _a === void 0 ? void 0 : _a.removeEventListener('transitionend', this.hideScrollButtons);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      activeKey,\n      mountOnEnter,\n      isOverflowHorizontal,\n      children\n    } = this.props;\n    const {\n      shownKeys,\n      overflowingTabCount,\n      enableScrollButtons\n    } = this.state;\n    if (prevProps.activeKey !== activeKey && mountOnEnter && shownKeys.indexOf(activeKey) < 0) {\n      this.setState({\n        shownKeys: shownKeys.concat(activeKey)\n      });\n    }\n    if (prevProps.children && children && React.Children.toArray(prevProps.children).length !== React.Children.toArray(children).length) {\n      this.handleScrollButtons();\n    }\n    const currentOverflowingTabCount = this.countOverflowingElements(this.tabList.current);\n    if (isOverflowHorizontal && currentOverflowingTabCount) {\n      this.setState({\n        overflowingTabCount: currentOverflowingTabCount + overflowingTabCount\n      });\n    }\n    if (!prevState.enableScrollButtons && enableScrollButtons) {\n      this.setState({\n        renderScrollButtons: true\n      });\n      setTimeout(() => {\n        var _a;\n        (_a = this.leftScrollButtonRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener('transitionend', this.hideScrollButtons);\n        this.setState({\n          showScrollButtons: true\n        });\n      }, 100);\n    } else if (prevState.enableScrollButtons && !enableScrollButtons) {\n      this.setState({\n        showScrollButtons: false\n      });\n    }\n  }\n  render() {\n    const _a = this.props,\n      {\n        className,\n        children,\n        activeKey,\n        defaultActiveKey,\n        id,\n        isFilled,\n        isSecondary,\n        isVertical,\n        isBox,\n        hasBorderBottom,\n        hasSecondaryBorderBottom,\n        leftScrollAriaLabel,\n        rightScrollAriaLabel,\n        'aria-label': ariaLabel,\n        component,\n        ouiaId,\n        ouiaSafe,\n        mountOnEnter,\n        unmountOnExit,\n        usePageInsets,\n        inset,\n        variant,\n        expandable,\n        isExpanded,\n        defaultIsExpanded,\n        toggleText,\n        toggleAriaLabel,\n        addButtonAriaLabel,\n        onToggle,\n        onClose,\n        onAdd,\n        isOverflowHorizontal: isOverflowHorizontal\n      } = _a,\n      props = __rest(_a, [\"className\", \"children\", \"activeKey\", \"defaultActiveKey\", \"id\", \"isFilled\", \"isSecondary\", \"isVertical\", \"isBox\", \"hasBorderBottom\", \"hasSecondaryBorderBottom\", \"leftScrollAriaLabel\", \"rightScrollAriaLabel\", 'aria-label', \"component\", \"ouiaId\", \"ouiaSafe\", \"mountOnEnter\", \"unmountOnExit\", \"usePageInsets\", \"inset\", \"variant\", \"expandable\", \"isExpanded\", \"defaultIsExpanded\", \"toggleText\", \"toggleAriaLabel\", \"addButtonAriaLabel\", \"onToggle\", \"onClose\", \"onAdd\", \"isOverflowHorizontal\"]);\n    const {\n      showScrollButtons,\n      renderScrollButtons,\n      disableLeftScrollButton,\n      disableRightScrollButton,\n      shownKeys,\n      uncontrolledActiveKey,\n      uncontrolledIsExpandedLocal,\n      overflowingTabCount\n    } = this.state;\n    const filteredChildren = React.Children.toArray(children).filter(Boolean).filter(child => !child.props.isHidden);\n    const filteredChildrenWithoutOverflow = filteredChildren.slice(0, filteredChildren.length - overflowingTabCount);\n    const filteredChildrenOverflowing = filteredChildren.slice(filteredChildren.length - overflowingTabCount);\n    const overflowingTabProps = filteredChildrenOverflowing.map(child => child.props);\n    const uniqueId = id || getUniqueId();\n    const Component = component === TabsComponent.nav ? 'nav' : 'div';\n    const localActiveKey = defaultActiveKey !== undefined ? uncontrolledActiveKey : activeKey;\n    const isExpandedLocal = defaultIsExpanded !== undefined ? uncontrolledIsExpandedLocal : isExpanded;\n    /*  Uncontrolled expandable tabs */\n    const toggleTabs = newValue => {\n      if (isExpanded === undefined) {\n        this.setState({\n          uncontrolledIsExpandedLocal: newValue\n        });\n      } else {\n        onToggle(newValue);\n      }\n    };\n    const hasOverflowTab = isOverflowHorizontal && overflowingTabCount > 0;\n    const overflowObjectProps = typeof isOverflowHorizontal === 'object' ? Object.assign({}, isOverflowHorizontal) : {};\n    return React.createElement(TabsContextProvider, {\n      value: {\n        variant,\n        mountOnEnter,\n        unmountOnExit,\n        localActiveKey,\n        uniqueId,\n        handleTabClick: (...args) => this.handleTabClick(...args),\n        handleTabClose: onClose\n      }\n    }, React.createElement(Component, Object.assign({\n      \"aria-label\": ariaLabel,\n      className: css(styles.tabs, isFilled && styles.modifiers.fill, isSecondary && styles.modifiers.secondary, isVertical && styles.modifiers.vertical, isVertical && expandable && formatBreakpointMods(expandable, styles), isVertical && expandable && isExpandedLocal && styles.modifiers.expanded, isBox && styles.modifiers.box, showScrollButtons && styles.modifiers.scrollable, usePageInsets && styles.modifiers.pageInsets, !hasBorderBottom && styles.modifiers.noBorderBottom, hasSecondaryBorderBottom && styles.modifiers.borderBottom, formatBreakpointMods(inset, styles), variantStyle[variant], hasOverflowTab && styles.modifiers.overflow, className)\n    }, getOUIAProps(Tabs.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), {\n      id: id && id\n    }, props), expandable && isVertical && React.createElement(GenerateId, null, randomId => React.createElement(\"div\", {\n      className: css(styles.tabsToggle)\n    }, React.createElement(\"div\", {\n      className: css(styles.tabsToggleButton)\n    }, React.createElement(Button, {\n      onClick: () => toggleTabs(!isExpandedLocal),\n      variant: \"plain\",\n      \"aria-label\": toggleAriaLabel,\n      \"aria-expanded\": isExpandedLocal,\n      id: `${randomId}-button`,\n      \"aria-labelledby\": `${randomId}-text ${randomId}-button`\n    }, React.createElement(\"span\", {\n      className: css(styles.tabsToggleIcon)\n    }, React.createElement(AngleRightIcon, {\n      \"arian-hidden\": \"true\"\n    })), toggleText && React.createElement(\"span\", {\n      className: css('pf-c-tabs__toggle-text'),\n      id: `${randomId}-text`\n    }, toggleText))))), renderScrollButtons && React.createElement(\"button\", {\n      type: \"button\",\n      className: css(styles.tabsScrollButton, isSecondary && buttonStyles.modifiers.secondary),\n      \"aria-label\": leftScrollAriaLabel,\n      onClick: this.scrollLeft,\n      disabled: disableLeftScrollButton,\n      \"aria-hidden\": disableLeftScrollButton,\n      ref: this.leftScrollButtonRef\n    }, React.createElement(AngleLeftIcon, null)), React.createElement(\"ul\", {\n      className: css(styles.tabsList),\n      ref: this.tabList,\n      onScroll: this.handleScrollButtons,\n      role: \"tablist\"\n    }, isOverflowHorizontal ? filteredChildrenWithoutOverflow : filteredChildren, hasOverflowTab && React.createElement(OverflowTab, Object.assign({\n      overflowingTabs: overflowingTabProps\n    }, overflowObjectProps))), renderScrollButtons && React.createElement(\"button\", {\n      type: \"button\",\n      className: css(styles.tabsScrollButton, isSecondary && buttonStyles.modifiers.secondary),\n      \"aria-label\": rightScrollAriaLabel,\n      onClick: this.scrollRight,\n      disabled: disableRightScrollButton,\n      \"aria-hidden\": disableRightScrollButton\n    }, React.createElement(AngleRightIcon, null)), onAdd !== undefined && React.createElement(\"span\", {\n      className: css(styles.tabsAdd)\n    }, React.createElement(Button, {\n      variant: \"plain\",\n      \"aria-label\": addButtonAriaLabel || 'Add tab',\n      onClick: onAdd\n    }, React.createElement(PlusIcon, null)))), filteredChildren.filter(child => child.props.children && !(unmountOnExit && child.props.eventKey !== localActiveKey) && !(mountOnEnter && shownKeys.indexOf(child.props.eventKey) === -1)).map(child => React.createElement(TabContent, {\n      key: child.props.eventKey,\n      activeKey: localActiveKey,\n      child: child,\n      id: child.props.id || uniqueId,\n      ouiaId: child.props.ouiaId\n    })));\n  }\n}\nTabs.displayName = 'Tabs';\nTabs.defaultProps = {\n  activeKey: 0,\n  onSelect: () => undefined,\n  isFilled: false,\n  isSecondary: false,\n  isVertical: false,\n  isBox: false,\n  hasBorderBottom: true,\n  leftScrollAriaLabel: 'Scroll left',\n  rightScrollAriaLabel: 'Scroll right',\n  component: TabsComponent.div,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  ouiaSafe: true,\n  variant: 'default',\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onToggle: isExpanded => undefined\n};","map":{"version":3,"sources":["../../../../src/components/Tabs/Tabs.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport PlusIcon from '@patternfly/react-icons/dist/esm/icons/plus-icon';\nimport { getUniqueId, isElementInView, formatBreakpointMods } from '../../helpers/util';\nimport { TabContent } from './TabContent';\nimport { TabsContextProvider } from './TabsContext';\nimport { OverflowTab } from './OverflowTab';\nimport { Button } from '../Button';\nimport { getOUIAProps, getDefaultOUIAId, canUseDOM } from '../../helpers';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nexport var TabsComponent;\n(function (TabsComponent) {\n    TabsComponent[\"div\"] = \"div\";\n    TabsComponent[\"nav\"] = \"nav\";\n})(TabsComponent || (TabsComponent = {}));\nconst variantStyle = {\n    default: '',\n    light300: styles.modifiers.colorSchemeLight_300\n};\nexport class Tabs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.tabList = React.createRef();\n        this.leftScrollButtonRef = React.createRef();\n        this.scrollTimeout = null;\n        this.countOverflowingElements = (container) => {\n            const elements = Array.from(container.children);\n            return elements.filter(element => !isElementInView(container, element, false)).length;\n        };\n        this.handleScrollButtons = () => {\n            const { isOverflowHorizontal: isOverflowHorizontal } = this.props;\n            // add debounce to the scroll event\n            clearTimeout(this.scrollTimeout);\n            this.scrollTimeout = setTimeout(() => {\n                const container = this.tabList.current;\n                let disableLeftScrollButton = true;\n                let disableRightScrollButton = true;\n                let enableScrollButtons = false;\n                let overflowingTabCount = 0;\n                if (container && !this.props.isVertical && !isOverflowHorizontal) {\n                    // get first element and check if it is in view\n                    const overflowOnLeft = !isElementInView(container, container.firstChild, false);\n                    // get last element and check if it is in view\n                    const overflowOnRight = !isElementInView(container, container.lastChild, false);\n                    enableScrollButtons = overflowOnLeft || overflowOnRight;\n                    disableLeftScrollButton = !overflowOnLeft;\n                    disableRightScrollButton = !overflowOnRight;\n                }\n                if (isOverflowHorizontal) {\n                    overflowingTabCount = this.countOverflowingElements(container);\n                }\n                this.setState({\n                    enableScrollButtons,\n                    disableLeftScrollButton,\n                    disableRightScrollButton,\n                    overflowingTabCount\n                });\n            }, 100);\n        };\n        this.scrollLeft = () => {\n            // find first Element that is fully in view on the left, then scroll to the element before it\n            if (this.tabList.current) {\n                const container = this.tabList.current;\n                const childrenArr = Array.from(container.children);\n                let firstElementInView;\n                let lastElementOutOfView;\n                let i;\n                for (i = 0; i < childrenArr.length && !firstElementInView; i++) {\n                    if (isElementInView(container, childrenArr[i], false)) {\n                        firstElementInView = childrenArr[i];\n                        lastElementOutOfView = childrenArr[i - 1];\n                    }\n                }\n                if (lastElementOutOfView) {\n                    container.scrollLeft -= lastElementOutOfView.scrollWidth;\n                }\n            }\n        };\n        this.scrollRight = () => {\n            // find last Element that is fully in view on the right, then scroll to the element after it\n            if (this.tabList.current) {\n                const container = this.tabList.current;\n                const childrenArr = Array.from(container.children);\n                let lastElementInView;\n                let firstElementOutOfView;\n                for (let i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {\n                    if (isElementInView(container, childrenArr[i], false)) {\n                        lastElementInView = childrenArr[i];\n                        firstElementOutOfView = childrenArr[i + 1];\n                    }\n                }\n                if (firstElementOutOfView) {\n                    container.scrollLeft += firstElementOutOfView.scrollWidth;\n                }\n            }\n        };\n        this.hideScrollButtons = () => {\n            const { enableScrollButtons, renderScrollButtons, showScrollButtons } = this.state;\n            if (!enableScrollButtons && !showScrollButtons && renderScrollButtons) {\n                this.setState({ renderScrollButtons: false });\n            }\n        };\n        this.state = {\n            enableScrollButtons: false,\n            showScrollButtons: false,\n            renderScrollButtons: false,\n            disableLeftScrollButton: true,\n            disableRightScrollButton: true,\n            shownKeys: this.props.defaultActiveKey !== undefined ? [this.props.defaultActiveKey] : [this.props.activeKey],\n            uncontrolledActiveKey: this.props.defaultActiveKey,\n            uncontrolledIsExpandedLocal: this.props.defaultIsExpanded,\n            ouiaStateId: getDefaultOUIAId(Tabs.displayName),\n            overflowingTabCount: 0\n        };\n        if (this.props.isVertical && this.props.expandable !== undefined) {\n            if (!this.props.toggleAriaLabel && !this.props.toggleText) {\n                // eslint-disable-next-line no-console\n                console.error('Tabs:', 'toggleAriaLabel or the toggleText prop is required to make the toggle button accessible');\n            }\n        }\n    }\n    handleTabClick(event, eventKey, tabContentRef) {\n        const { shownKeys } = this.state;\n        const { onSelect, defaultActiveKey } = this.props;\n        // if defaultActiveKey Tabs are uncontrolled, set new active key internally\n        if (defaultActiveKey !== undefined) {\n            this.setState({\n                uncontrolledActiveKey: eventKey\n            });\n        }\n        else {\n            onSelect(event, eventKey);\n        }\n        // process any tab content sections outside of the component\n        if (tabContentRef) {\n            React.Children.toArray(this.props.children)\n                .map(child => child)\n                .filter(child => child.props && child.props.tabContentRef && child.props.tabContentRef.current)\n                .forEach(child => (child.props.tabContentRef.current.hidden = true));\n            // most recently selected tabContent\n            if (tabContentRef.current) {\n                tabContentRef.current.hidden = false;\n            }\n        }\n        if (this.props.mountOnEnter) {\n            this.setState({\n                shownKeys: shownKeys.concat(eventKey)\n            });\n        }\n    }\n    componentDidMount() {\n        if (!this.props.isVertical) {\n            if (canUseDOM) {\n                window.addEventListener('resize', this.handleScrollButtons, false);\n            }\n            // call the handle resize function to check if scroll buttons should be shown\n            this.handleScrollButtons();\n        }\n    }\n    componentWillUnmount() {\n        var _a;\n        if (!this.props.isVertical) {\n            if (canUseDOM) {\n                window.removeEventListener('resize', this.handleScrollButtons, false);\n            }\n        }\n        clearTimeout(this.scrollTimeout);\n        (_a = this.leftScrollButtonRef.current) === null || _a === void 0 ? void 0 : _a.removeEventListener('transitionend', this.hideScrollButtons);\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { activeKey, mountOnEnter, isOverflowHorizontal, children } = this.props;\n        const { shownKeys, overflowingTabCount, enableScrollButtons } = this.state;\n        if (prevProps.activeKey !== activeKey && mountOnEnter && shownKeys.indexOf(activeKey) < 0) {\n            this.setState({\n                shownKeys: shownKeys.concat(activeKey)\n            });\n        }\n        if (prevProps.children &&\n            children &&\n            React.Children.toArray(prevProps.children).length !== React.Children.toArray(children).length) {\n            this.handleScrollButtons();\n        }\n        const currentOverflowingTabCount = this.countOverflowingElements(this.tabList.current);\n        if (isOverflowHorizontal && currentOverflowingTabCount) {\n            this.setState({ overflowingTabCount: currentOverflowingTabCount + overflowingTabCount });\n        }\n        if (!prevState.enableScrollButtons && enableScrollButtons) {\n            this.setState({ renderScrollButtons: true });\n            setTimeout(() => {\n                var _a;\n                (_a = this.leftScrollButtonRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener('transitionend', this.hideScrollButtons);\n                this.setState({ showScrollButtons: true });\n            }, 100);\n        }\n        else if (prevState.enableScrollButtons && !enableScrollButtons) {\n            this.setState({ showScrollButtons: false });\n        }\n    }\n    render() {\n        const _a = this.props, { className, children, activeKey, defaultActiveKey, id, isFilled, isSecondary, isVertical, isBox, hasBorderBottom, hasSecondaryBorderBottom, leftScrollAriaLabel, rightScrollAriaLabel, 'aria-label': ariaLabel, component, ouiaId, ouiaSafe, mountOnEnter, unmountOnExit, usePageInsets, inset, variant, expandable, isExpanded, defaultIsExpanded, toggleText, toggleAriaLabel, addButtonAriaLabel, onToggle, onClose, onAdd, isOverflowHorizontal: isOverflowHorizontal } = _a, props = __rest(_a, [\"className\", \"children\", \"activeKey\", \"defaultActiveKey\", \"id\", \"isFilled\", \"isSecondary\", \"isVertical\", \"isBox\", \"hasBorderBottom\", \"hasSecondaryBorderBottom\", \"leftScrollAriaLabel\", \"rightScrollAriaLabel\", 'aria-label', \"component\", \"ouiaId\", \"ouiaSafe\", \"mountOnEnter\", \"unmountOnExit\", \"usePageInsets\", \"inset\", \"variant\", \"expandable\", \"isExpanded\", \"defaultIsExpanded\", \"toggleText\", \"toggleAriaLabel\", \"addButtonAriaLabel\", \"onToggle\", \"onClose\", \"onAdd\", \"isOverflowHorizontal\"]);\n        const { showScrollButtons, renderScrollButtons, disableLeftScrollButton, disableRightScrollButton, shownKeys, uncontrolledActiveKey, uncontrolledIsExpandedLocal, overflowingTabCount } = this.state;\n        const filteredChildren = React.Children.toArray(children)\n            .filter(Boolean)\n            .filter(child => !child.props.isHidden);\n        const filteredChildrenWithoutOverflow = filteredChildren.slice(0, filteredChildren.length - overflowingTabCount);\n        const filteredChildrenOverflowing = filteredChildren.slice(filteredChildren.length - overflowingTabCount);\n        const overflowingTabProps = filteredChildrenOverflowing.map((child) => child.props);\n        const uniqueId = id || getUniqueId();\n        const Component = component === TabsComponent.nav ? 'nav' : 'div';\n        const localActiveKey = defaultActiveKey !== undefined ? uncontrolledActiveKey : activeKey;\n        const isExpandedLocal = defaultIsExpanded !== undefined ? uncontrolledIsExpandedLocal : isExpanded;\n        /*  Uncontrolled expandable tabs */\n        const toggleTabs = (newValue) => {\n            if (isExpanded === undefined) {\n                this.setState({ uncontrolledIsExpandedLocal: newValue });\n            }\n            else {\n                onToggle(newValue);\n            }\n        };\n        const hasOverflowTab = isOverflowHorizontal && overflowingTabCount > 0;\n        const overflowObjectProps = typeof isOverflowHorizontal === 'object' ? Object.assign({}, isOverflowHorizontal) : {};\n        return (React.createElement(TabsContextProvider, { value: {\n                variant,\n                mountOnEnter,\n                unmountOnExit,\n                localActiveKey,\n                uniqueId,\n                handleTabClick: (...args) => this.handleTabClick(...args),\n                handleTabClose: onClose\n            } },\n            React.createElement(Component, Object.assign({ \"aria-label\": ariaLabel, className: css(styles.tabs, isFilled && styles.modifiers.fill, isSecondary && styles.modifiers.secondary, isVertical && styles.modifiers.vertical, isVertical && expandable && formatBreakpointMods(expandable, styles), isVertical && expandable && isExpandedLocal && styles.modifiers.expanded, isBox && styles.modifiers.box, showScrollButtons && styles.modifiers.scrollable, usePageInsets && styles.modifiers.pageInsets, !hasBorderBottom && styles.modifiers.noBorderBottom, hasSecondaryBorderBottom && styles.modifiers.borderBottom, formatBreakpointMods(inset, styles), variantStyle[variant], hasOverflowTab && styles.modifiers.overflow, className) }, getOUIAProps(Tabs.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), { id: id && id }, props),\n                expandable && isVertical && (React.createElement(GenerateId, null, randomId => (React.createElement(\"div\", { className: css(styles.tabsToggle) },\n                    React.createElement(\"div\", { className: css(styles.tabsToggleButton) },\n                        React.createElement(Button, { onClick: () => toggleTabs(!isExpandedLocal), variant: \"plain\", \"aria-label\": toggleAriaLabel, \"aria-expanded\": isExpandedLocal, id: `${randomId}-button`, \"aria-labelledby\": `${randomId}-text ${randomId}-button` },\n                            React.createElement(\"span\", { className: css(styles.tabsToggleIcon) },\n                                React.createElement(AngleRightIcon, { \"arian-hidden\": \"true\" })),\n                            toggleText && (React.createElement(\"span\", { className: css('pf-c-tabs__toggle-text'), id: `${randomId}-text` }, toggleText)))))))),\n                renderScrollButtons && (React.createElement(\"button\", { type: \"button\", className: css(styles.tabsScrollButton, isSecondary && buttonStyles.modifiers.secondary), \"aria-label\": leftScrollAriaLabel, onClick: this.scrollLeft, disabled: disableLeftScrollButton, \"aria-hidden\": disableLeftScrollButton, ref: this.leftScrollButtonRef },\n                    React.createElement(AngleLeftIcon, null))),\n                React.createElement(\"ul\", { className: css(styles.tabsList), ref: this.tabList, onScroll: this.handleScrollButtons, role: \"tablist\" },\n                    isOverflowHorizontal ? filteredChildrenWithoutOverflow : filteredChildren,\n                    hasOverflowTab && React.createElement(OverflowTab, Object.assign({ overflowingTabs: overflowingTabProps }, overflowObjectProps))),\n                renderScrollButtons && (React.createElement(\"button\", { type: \"button\", className: css(styles.tabsScrollButton, isSecondary && buttonStyles.modifiers.secondary), \"aria-label\": rightScrollAriaLabel, onClick: this.scrollRight, disabled: disableRightScrollButton, \"aria-hidden\": disableRightScrollButton },\n                    React.createElement(AngleRightIcon, null))),\n                onAdd !== undefined && (React.createElement(\"span\", { className: css(styles.tabsAdd) },\n                    React.createElement(Button, { variant: \"plain\", \"aria-label\": addButtonAriaLabel || 'Add tab', onClick: onAdd },\n                        React.createElement(PlusIcon, null))))),\n            filteredChildren\n                .filter(child => child.props.children &&\n                !(unmountOnExit && child.props.eventKey !== localActiveKey) &&\n                !(mountOnEnter && shownKeys.indexOf(child.props.eventKey) === -1))\n                .map(child => (React.createElement(TabContent, { key: child.props.eventKey, activeKey: localActiveKey, child: child, id: child.props.id || uniqueId, ouiaId: child.props.ouiaId })))));\n    }\n}\nTabs.displayName = 'Tabs';\nTabs.defaultProps = {\n    activeKey: 0,\n    onSelect: () => undefined,\n    isFilled: false,\n    isSecondary: false,\n    isVertical: false,\n    isBox: false,\n    hasBorderBottom: true,\n    leftScrollAriaLabel: 'Scroll left',\n    rightScrollAriaLabel: 'Scroll right',\n    component: TabsComponent.div,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    ouiaSafe: true,\n    variant: 'default',\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onToggle: (isExpanded) => undefined\n};\n//# sourceMappingURL=Tabs.js.map"]},"metadata":{},"sourceType":"module"}