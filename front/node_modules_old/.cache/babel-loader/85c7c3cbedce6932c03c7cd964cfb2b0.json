{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Pagination/pagination';\nimport { css } from '@patternfly/react-styles';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleDoubleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-double-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport AngleDoubleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-double-right-icon';\nimport { Button, ButtonVariant } from '../Button';\nimport { pluralize } from '../../helpers';\nimport { KeyTypes } from '../../helpers/constants';\nexport class Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleNewPage = (_evt, newPage) => {\n      const {\n        perPage,\n        onSetPage\n      } = this.props;\n      const startIdx = (newPage - 1) * perPage;\n      const endIdx = newPage * perPage;\n      return onSetPage(_evt, newPage, perPage, startIdx, endIdx);\n    };\n    this.state = {\n      userInputPage: this.props.page\n    };\n  }\n  static parseInteger(input, lastPage) {\n    // eslint-disable-next-line radix\n    let inputPage = Number.parseInt(input, 10);\n    if (!Number.isNaN(inputPage)) {\n      inputPage = inputPage > lastPage ? lastPage : inputPage;\n      inputPage = inputPage < 1 ? 1 : inputPage;\n    }\n    return inputPage;\n  }\n  onChange(event, lastPage) {\n    const inputPage = Navigation.parseInteger(event.target.value, lastPage);\n    this.setState({\n      userInputPage: Number.isNaN(inputPage) ? event.target.value : inputPage\n    });\n  }\n  onKeyDown(event, page, lastPage, onPageInput) {\n    if (event.key === KeyTypes.Enter) {\n      const inputPage = Navigation.parseInteger(this.state.userInputPage, lastPage);\n      onPageInput(event, Number.isNaN(inputPage) ? page : inputPage);\n      this.handleNewPage(event, Number.isNaN(inputPage) ? page : inputPage);\n    }\n  }\n  componentDidUpdate(lastState) {\n    if (this.props.page !== lastState.page && this.props.page <= this.props.lastPage && this.state.userInputPage !== this.props.page) {\n      this.setState({\n        userInputPage: this.props.page\n      });\n    }\n  }\n  render() {\n    const _a = this.props,\n      {\n        page,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        perPage,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onSetPage,\n        isDisabled,\n        itemCount,\n        lastPage,\n        firstPage,\n        pagesTitle,\n        pagesTitlePlural,\n        toLastPage,\n        toNextPage,\n        toFirstPage,\n        toPreviousPage,\n        currPage,\n        paginationTitle,\n        ofWord,\n        onNextClick,\n        onPreviousClick,\n        onFirstClick,\n        onLastClick,\n        onPageInput,\n        className,\n        isCompact\n      } = _a,\n      props = __rest(_a, [\"page\", \"perPage\", \"onSetPage\", \"isDisabled\", \"itemCount\", \"lastPage\", \"firstPage\", \"pagesTitle\", \"pagesTitlePlural\", \"toLastPage\", \"toNextPage\", \"toFirstPage\", \"toPreviousPage\", \"currPage\", \"paginationTitle\", \"ofWord\", \"onNextClick\", \"onPreviousClick\", \"onFirstClick\", \"onLastClick\", \"onPageInput\", \"className\", \"isCompact\"]);\n    const {\n      userInputPage\n    } = this.state;\n    return React.createElement(\"nav\", Object.assign({\n      className: css(styles.paginationNav, className),\n      \"aria-label\": paginationTitle\n    }, props), !isCompact && React.createElement(\"div\", {\n      className: css(styles.paginationNavControl, styles.modifiers.first)\n    }, React.createElement(Button, {\n      variant: ButtonVariant.plain,\n      isDisabled: isDisabled || page === firstPage || page === 0,\n      \"aria-label\": toFirstPage,\n      \"data-action\": \"first\",\n      onClick: event => {\n        onFirstClick(event, 1);\n        this.handleNewPage(event, 1);\n        this.setState({\n          userInputPage: 1\n        });\n      }\n    }, React.createElement(AngleDoubleLeftIcon, null))), React.createElement(\"div\", {\n      className: styles.paginationNavControl\n    }, React.createElement(Button, {\n      variant: ButtonVariant.plain,\n      isDisabled: isDisabled || page === firstPage || page === 0,\n      \"data-action\": \"previous\",\n      onClick: event => {\n        const newPage = page - 1 >= 1 ? page - 1 : 1;\n        onPreviousClick(event, newPage);\n        this.handleNewPage(event, newPage);\n        this.setState({\n          userInputPage: newPage\n        });\n      },\n      \"aria-label\": toPreviousPage\n    }, React.createElement(AngleLeftIcon, null))), !isCompact && React.createElement(\"div\", {\n      className: styles.paginationNavPageSelect\n    }, React.createElement(\"input\", {\n      className: css(styles.formControl),\n      \"aria-label\": currPage,\n      type: \"number\",\n      disabled: isDisabled || itemCount && page === firstPage && page === lastPage && itemCount >= 0 || page === 0,\n      min: lastPage <= 0 && firstPage <= 0 ? 0 : 1,\n      max: lastPage,\n      value: userInputPage,\n      onKeyDown: event => this.onKeyDown(event, page, lastPage, onPageInput),\n      onChange: event => this.onChange(event, lastPage)\n    }), (itemCount || itemCount === 0) && React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, ofWord, \" \", pagesTitle ? pluralize(lastPage, pagesTitle, pagesTitlePlural) : lastPage)), React.createElement(\"div\", {\n      className: styles.paginationNavControl\n    }, React.createElement(Button, {\n      variant: ButtonVariant.plain,\n      isDisabled: isDisabled || page === lastPage,\n      \"aria-label\": toNextPage,\n      \"data-action\": \"next\",\n      onClick: event => {\n        const newPage = page + 1 <= lastPage ? page + 1 : lastPage;\n        onNextClick(event, newPage);\n        this.handleNewPage(event, newPage);\n        this.setState({\n          userInputPage: newPage\n        });\n      }\n    }, React.createElement(AngleRightIcon, null))), !isCompact && React.createElement(\"div\", {\n      className: css(styles.paginationNavControl, styles.modifiers.last)\n    }, React.createElement(Button, {\n      variant: ButtonVariant.plain,\n      isDisabled: isDisabled || page === lastPage,\n      \"aria-label\": toLastPage,\n      \"data-action\": \"last\",\n      onClick: event => {\n        onLastClick(event, lastPage);\n        this.handleNewPage(event, lastPage);\n        this.setState({\n          userInputPage: lastPage\n        });\n      }\n    }, React.createElement(AngleDoubleRightIcon, null))));\n  }\n}\nNavigation.displayName = 'Navigation';\nNavigation.defaultProps = {\n  className: '',\n  isDisabled: false,\n  isCompact: false,\n  lastPage: 0,\n  firstPage: 0,\n  pagesTitle: '',\n  pagesTitlePlural: '',\n  toLastPage: 'Go to last page',\n  toNextPage: 'Go to next page',\n  toFirstPage: 'Go to first page',\n  toPreviousPage: 'Go to previous page',\n  currPage: 'Current page',\n  paginationTitle: 'Pagination',\n  ofWord: 'of',\n  onNextClick: () => undefined,\n  onPreviousClick: () => undefined,\n  onFirstClick: () => undefined,\n  onLastClick: () => undefined,\n  onPageInput: () => undefined\n};","map":{"version":3,"sources":["../../../../src/components/Pagination/Navigation.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Pagination/pagination';\nimport { css } from '@patternfly/react-styles';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleDoubleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-double-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport AngleDoubleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-double-right-icon';\nimport { Button, ButtonVariant } from '../Button';\nimport { pluralize } from '../../helpers';\nimport { KeyTypes } from '../../helpers/constants';\nexport class Navigation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleNewPage = (_evt, newPage) => {\n            const { perPage, onSetPage } = this.props;\n            const startIdx = (newPage - 1) * perPage;\n            const endIdx = newPage * perPage;\n            return onSetPage(_evt, newPage, perPage, startIdx, endIdx);\n        };\n        this.state = { userInputPage: this.props.page };\n    }\n    static parseInteger(input, lastPage) {\n        // eslint-disable-next-line radix\n        let inputPage = Number.parseInt(input, 10);\n        if (!Number.isNaN(inputPage)) {\n            inputPage = inputPage > lastPage ? lastPage : inputPage;\n            inputPage = inputPage < 1 ? 1 : inputPage;\n        }\n        return inputPage;\n    }\n    onChange(event, lastPage) {\n        const inputPage = Navigation.parseInteger(event.target.value, lastPage);\n        this.setState({ userInputPage: Number.isNaN(inputPage) ? event.target.value : inputPage });\n    }\n    onKeyDown(event, page, lastPage, onPageInput) {\n        if (event.key === KeyTypes.Enter) {\n            const inputPage = Navigation.parseInteger(this.state.userInputPage, lastPage);\n            onPageInput(event, Number.isNaN(inputPage) ? page : inputPage);\n            this.handleNewPage(event, Number.isNaN(inputPage) ? page : inputPage);\n        }\n    }\n    componentDidUpdate(lastState) {\n        if (this.props.page !== lastState.page &&\n            this.props.page <= this.props.lastPage &&\n            this.state.userInputPage !== this.props.page) {\n            this.setState({ userInputPage: this.props.page });\n        }\n    }\n    render() {\n        const _a = this.props, { page, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        perPage, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onSetPage, isDisabled, itemCount, lastPage, firstPage, pagesTitle, pagesTitlePlural, toLastPage, toNextPage, toFirstPage, toPreviousPage, currPage, paginationTitle, ofWord, onNextClick, onPreviousClick, onFirstClick, onLastClick, onPageInput, className, isCompact } = _a, props = __rest(_a, [\"page\", \"perPage\", \"onSetPage\", \"isDisabled\", \"itemCount\", \"lastPage\", \"firstPage\", \"pagesTitle\", \"pagesTitlePlural\", \"toLastPage\", \"toNextPage\", \"toFirstPage\", \"toPreviousPage\", \"currPage\", \"paginationTitle\", \"ofWord\", \"onNextClick\", \"onPreviousClick\", \"onFirstClick\", \"onLastClick\", \"onPageInput\", \"className\", \"isCompact\"]);\n        const { userInputPage } = this.state;\n        return (React.createElement(\"nav\", Object.assign({ className: css(styles.paginationNav, className), \"aria-label\": paginationTitle }, props),\n            !isCompact && (React.createElement(\"div\", { className: css(styles.paginationNavControl, styles.modifiers.first) },\n                React.createElement(Button, { variant: ButtonVariant.plain, isDisabled: isDisabled || page === firstPage || page === 0, \"aria-label\": toFirstPage, \"data-action\": \"first\", onClick: event => {\n                        onFirstClick(event, 1);\n                        this.handleNewPage(event, 1);\n                        this.setState({ userInputPage: 1 });\n                    } },\n                    React.createElement(AngleDoubleLeftIcon, null)))),\n            React.createElement(\"div\", { className: styles.paginationNavControl },\n                React.createElement(Button, { variant: ButtonVariant.plain, isDisabled: isDisabled || page === firstPage || page === 0, \"data-action\": \"previous\", onClick: event => {\n                        const newPage = page - 1 >= 1 ? page - 1 : 1;\n                        onPreviousClick(event, newPage);\n                        this.handleNewPage(event, newPage);\n                        this.setState({ userInputPage: newPage });\n                    }, \"aria-label\": toPreviousPage },\n                    React.createElement(AngleLeftIcon, null))),\n            !isCompact && (React.createElement(\"div\", { className: styles.paginationNavPageSelect },\n                React.createElement(\"input\", { className: css(styles.formControl), \"aria-label\": currPage, type: \"number\", disabled: isDisabled || (itemCount && page === firstPage && page === lastPage && itemCount >= 0) || page === 0, min: lastPage <= 0 && firstPage <= 0 ? 0 : 1, max: lastPage, value: userInputPage, onKeyDown: event => this.onKeyDown(event, page, lastPage, onPageInput), onChange: event => this.onChange(event, lastPage) }),\n                (itemCount || itemCount === 0) && (React.createElement(\"span\", { \"aria-hidden\": \"true\" },\n                    ofWord,\n                    \" \",\n                    pagesTitle ? pluralize(lastPage, pagesTitle, pagesTitlePlural) : lastPage)))),\n            React.createElement(\"div\", { className: styles.paginationNavControl },\n                React.createElement(Button, { variant: ButtonVariant.plain, isDisabled: isDisabled || page === lastPage, \"aria-label\": toNextPage, \"data-action\": \"next\", onClick: event => {\n                        const newPage = page + 1 <= lastPage ? page + 1 : lastPage;\n                        onNextClick(event, newPage);\n                        this.handleNewPage(event, newPage);\n                        this.setState({ userInputPage: newPage });\n                    } },\n                    React.createElement(AngleRightIcon, null))),\n            !isCompact && (React.createElement(\"div\", { className: css(styles.paginationNavControl, styles.modifiers.last) },\n                React.createElement(Button, { variant: ButtonVariant.plain, isDisabled: isDisabled || page === lastPage, \"aria-label\": toLastPage, \"data-action\": \"last\", onClick: event => {\n                        onLastClick(event, lastPage);\n                        this.handleNewPage(event, lastPage);\n                        this.setState({ userInputPage: lastPage });\n                    } },\n                    React.createElement(AngleDoubleRightIcon, null))))));\n    }\n}\nNavigation.displayName = 'Navigation';\nNavigation.defaultProps = {\n    className: '',\n    isDisabled: false,\n    isCompact: false,\n    lastPage: 0,\n    firstPage: 0,\n    pagesTitle: '',\n    pagesTitlePlural: '',\n    toLastPage: 'Go to last page',\n    toNextPage: 'Go to next page',\n    toFirstPage: 'Go to first page',\n    toPreviousPage: 'Go to previous page',\n    currPage: 'Current page',\n    paginationTitle: 'Pagination',\n    ofWord: 'of',\n    onNextClick: () => undefined,\n    onPreviousClick: () => undefined,\n    onFirstClick: () => undefined,\n    onLastClick: () => undefined,\n    onPageInput: () => undefined\n};\n//# sourceMappingURL=Navigation.js.map"]},"metadata":{},"sourceType":"module"}