{"ast":null,"code":"const Config = require(\"../config.json\");\nclass API {\n  constructor() {\n    this.url = Config.BASE_URL;\n  }\n  async getServerStatus() {\n    const status = await fetch(`${this.url}/health`).then(resp => resp.json());\n    return status;\n  }\n  async getUrls() {\n    const urls = await fetch(`${this.url}/urls`).then(resp => resp.json());\n    return urls;\n  }\n  async addUrl(data) {\n    if (data.url.substr(0, 4) !== \"http\") data.url = \"http://\" + data.url;\n    if (data.route.substr(0, 1) !== \"/\") data.route = \"/\" + data.route;\n    const result = await fetch(`${this.url}/urls`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(resp => resp.json());\n    return result;\n  }\n}\nexport default new API();","map":{"version":3,"names":["Config","require","API","constructor","url","BASE_URL","getServerStatus","status","fetch","then","resp","json","getUrls","urls","addUrl","data","substr","route","result","method","headers","body","JSON","stringify"],"sources":["/opt/app/src/utils/api.js"],"sourcesContent":["const Config = require(\"../config.json\");\n\nclass API {\n  url = Config.BASE_URL;\n\n  async getServerStatus() {\n    const status = await fetch(`${this.url}/health`)\n      .then(resp => resp.json());\n    return status;\n  }\n\n  async getUrls() {\n    const urls = await fetch(`${this.url}/urls`)\n      .then(resp => resp.json());\n\n    return urls;\n  }\n\n  async addUrl(data) {\n    if (data.url.substr(0, 4) !== \"http\") data.url = \"http://\" + data.url;\n    if (data.route.substr(0, 1) !== \"/\") data.route = \"/\" + data.route;\n\n    const result = await fetch(`${this.url}/urls`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(resp=>resp.json());\n\n    return result;\n  }\n}\n\nexport default new API();"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAExC,MAAMC,GAAG,CAAC;EAAAC,YAAA;IAAA,KACRC,GAAG,GAAGJ,MAAM,CAACK,QAAQ;EAAA;EAErB,MAAMC,eAAeA,CAAA,EAAG;IACtB,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,GAAG,IAAI,CAACJ,GAAG,SAAS,CAAC,CAC7CK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;IAC5B,OAAOJ,MAAM;EACf;EAEA,MAAMK,OAAOA,CAAA,EAAG;IACd,MAAMC,IAAI,GAAG,MAAML,KAAK,CAAC,GAAG,IAAI,CAACJ,GAAG,OAAO,CAAC,CACzCK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;IAE5B,OAAOE,IAAI;EACb;EAEA,MAAMC,MAAMA,CAACC,IAAI,EAAE;IACjB,IAAIA,IAAI,CAACX,GAAG,CAACY,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,MAAM,EAAED,IAAI,CAACX,GAAG,GAAG,SAAS,GAAGW,IAAI,CAACX,GAAG;IACrE,IAAIW,IAAI,CAACE,KAAK,CAACD,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,EAAED,IAAI,CAACE,KAAK,GAAG,GAAG,GAAGF,IAAI,CAACE,KAAK;IAElE,MAAMC,MAAM,GAAG,MAAMV,KAAK,CAAC,GAAG,IAAI,CAACJ,GAAG,OAAO,EAAE;MAC7Ce,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;IAC3B,CAAC,CAAC,CAACN,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;IAE1B,OAAOO,MAAM;EACf;AACF;AAEA,eAAe,IAAIhB,GAAG,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}