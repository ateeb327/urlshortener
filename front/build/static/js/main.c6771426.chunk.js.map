{"version":3,"sources":["components/Link.js","images/logo.png","components/Layout.js","utils/api.js","pages/Home.js","pages/Add.js","pages/About.js","App.js","reportWebVitals.js","index.js"],"names":["Link","props","external","_jsx","href","to","target","rel","children","RouterLink","Layout","React","Component","constructor","super","activeItem","window","location","pathname","indexOf","this","state","render","PageNav","Nav","onSelect","onNavSelect","variant","_jsxs","NavList","NavItem","itemId","isActive","Header","PageHeader","logo","Brand","src","imgBrand","alt","topNav","Fragment","Page","header","mainContainerId","PageSection","PageSectionVariants","light","Config","require","url","BASE_URL","getServerStatus","fetch","then","resp","json","getUrls","addUrl","data","substr","route","method","headers","body","JSON","stringify","Home","urls","componentDidMount","Api","setState","rows","map","u","title","REDIRECTOR_URL","LinkIcon","length","Alert","isInline","Table","borders","cells","TableHeader","TableBody","Add","created","handleTextInputChange","bind","handleSubmit","newValue","e","newState","id","newUrl","api","setTimeout","Title","headingLevel","Form","isHorizontal","FormGroup","label","isRequired","fieldId","helperText","TextInput","value","type","name","onChange","ActionGroup","Button","onClick","About","status","server","database","redirector","catch","console","log","_","HOSTNAME","App","className","BrowserRouter","Switch","Route","exact","path","component","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6771426.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nfunction Link (props) {\n  if (props.external) {\n    return (\n      <a href={props.to} target=\"_blank\" rel=\"noreferrer noopener\">{props.children}</a>\n    );\n  }\n\n  return (\n    <RouterLink to={props.to}>{props.children}</RouterLink>\n  );\n}\n\nexport default Link;","export default __webpack_public_path__ + \"static/media/logo.88987fbf.png\";","import React from 'react';\nimport {\n  Brand,\n  Nav,\n  NavItem,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSectionVariants\n} from '@patternfly/react-core';\nimport Link from \"./Link\";\nimport imgBrand from \"../images/logo.png\";\n\nexport default class Layout extends React.Component {\n  constructor(props) {\n    super(props);\n    let activeItem = 0;\n    if (window.location.pathname.indexOf(\"/add\") > -1) activeItem = 1;\n    if (window.location.pathname.indexOf(\"/about\") > -1) activeItem = 2;\n    \n    this.state = {\n      activeItem\n    };\n  }\n\n  render() {\n    const { activeItem } = this.state;\n\n    const PageNav = (\n      <Nav onSelect={this.onNavSelect} aria-label=\"Nav\" variant=\"horizontal\">\n        <NavList>\n        <Link to=\"/\">\n            <NavItem itemId={0} isActive={activeItem === 0} to=\"/\">\n              Current Shorties\n            </NavItem>\n          </Link>\n          <Link to=\"/add\">\n            <NavItem itemId={1} isActive={activeItem === 1} to=\"/add\">\n              Add New\n            </NavItem>\n          </Link>\n          <Link to=\"/about\">\n            <NavItem itemId={2} isActive={activeItem === 2} to=\"/about\">\n              About\n            </NavItem>\n          </Link>\n        </NavList>\n      </Nav>\n    );\n    const Header = (\n      <PageHeader logo={<Brand src={imgBrand} alt=\"URL Shorties Logo\" />} topNav={PageNav} />\n    );\n\n    const pageId = 'main-content-page-layout-horizontal-nav';\n\n    return (\n      <React.Fragment>\n        <Page header={Header} mainContainerId={pageId}>\n          <PageSection variant={PageSectionVariants.light}>\n            {this.props.children}\n          </PageSection>\n        </Page>\n      </React.Fragment>\n    );\n  }\n}","const Config = require(\"../config.json\");\n\nclass API {\n  url = Config.BASE_URL;\n\n  async getServerStatus() {\n    const status = await fetch(`${this.url}/health`)\n      .then(resp => resp.json());\n    return status;\n  }\n\n  async getUrls() {\n    const urls = await fetch(`${this.url}/urls`)\n      .then(resp => resp.json());\n\n    return urls;\n  }\n\n  async addUrl(data) {\n    if (data.url.substr(0, 4) !== \"http\") data.url = \"http://\" + data.url;\n    if (data.route.substr(0, 1) !== \"/\") data.route = \"/\" + data.route;\n\n    const result = await fetch(`${this.url}/urls`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(resp=>resp.json());\n\n    return result;\n  }\n}\n\nexport default new API();","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport Api from \"../utils/api\";\nimport { Alert } from \"@patternfly/react-core\";\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport Link from \"../components/Link\";\nimport Config from \"../config.json\";\nimport LinkIcon from \"@patternfly/react-icons/dist/js/icons/link-icon\";\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      urls: []\n    }\n  }\n\n  async componentDidMount() {\n    let urls = await Api.getUrls();\n    this.setState({ urls });\n  }\n\n  render() {\n    const { urls } = this.state;\n    const columns = [\"Short Url\", \"Redirects To\", \"Link\"];\n    const rows = urls.map(u => {\n      return [\n        u.route, {\n          title: <Link to={u.url} external>{u.url}</Link>\n        }, {\n          title: <Link to={`${Config.REDIRECTOR_URL}${u.route}`} external><LinkIcon /></Link>\n        }\n      ];\n    });\n    return (\n      <Layout>\n        {urls.length === 0 && \n          <Alert variant=\"warning\" isInline title=\"No routes defined.\">\n            You can use the \"Add New\" link in the top navigation to add your first route.\"\n          </Alert>\n        }\n        <Table\n          aria-label=\"List of URLs\"\n          variant=\"compact\"\n          borders=\"compactBorderless\"\n          cells={columns}\n          rows={rows}\n        >\n          <TableHeader />\n          <TableBody />\n        </Table>\n      </Layout>\n    )\n  }\n}","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport { Alert, Form, FormGroup, TextInput, ActionGroup, Button, PageSection, Title } from \"@patternfly/react-core\";\nimport api from \"../utils/api\";\n\nexport default class Add extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: \"\",\n      url: \"\",\n      created: false\n    }\n\n    this.handleTextInputChange = this.handleTextInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  handleTextInputChange(newValue, e) {\n    let field = e.target.id;\n    let newState = {};\n    newState[field] = newValue;\n    this.setState(newState);\n  }\n\n  async handleSubmit() {\n    let newUrl = {\n      route: this.state.route,\n      url: this.state.url\n    }\n    await api.addUrl(newUrl);\n    this.setState({\n      route: \"\",\n      url: \"\",\n      created: true\n    });\n\n    setTimeout(() => this.setState({created: false}), 5000);\n  }\n\n  render() {\n    const { created } = this.state;\n    return (\n      <Layout>\n        <PageSection>\n          <Title headingLevel=\"h1\">Add a new redirection</Title>\n        </PageSection>\n        {created && \n        <PageSection>\n          <Alert variant=\"success\" isInline title=\"New redirection successfully created\" />\n        </PageSection>\n        }\n        <PageSection>\n          <Form isHorizontal>\n            <FormGroup label=\"Route\" isRequired fieldId=\"route\" helperText=\"Route in the redirector service (/shorturl)\">\n              <TextInput\n                  value={this.state.route}\n                  isRequired\n                  type=\"text\"\n                  id=\"route\"\n                  aria-describedby=\"Route\"\n                  name=\"route\"\n                  onChange={this.handleTextInputChange}\n                />\n            </FormGroup>\n            <FormGroup label=\"Url\" isRequired fieldId=\"url\" helperText=\"URL to redirect to (http://longurl.com/service?option=1\">\n              <TextInput\n                  value={this.state.url}\n                  isRequired\n                  type=\"text\"\n                  id=\"url\"\n                  aria-describedby=\"url\"\n                  name=\"url\"\n                  onChange={this.handleTextInputChange}\n                />\n            </FormGroup>\n            <ActionGroup>\n              <Button variant=\"primary\" onClick={this.handleSubmit}>Create Redirection</Button>\n              <Button variant=\"link\">Cancel</Button>\n            </ActionGroup>\n          </Form>\n        </PageSection>\n      </Layout>\n    )\n  }\n}","import { Alert, PageSection, Title } from \"@patternfly/react-core\";\nimport React from \"react\";\nimport Layout from \"../components/Layout\";\nimport Api from \"../utils/api\";\nimport Config from \"../config.json\";\n\nexport default class About extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      status: {\n        server: false,\n        database: false,\n        redirector: false\n      }\n    }\n  }\n\n  async componentDidMount() {\n    Api.getServerStatus()\n      .then(status => {\n        if (status) {\n          this.setState({status})\n        }\n      })\n      .catch(e => {\n        console.log(e);\n        this.setState({status: {server: false, database: false}})\n      });\n    fetch(`${Config.REDIRECTOR_URL}/health`)\n      .then(resp => resp.json())\n      .then(_ => {\n        this.setState((state) => {\n          state.status.redirector = true;\n          return state;\n        })\n      })\n      .catch(e => {\n        console.log(e);\n        this.setState(state => {\n          state.status.redirector = false;\n          return state;\n        });\n      });\n  }\n\n  render() {\n    const { status } = this.state;\n    return (\n      <Layout>\n        <PageSection>\n          <Title headingLevel=\"h1\">Server Status</Title>\n        </PageSection>\n        <PageSection>\n          <Alert variant=\"info\" isInline title=\"Hostname\">\n            <React.Fragment>{Config.HOSTNAME}</React.Fragment>\n          </Alert>\n        </PageSection>\n        <PageSection>\n          <Alert variant={status.server ? \"success\" : \"danger\"} isInline title=\"Server Status\">\n          { status.server && \n            <React.Fragment>Up and running</React.Fragment>\n          }\n          { !status.server && \n            <React.Fragment>Unreachable</React.Fragment>\n          }\n          </Alert>\n        </PageSection>\n        <PageSection>\n          <Alert variant={status.database ? \"success\" : \"danger\"} isInline title=\"Database Status\">\n          { status.database && \n            <React.Fragment>Up and running</React.Fragment>\n          }\n          { !status.database && \n            <React.Fragment>Unreachable</React.Fragment>\n          }\n          </Alert>\n        </PageSection>\n        <PageSection>\n          <Alert variant={status.redirector ? \"success\" : \"danger\"} isInline title=\"Redirection Server Status\">\n          { status.redirector && \n            <React.Fragment>Up and running</React.Fragment>\n          }\n          { !status.redirector && \n            <React.Fragment>Unreachable</React.Fragment>\n          }\n          </Alert>\n        </PageSection>\n      </Layout>\n    )\n  }\n}","import './App.css';\nimport \"@patternfly/react-core/dist/styles/base.css\";\n\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Add from \"./pages/Add\";\nimport About from \"./pages/About\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/add\" component={Add} />\n          <Route path=\"/about\" component={About} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}